{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/sys/WeaponSystem.ts"],"names":["Prefab","_decorator","cocosUtil","utilTools","constants","designManager","resManager","BaseLayer","Weapon","ccclass","property","WeaponSystem","weaponArr","onLoad","onEnable","initData","data","addWeapon","weaponId","getSaveData","weaponData","arr","loadSaveData","forArr","info","id","loadWeaponPrefab","path","Promise","resolve","reject","loadAsset","bundles","weapon","err","prefab","getWeaponInfoByType","type","i","tmp","row","getRowById","tableName","uiIndex","parseInt","lv","design","maxLv","length","weaponNum","getFirstIdByType","push","weaponLayer","node","children","weaponUtil","getComponent","forceDestroy","destroy","isValid","instantiate","addComponent","parent","init","updateLogic","dt","weaponNode","index","active"],"mappings":"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","sourcesContent":["import { Node, Prefab, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../utils/utilTools';\r\nimport { constants } from '../../data/constants';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { resManager } from '../../manager/resManager';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nimport { Weapon } from '../item/weapon/Weapon';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('WeaponSystem')\r\nexport class WeaponSystem extends BaseLayer {\r\n\r\n    weaponArr: any;\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n\r\n        this.weaponArr = [];\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n\r\n    }\r\n\r\n    initData(data: any) {\r\n        // test\r\n        // return;\r\n\r\n        // 初始武器\r\n        this.addWeapon(1, data.weaponId);\r\n    }\r\n\r\n    getSaveData() {\r\n        let weaponData: any = {};\r\n        weaponData.arr = this.weaponArr;\r\n\r\n        return weaponData;\r\n    }\r\n\r\n    loadSaveData(data: any) {\r\n        utilTools.forArr(data.arr, (info: any) => {\r\n            this.addWeapon(0, info.id);\r\n        });\r\n    }\r\n\r\n    loadWeaponPrefab(path: string) {\r\n        return new Promise((resolve, reject) => {\r\n            resManager.loadAsset(constants.bundles.weapon, path, Prefab, null, (err, prefab) => {\r\n                if (err) {\r\n                    reject();\r\n                    return;\r\n                }\r\n                resolve(prefab);\r\n            });\r\n        });\r\n    }\r\n\r\n    getWeaponInfoByType(type: number) {\r\n        for (let i in this.weaponArr) {\r\n            let tmp = this.weaponArr[i];\r\n            let row = designManager.getRowById(constants.tableName.weapon, tmp.id);\r\n            if (row.type == type) {\r\n                return tmp;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 添加武器\r\n     * @param type 武器类型 \r\n     * @param weaponId 可选，强制设置武器id\r\n     */\r\n    async addWeapon(type: number, weaponId: number = 0) {\r\n        if (weaponId > 0) {\r\n            type = designManager.getRowById(constants.tableName.weapon, weaponId).type;\r\n        }\r\n\r\n        let info = null;\r\n        let uiIndex = 0;\r\n        for (let i in this.weaponArr) {\r\n            let tmp = this.weaponArr[i];\r\n            let row = designManager.getRowById(constants.tableName.weapon, tmp.id);\r\n            if (row.type == type) {\r\n                info = tmp;\r\n                uiIndex = parseInt(i);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (info) {\r\n            // 升级\r\n            let row = designManager.getRowById(constants.tableName.weapon, info.id + 1);\r\n            if (!row || row.lv > constants.design.maxLv) {\r\n                // 已满级\r\n                return;\r\n            }\r\n            info.id++;\r\n        } else {\r\n            if (this.weaponArr.length >= constants.design.weaponNum) {\r\n                // 武器槽位已满\r\n                return;\r\n            }\r\n            // 新增\r\n            info = {};\r\n            info.id = designManager.getFirstIdByType(type);\r\n            this.weaponArr.push(info);\r\n            uiIndex = this.weaponArr.length - 1;\r\n        }\r\n\r\n        if (weaponId > 0) {\r\n            info.id = weaponId;\r\n        }\r\n\r\n        let weaponLayer = this.node.children[uiIndex];\r\n        if (!weaponLayer) {\r\n            return;\r\n        }\r\n        utilTools.forArr(weaponLayer.children, (node: Node) => {\r\n            let weaponUtil = node.getComponent(Weapon).weaponUtil;\r\n            if (weaponUtil && weaponUtil.forceDestroy) {\r\n                weaponUtil.forceDestroy();\r\n            }\r\n            node.destroy();\r\n        });\r\n\r\n        info.uiIndex = uiIndex;\r\n        let id = info.id;\r\n        let row = designManager.getRowById(constants.tableName.weapon, id);\r\n        let prefab = await this.loadWeaponPrefab(row.prefab);\r\n        if (id != info.id || !cocosUtil.isValid(this)) {\r\n            return;\r\n        }\r\n        let node = cocosUtil.instantiate(prefab);\r\n        let weapon = node.addComponent(Weapon);\r\n        node.parent = weaponLayer;\r\n        weapon.init(info);\r\n\r\n    }\r\n\r\n    updateLogic(dt: number) {\r\n        // 武器\r\n        utilTools.forArr(this.node.children, (weaponNode: Node, index: number) => {\r\n            if (!weaponNode.active) {\r\n                return;\r\n            }\r\n            let node = weaponNode.children[0];\r\n            if (!node) {\r\n                return;\r\n            }\r\n            node.getComponent(Weapon).updateLogic(dt);\r\n        });\r\n    }\r\n}\r\n\r\n"]}