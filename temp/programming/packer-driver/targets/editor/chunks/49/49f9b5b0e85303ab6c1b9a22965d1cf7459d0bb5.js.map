{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/tyqSDK/cocos/manager/tyqResManager.ts"],"names":["TyqResManager","assetManager","tyqSDK","constructor","instance","_instance","loadAsset","bundleName","path","assetType","onProgress","onComplete","bundle","getBundle","get","loadAssetFunc","load","finish","total","err","asset","log","message","loadBundle","retBundle","tyqResManager"],"mappings":";;;qGAGMA,a;;;;;;;;;;;;;AAHGC,MAAAA,Y,OAAAA,Y;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;;;AAEHF,MAAAA,a,GAAN,MAAMA,aAAN,CAAoB;AAERG,QAAAA,WAAW,GAAG,CACrB;;AACyB,mBAARC,QAAQ,GAAkB;AACxC,cAAI,KAAKC,SAAL,IAAkB,IAAtB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAIL,aAAJ,EAAjB;AACH;;AAED,iBAAO,KAAKK,SAAZ;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIC,QAAAA,SAAS,CAACC,UAAD,EAAqBC,IAArB,EAAmCC,SAAnC,EAAmDC,UAAnD,EAA0EC,UAA1E,EAAiG;AACtG,cAAIC,MAAM,GAAGX,YAAY,CAACY,SAAb,CAAuBN,UAAvB,CAAb;;AACA,cAAIK,MAAM,IAAIA,MAAM,CAACE,GAAP,CAAWN,IAAX,EAAiBC,SAAjB,CAAd,EAA2C;AACvC,gBAAIE,UAAJ,EAAgB;AACZA,cAAAA,UAAU,CAAC,IAAD,EAAOC,MAAM,CAACE,GAAP,CAAWN,IAAX,EAAiBC,SAAjB,CAAP,CAAV;AACH;;AACD;AACH;;AAED,cAAIM,aAAa,GAAG,MAAM;AACtBH,YAAAA,MAAM,CAACI,IAAP,CAAYR,IAAZ,EAAkBC,SAAlB,EAA6B,CAACQ,MAAD,EAAiBC,KAAjB,KAAmC;AAC5D,kBAAIR,UAAJ,EAAgB;AACZA,gBAAAA,UAAU,CAACO,MAAD,EAASC,KAAT,CAAV;AACH;AACJ,aAJD,EAIG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACf,kBAAID,GAAJ,EAAS;AACL;AAAA;AAAA,sCAAOE,GAAP,CAAW,gCAAgCF,GAAG,CAACG,OAA/C,EAAwDf,UAAxD,EAAoEC,IAApE,EAA0EW,GAA1E;;AACA,oBAAIR,UAAJ,EAAgB;AACZA,kBAAAA,UAAU,CAACQ,GAAD,CAAV;AACH;;AACD;AACH;;AACD,kBAAIR,UAAJ,EAAgB;AACZA,gBAAAA,UAAU,CAAC,IAAD,EAAOS,KAAP,CAAV;AACH;AACJ,aAfD;AAgBH,WAjBD;;AAmBA,cAAI,CAACR,MAAL,EAAa;AACTX,YAAAA,YAAY,CAACsB,UAAb,CAAwBhB,UAAxB,EAAoC,CAACY,GAAD,EAAMK,SAAN,KAAoB;AACpD,kBAAIL,GAAJ,EAAS;AACL,oBAAIR,UAAJ,EAAgB;AACZA,kBAAAA,UAAU,CAACQ,GAAD,CAAV;AACH;;AACD;AACH;;AACDP,cAAAA,MAAM,GAAGY,SAAT;AACAT,cAAAA,aAAa;AAChB,aATD;AAUA;AACH;;AAEDA,UAAAA,aAAa;AAChB;;AA/De,O;AAAdf,MAAAA,a,CACaK,S;;+BAiENoB,a,GAAgBzB,aAAa,CAACI,Q","sourcesContent":["import { assetManager } from \"cc\";\r\nimport { tyqSDK } from \"../../tyqSDK\";\r\n\r\nclass TyqResManager {\r\n    private static _instance: TyqResManager;\r\n    private constructor() {\r\n    }\r\n    public static get instance(): TyqResManager {\r\n        if (this._instance == null) {\r\n            this._instance = new TyqResManager();\r\n        }\r\n\r\n        return this._instance;\r\n    }\r\n\r\n    /**\r\n     * 从bundle中加载某个资源，优先使用缓存中的\r\n     * @param bundleName bundle名称\r\n     * @param path 资源路径\r\n     * @param assetType 资源类型\r\n     * @param onProgress 加载进度回调\r\n     * @param onComplete 加载完成回调\r\n     */\r\n    loadAsset(bundleName: string, path: string, assetType: any, onProgress?: Function, onComplete?: Function) {\r\n        let bundle = assetManager.getBundle(bundleName);\r\n        if (bundle && bundle.get(path, assetType)) {\r\n            if (onComplete) {\r\n                onComplete(null, bundle.get(path, assetType));\r\n            }\r\n            return;\r\n        }\r\n\r\n        let loadAssetFunc = () => {\r\n            bundle.load(path, assetType, (finish: number, total: number) => {\r\n                if (onProgress) {\r\n                    onProgress(finish, total);\r\n                }\r\n            }, (err, asset) => {\r\n                if (err) {\r\n                    tyqSDK.log(\"ResManager.loadAsset error:\" + err.message, bundleName, path, err);\r\n                    if (onComplete) {\r\n                        onComplete(err);\r\n                    }\r\n                    return;\r\n                }\r\n                if (onComplete) {\r\n                    onComplete(null, asset);\r\n                }\r\n            });\r\n        };\r\n\r\n        if (!bundle) {\r\n            assetManager.loadBundle(bundleName, (err, retBundle) => {\r\n                if (err) {\r\n                    if (onComplete) {\r\n                        onComplete(err);\r\n                    }\r\n                    return;\r\n                }\r\n                bundle = retBundle;\r\n                loadAssetFunc();\r\n            });\r\n            return;\r\n        }\r\n\r\n        loadAssetFunc();\r\n    }\r\n}\r\n\r\nexport const tyqResManager = TyqResManager.instance;\r\n\r\n"]}