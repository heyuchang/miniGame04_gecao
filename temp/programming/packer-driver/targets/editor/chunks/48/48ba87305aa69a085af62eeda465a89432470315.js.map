{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/tyqSDK/network/ServerCtr.ts"],"names":["Component","director","_decorator","Wechat","GLoginState","GNetCmd","GNetConst","GameStorage","WmSocket","ServerState","Normal","New","Hot","Maintain","ccclass","property","ServerCtr","serverId","account","password","authCode","token","regionDataList","uid","regionId","nickName","isLogin","avatar","loginState","noYet","serverDataVersion","serverData","regionList","serverList","GetInstance","instance","InitServerCtr","getStringDisk","parseInt","on","GetInviteCode","toString","onMessageEvent","dataVersion","getInt","val","setInt","addDataVersion","CheckIsHaveAccount","CheckHaveDataById","i","length","data","Account","str","setStringDisk","PassWord","AuthCode","ServerId","id","UpdateRegions","regions","key","JSON","parse","UpdateServers","servers","GetServerData","GetStateIcon","status","GetLastNewServer","did","Number","reqConnect","getInstance","connect","reqRegister","UserRegister","send","reqLogin","UserLogin","reqLoginByAccount","reqRegionList","GetRegionList","reqRegionData","GetRegionData","console","log","reqSetFriendCode","shareUserId","loginWithAccount","SetFriendCode","reqGetFriendVal","GetFriendVal","value","ResSuccess","error","reqCloudSaveManual","wxLoginBegin","failCb","wx","login","success","loginResult","warn","ReqWxSession","jscode","code","fail","res","msg","errMsg","wxGetSetting","then","hasOwnProperty","wxLogin","authSetting","catch","loginWithoutAccount","getWxLoginResult","err","userInfo","avatarUrl","UnloadAvatarUrl","UploadAvatar"],"mappings":"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","sourcesContent":["\r\n//normal， new，hot，maintain\r\nexport const ServerState = {\r\n    Normal: 'normal',\r\n    New: 'new',\r\n    Hot: 'hot',\r\n    Maintain: 'maintain'\r\n}\r\n\r\nimport { Component, director, _decorator } from 'cc';\r\nimport { Wechat } from '../platform/wechat/wechat';\r\nimport { GLoginState, GNetCmd, GNetConst } from './conf';\r\nimport { GameStorage } from './gameStorage';\r\nimport { WmSocket } from './wmsocket';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ServerCtr')\r\nexport default class ServerCtr extends Component {\r\n\r\n    private static instance: ServerCtr = null!;\r\n\r\n    public static GetInstance() {\r\n        if (!this.instance) {\r\n            this.instance = new ServerCtr();\r\n            this.instance.InitServerCtr();\r\n        }\r\n        return this.instance;\r\n    }\r\n    serverId: number = 1;\r\n    account: string = '';\r\n    password: string = 'hsmnq2021';\r\n    authCode: string = \"\";\r\n    token: string = '';\r\n    regionDataList: any[] = [];\r\n    uid: string = '';\r\n    regionId: string = '';\r\n    nickName: string = '测试账号';\r\n    isLogin: boolean = false;\r\n    avatar: string = '';\r\n    loginState: GLoginState = GLoginState.noYet; //服务端是否加载完成,有账号登录，无账号登录\r\n    serverDataVersion: number = 0  //服务端的版本号\r\n    serverData: any = {} //服务端数据\r\n\r\n    // regions\":{\"1\":\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"先行服\\\"}\",\"2\":\"{\\\"id\\\":\\\"2\\\",\\\"name\\\":\\\"圣魂村\\\"}\"},\r\n    // \"servers\":{\"1\":\"{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"先行服1\\\",\\\"region\\\":\\\"1\\\",\\\"status\\\":\\\"normal\\\",\\\"years\\\":\\\"2021-07-21 08:00:00\\\"}\",\r\n    // \"2\":\"{\\\"id\\\":\\\"2\\\",\\\"name\\\":\\\"先行服2\\\",\\\"region\\\":\\\"1\\\",\\\"status\\\":\\\"normal\\\",\\\"years\\\":\\\"2021-07-21 09:00:00\\\"}\",\r\n    // \"3\":\"{\\\"id\\\":\\\"3\\\",\\\"name\\\":\\\"圣魂村1\\\",\\\"region\\\":\\\"2\\\",\\\"status\\\":\\\"normal\\\",\\\"years\\\":\\\"2021-07-21 10:00:00\\\"}\",\r\n    // \"4\":\"{\\\"id\\\":\\\"4\\\",\\\"name\\\":\\\"圣魂村2\\\",\\\"region\\\":\\\"2\\\",\\\"status\\\":\\\"normal\\\",\\\"years\\\":\\\"2021-07-21 11:00:00\\\"}\",\r\n    // \"5\":\"{\\\"id\\\":\\\"5\\\",\\\"name\\\":\\\"圣魂村3\\\",\\\"region\\\":\\\"2\\\",\\\"status\\\":\\\"normal\\\",\\\"years\\\":\\\"2021-07-21 12:00:00\\\"}\",\"isUpdated\":\"0\"}\r\n    regionList: any = {};\r\n    serverList: any = {};\r\n\r\n    InitServerCtr() {\r\n        this.account = GameStorage.getStringDisk('login_account', '');\r\n        this.password = GameStorage.getStringDisk('login_password', this.password);\r\n        this.authCode = GameStorage.getStringDisk('login_authCode', this.authCode);\r\n        this.serverId = parseInt(GameStorage.getStringDisk('login_serverId', \"\"));\r\n\r\n        director.on(GNetCmd.GetInviteCode.toString(), this.onMessageEvent, this);\r\n    }\r\n\r\n    //数据版本设置\r\n    get dataVersion() {\r\n        return GameStorage.getInt(\"dataVersion\", 0)\r\n    }\r\n    set dataVersion(val: number) {\r\n        if (val > this.dataVersion) {\r\n            GameStorage.setInt(\"dataVersion\", val)\r\n        }\r\n    }\r\n    addDataVersion(val: number = 1) {\r\n        GameStorage.setInt(\"dataVersion\", GameStorage.getInt(\"dataVersion\", 0) + val)\r\n    }\r\n\r\n    CheckIsHaveAccount() {\r\n        if (!this.account || this.account == '') {\r\n            // 没有账号\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    CheckHaveDataById(regionId: number) {\r\n        for (let i = 0; i < this.regionDataList.length; i++) {\r\n            const data = this.regionDataList[i];\r\n            if (data.regionId == regionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get Account() {\r\n        return this.account;\r\n    }\r\n\r\n    set Account(str: string) {\r\n        this.account = str;\r\n        GameStorage.setStringDisk('login_account', this.account);\r\n    }\r\n\r\n    get PassWord() {\r\n        return this.password;\r\n    }\r\n\r\n    set PassWord(str: string) {\r\n        this.password = str;\r\n        GameStorage.setStringDisk('login_password', this.password);\r\n    }\r\n    get AuthCode() {\r\n        return this.authCode;\r\n    }\r\n\r\n    set AuthCode(str: string) {\r\n        this.authCode = str;\r\n        GameStorage.setStringDisk('login_authCode', this.authCode);\r\n    }\r\n\r\n    get ServerId() {\r\n        return this.serverId;\r\n    }\r\n    set ServerId(id: number) {\r\n        this.serverId = id;\r\n        GameStorage.setStringDisk('login_serverId', this.serverId + \"\");\r\n    }\r\n\r\n    UpdateRegions(regions: any) {\r\n        for (const key in regions) {\r\n            const data = regions[key];\r\n            this.regionList[key] = JSON.parse(data);\r\n        }\r\n    }\r\n\r\n    UpdateServers(servers: any) {\r\n        for (const key in servers) {\r\n            const data = servers[key];\r\n\r\n            this.serverList[key] = JSON.parse(data);\r\n            // if (gl.debug) {\r\n            //     switch (Number(this.serverList[key].id)) {\r\n            //         case 1:\r\n            //             this.serverList[key].status ='maintain'; \r\n            //             break;\r\n            //         case 2:\r\n            //             this.serverList[key].status = 'hot';\r\n            //             break;\r\n            //         case 5:\r\n            //             this.serverList[key].status = 'new';\r\n            //             break;\r\n            //         default:\r\n\r\n            //             break;\r\n            //     }\r\n            // }\r\n\r\n        }\r\n    }\r\n\r\n    public GetServerData(serverId: number) {\r\n        for (const key in this.serverList) {\r\n            const data = this.serverList[key];\r\n            if (data.id == serverId) {\r\n                return data;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    public GetStateIcon(status: string) {\r\n        switch (status) {\r\n            case ServerState.Normal:\r\n                return;\r\n            case ServerState.New:\r\n                return 'fm_tb_xin';\r\n            case ServerState.Hot:\r\n                return 'fm_tb_bao';\r\n            case ServerState.Maintain:\r\n                return 'fm_tb_wei';\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 获取最新的不在维护中服务器\r\n    public GetLastNewServer() {\r\n        let id = 1;\r\n        for (const key in this.serverList) {\r\n            const data = this.serverList[key];\r\n            let did = Number(data.id)\r\n            if (did > id && data.status != ServerState.Maintain) {\r\n                id = did;\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n\r\n    public reqConnect() {\r\n        WmSocket.getInstance().connect();\r\n    }\r\n\r\n    public reqRegister(account: any, password: any) {\r\n        let data = {\r\n            \"cmd\": GNetCmd.UserRegister,\r\n            \"lang\": \"zh\",\r\n            \"account\": account,\r\n            \"password\": password,\r\n        }\r\n        WmSocket.getInstance().send({ \"data\": data });\r\n    }\r\n\r\n    public reqLogin() {\r\n        let data = {\r\n            \"cmd\": GNetCmd.UserLogin,\r\n            \"lang\": \"zh\",\r\n            \"account\": this.account,\r\n            \"password\": this.password,\r\n            'nickName': this.nickName + this.account\r\n        }\r\n        WmSocket.getInstance().send({ \"data\": data });\r\n    }\r\n\r\n    public reqLoginByAccount(account: string, password: string, authCode: string) {\r\n        let data = {\r\n            \"cmd\": GNetCmd.UserLogin,\r\n            \"lang\": \"zh\",\r\n            \"account\": account,\r\n            \"password\": password,\r\n            \"authCode\": authCode,\r\n            'nickName': this.nickName + this.account\r\n        }\r\n        WmSocket.getInstance().send({ \"data\": data });\r\n    }\r\n\r\n    public reqRegionList() {\r\n        let data = {\r\n            \"cmd\": GNetCmd.GetRegionList,\r\n            \"lang\": \"zh\",\r\n            \"token\": this.token,\r\n        }\r\n        WmSocket.getInstance().send({ \"data\": data });\r\n    }\r\n\r\n    public reqRegionData() {\r\n        // if (!this.ServerId || this.ServerId == 0) {\r\n        //     // Notifications.emit(GDef.wdEvent.showTip, {msg:'请选择区服'})\r\n        //     return;\r\n        // }\r\n        this.ServerId = 1 //默认选一个区服\r\n        let data = {\r\n            \"cmd\": GNetCmd.GetRegionData,\r\n            \"lang\": \"zh\",\r\n            \"token\": this.token,\r\n            \"version\": ServerCtr.GetInstance().dataVersion,\r\n            \"regionId\": this.ServerId.toString()\r\n        }\r\n        console.log(\"发送服务端数据请求---11\", data)\r\n        WmSocket.getInstance().send({ \"data\": data });\r\n    }\r\n\r\n    //好友链接登录后，调用此接口建立关联关系\r\n    public reqSetFriendCode(shareUserId: string) {\r\n        if (ServerCtr.GetInstance().loginState != GLoginState.loginWithAccount) {\r\n            return\r\n        }\r\n        let data = {\r\n            \"cmd\": GNetCmd.SetFriendCode,\r\n            \"lang\": \"zh\",\r\n            \"token\": this.token,\r\n            \"InviteCode\": shareUserId,\r\n        }\r\n        console.log(\"发送服务端数据请求 -- 设置好友邀请码---11\", data)\r\n        // var m = map[string]interface{}{ //不需要处理返回\r\n        //     \"cmd\":    proto.SetFriendCode,\r\n        //     \"status\": util.RES_MSG_SUCCESS,\r\n        // }\r\n        WmSocket.getInstance().send({ \"data\": data });\r\n    }\r\n\r\n    //获得好友功能相关数据\r\n    public reqGetFriendVal() {\r\n        if (ServerCtr.GetInstance().loginState != GLoginState.loginWithAccount) {\r\n            return\r\n        }\r\n        let data = {\r\n            \"cmd\": GNetCmd.GetFriendVal,\r\n            \"lang\": \"zh\",\r\n            \"token\": this.token,\r\n            \"keys\": \"friendPassCnt,videoCalCnt\", //相关参数\r\n            \"rules\": \"total,total\", //相关规则\r\n        }\r\n        console.log(\"发送服务端数据请求 -- 获得好友功能相关数据---11\", data)\r\n        // { 返回值参考\r\n        //     \"cmd\":        proto.SetFriendCode,\r\n        //     \"friendCnt\":  cnt,\r\n        //     \"friendData\": util.MapToJSONF(dataMap),\r\n        //     \"status\":     util.RES_MSG_SUCCESS,\r\n        // }\r\n        WmSocket.getInstance().send({ \"data\": data });\r\n    }\r\n\r\n    public onMessageEvent(value) {\r\n        if (value) {\r\n            console.log(\"处理分享的消息:\", value);\r\n            if (value.status != GNetConst.ResSuccess) {\r\n                console.error(\"服务端响应失败~!\")\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // public reqUploadOldPlayerData(isFirst:boolean = true){\r\n    //     if(Const.isActiveMemoryTmp) return\r\n    //     let datas = GameStorage.getAll(isFirst);\r\n    //     // 大数据拆分\r\n    //     console.log(\"大数据要拆分开....:\",datas);\r\n\r\n    //     // 全部发送上传\r\n    //     for (const key in datas) {\r\n    //         const value = datas[key];\r\n    //         // cc.sys.localStorage.setItem(key,value);\r\n    //         this.reqCloudSaveManual(key,value,true);\r\n    //     }\r\n    // }\r\n\r\n    public reqCloudSaveManual(key: string, val: any) {\r\n        // CronCtr.getInstance().cloudSaveManual(key,val);\r\n    }\r\n\r\n    public wxLoginBegin(failCb?: Function) {\r\n        wx.login({\r\n            success(loginResult) {\r\n                console.warn(\"-----微信登录--\", loginResult);\r\n                let data = {\r\n                    \"cmd\": GNetCmd.ReqWxSession,\r\n                    \"lang\": \"zh\",\r\n                    \"channel\": \"wx\",\r\n                    jscode: loginResult.code,\r\n                };\r\n                console.warn('发送登录数据：', data);\r\n                WmSocket.getInstance().send({ \"data\": data });\r\n            },\r\n            fail(res) {\r\n                let msg = \"登录失败：\" + res.errMsg;\r\n                if (failCb) failCb(msg);\r\n            }\r\n        });\r\n        return;\r\n\r\n        Wechat.wxGetSetting().then((res: any) => {\r\n            //授权登录，走流程\r\n            console.warn(\"微信授权结果12---\", res, res['userInfo'])\r\n            if (res.hasOwnProperty(\"userInfo\")) {\r\n                ServerCtr.GetInstance().wxLogin() //第一次授权\r\n            }\r\n            if (res.hasOwnProperty(\"authSetting\")) {\r\n                let authSetting = res.authSetting;\r\n                if (authSetting['scope.userInfo']) {//第二次授权\r\n                    ServerCtr.GetInstance().wxLogin()\r\n                }\r\n            }\r\n\r\n        }).catch((res) => {\r\n            //没有授权，直接登录\r\n            console.warn(\"没有账号登录---\",)\r\n            this.loginState = GLoginState.loginWithoutAccount\r\n        })\r\n    }\r\n\r\n    public wxLogin() {\r\n        //新方案\r\n        Wechat.getWxLoginResult((err: any, loginResult: any) => {\r\n            if (err) {\r\n                // EventMgr.getInstance().event('tipshow', '获取用户信息失败');\r\n                // App.ui.ShowPanel(\"WxScopeTipsPanel\");\r\n                console.error('登录数据err：', loginResult);\r\n                return;\r\n            }\r\n            console.log('登录数据info：', loginResult);\r\n            this.nickName = loginResult.userInfo.nickName;\r\n            this.avatar = loginResult.userInfo.avatarUrl;\r\n            // let wxEncrypted = loginResult.encryptedData;\r\n            // let wxIv = loginResult.iv;\r\n            // let wxCode = loginResult.code;\r\n            // let wxUserInfo = loginResult.userInfo;\r\n            let data = {\r\n                \"cmd\": GNetCmd.ReqWxSession,\r\n                \"lang\": \"zh\",\r\n                \"channel\": \"wx\",\r\n                jscode: loginResult.code,\r\n                nickName: this.nickName,\r\n                // wcencrypted: loginResult.encryptedData,\r\n                // wciv: loginResult.iv\r\n            };\r\n            console.warn('发送登录数据：', data);\r\n            WmSocket.getInstance().send({ \"data\": data });\r\n        });\r\n    }\r\n\r\n    public UnloadAvatarUrl() {\r\n        let data = {\r\n            \"cmd\": GNetCmd.UploadAvatar,\r\n            \"lang\": \"zh\",\r\n            \"token\": this.token,\r\n            \"avatar\": this.avatar,\r\n        }\r\n        WmSocket.getInstance().send({ \"data\": data });\r\n    }\r\n}\r\n"]}