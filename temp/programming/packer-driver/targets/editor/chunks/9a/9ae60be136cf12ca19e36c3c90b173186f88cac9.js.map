{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/layer/PatrolLayer.ts"],"names":["Button","instantiate","Label","Node","Prefab","sp","Sprite","tween","v3","_decorator","CountTimeUtil","utilTools","constants","audioManager","designManager","RedPointLogicMgr","UserData","PropItemPrefab","BaseUILayer","ccclass","property","PatrolLayer","type","_rewardArr","onLoad","handNode","active","start","initBtnPatrol","addCoinlabel","string","config","towerCoin","addExplabel","towerExp","maxPatrolTimelabel","towerTop","curPatrolTimelabel","getTimeStrChinese","getInstance","getPatrolTime","rewardArr","getPatrolReward","forEach","element","item","propIten","getComponent","setView","Id","Num","Type_UnWear","setScale","addPropLayer","addChild","monster","show","set","position","call","Skeleton","animation","loop","to","delay","hide","union","repeatForever","curTime","getPatrolState","btnPatrol","interactable","grayscale","self","getChildByName","setTime","ins","setRPointView","onGetRewardNormal","playEffect","getCurPatrolData","showGetReward","onGetRewardVideo","openLayer","layers","PatrolFastLayer","closeLayer"],"mappings":"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","sourcesContent":["import { Button, instantiate, Label, Node, Prefab, sp, Sprite, tween, v3, _decorator } from 'cc';\r\nimport { CountTimeUtil } from '../../../utils/CountTimeUtil';\r\nimport { utilTools } from '../../../utils/utilTools';\r\nimport { constants } from '../../data/constants';\r\nimport { audioManager } from '../../manager/audioManager';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { RedPointLogicMgr } from '../../manager/RedPointLogicMgr';\r\nimport { UserData } from '../../model/UserData';\r\nimport { PropItemPrefab } from '../item/PropItemPrefab';\r\n\r\nimport { BaseUILayer } from './BaseUILayer';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PatrolLayer')\r\nexport class PatrolLayer extends BaseUILayer {\r\n\r\n\r\n    // @property({ type: Node }) musicToggle: Node = null;\r\n    @property({ type: Node }) btnPatrol: Node = null;\r\n    @property({ type: Label }) patrolTimelabel: Label = null;\r\n    @property({ type: Label }) addCoinlabel: Label = null;\r\n    @property({ type: Label }) addExplabel: Label = null;\r\n    @property({ type: Node }) addPropLayer: Node = null;\r\n    @property({ type: Label }) maxPatrolTimelabel: Label = null;\r\n    @property({ type: Label }) curPatrolTimelabel: Label = null;\r\n\r\n    @property({ type: Prefab }) propIten: Prefab = null;\r\n\r\n    @property({ type: Node }) monster: Node = null;\r\n\r\n\r\n    @property({ type: Node }) handNode: Node = null;\r\n\r\n    _rewardArr = []\r\n\r\n    onLoad() {\r\n        super.onLoad()\r\n        this.handNode.active = false;\r\n    }\r\n\r\n\r\n\r\n    start() {\r\n        this.initBtnPatrol()\r\n        this.addCoinlabel.string = (designManager.config.towerCoin * 60) + \"/小时\"\r\n        this.addExplabel.string = (designManager.config.towerExp * 60) + \"/小时\"\r\n        this.maxPatrolTimelabel.string = \"最长巡逻时间\" + (designManager.config.towerTop / 60) + \"小时\"\r\n\r\n        this.curPatrolTimelabel.string = \"巡逻时间：\" + utilTools.getTimeStrChinese(UserData.getInstance().getPatrolTime() * 1000, false)\r\n\r\n        let rewardArr = UserData.getInstance().getPatrolReward()\r\n        this._rewardArr = rewardArr\r\n        rewardArr.forEach(element => {\r\n            let item = instantiate(this.propIten)\r\n            item.getComponent(PropItemPrefab).setView(element.Id, element.Num, PropItemPrefab.Type_UnWear)\r\n            item.getComponent(PropItemPrefab).setScale(100)\r\n            this.addPropLayer.addChild(item)\r\n        });\r\n        let monster = this.monster\r\n        tween(this.monster).show().set({ position: v3(222, -95, 0) }).call(function () {\r\n            monster.getComponent(sp.Skeleton).animation = \"walk\"\r\n            monster.getComponent(sp.Skeleton).loop = true\r\n        }).to(1, { position: v3(50, -95, 0) }).call(function () {\r\n            monster.getComponent(sp.Skeleton).animation = \"die\"\r\n            monster.getComponent(sp.Skeleton).loop = false\r\n        }).delay(0.3).hide().delay(0.8).union().repeatForever().start()\r\n    }\r\n\r\n    initBtnPatrol() {\r\n        let curTime = UserData.getInstance().getPatrolState()\r\n        if (curTime > 0) {\r\n            this.btnPatrol.getComponent(Button).interactable = false\r\n            this.btnPatrol.getComponent(Sprite).grayscale = true\r\n            let self = this\r\n            this.btnPatrol.getChildByName(\"Label\").getComponent(CountTimeUtil).setTime(curTime, function () {\r\n                self.btnPatrol.getComponent(Button).interactable = true\r\n                self.btnPatrol.getComponent(Sprite).grayscale = false\r\n                self.btnPatrol.getChildByName(\"Label\").getComponent(Label).string = \"领 取\"\r\n            })\r\n            RedPointLogicMgr.ins().setRPointView(this.btnPatrol, null, false)\r\n        } else {\r\n            RedPointLogicMgr.ins().setRPointView(this.btnPatrol, null, true)\r\n            this.btnPatrol.getChildByName(\"Label\").getComponent(Label).string = \"领 取\"\r\n            this.handNode.active = true;\r\n        }\r\n    }\r\n\r\n    onGetRewardNormal() {\r\n        audioManager.playEffect(\"btnClick\")\r\n        this.handNode.active = false;\r\n\r\n        UserData.getInstance().getCurPatrolData()\r\n        this.showGetReward(this._rewardArr)\r\n        this.initBtnPatrol()\r\n        this.curPatrolTimelabel.string = \"巡逻时间：\" + utilTools.getTimeStrChinese(UserData.getInstance().getPatrolTime() * 1000, false)\r\n\r\n        //   this.playCoinFlyAnim(10, v3(0,0,0), v3(0,600,0),null,0)\r\n    }\r\n\r\n    onGetRewardVideo() {\r\n        audioManager.playEffect(\"btnClick\")\r\n        if (this.handNode.active) {\r\n            return;\r\n        }\r\n\r\n        this.openLayer(constants.layers.PatrolFastLayer)\r\n        // sdkManager.openAd(\"快速巡逻\", (state: number) => {\r\n        //     if (state == 1) {\r\n        //         UserData.getInstance().getPatrolRewardByTime(designManager.config.towerPressTime * 60)\r\n        //         this.showGetReward(this._rewardArr)\r\n        //     }\r\n        // })\r\n        //   cc.find('Canvas').addChild(coin);\r\n        //   this.playCoinFlyAnim(10, v3(0,0,0), v3(0,600,0),null,0)\r\n    }\r\n\r\n    closeLayer() {\r\n        audioManager.playEffect(\"btnClick\")\r\n        if (this.handNode.active) {\r\n            return;\r\n        }\r\n\r\n        super.closeLayer()\r\n    }\r\n\r\n}\r\n\r\n"]}