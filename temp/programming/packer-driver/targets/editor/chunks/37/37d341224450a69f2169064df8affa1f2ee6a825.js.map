{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/manager/designManager.ts"],"names":["DesignManager","JsonAsset","constants","resManager","constructor","tb2Arr","tb2Obj","tbType2Arr","config","instance","_instance","loadAllDesignTable","onProgress","onComplete","loadAsset","bundles","design","percent","err","asset","json","tbName","tbData","initTable","releaseAsset","i","row","id","hasOwnProperty","type","tmpArr","push","name","val","val2","getTable","tableName","getRowById","getRowsByType","getLastRow","tb","length","getFirstIdByType","designManager"],"mappings":"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","sourcesContent":["import { JsonAsset } from \"cc\";\r\nimport { constants } from \"../data/constants\";\r\nimport { resManager } from \"./resManager\";\r\n\r\nclass DesignManager {\r\n\r\n    private static _instance: DesignManager;\r\n    private constructor() { };\r\n    public static get instance(): DesignManager {\r\n        if (!this._instance) {\r\n            this._instance = new DesignManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    // 原始对象 {表名:[记录1]]}\r\n    private tb2Arr: object = {};\r\n    // id索引(唯一)对象 {表名:{id:记录}}\r\n    private tb2Obj: object = {};\r\n    // type索引(一对多) {表名:{type:[记录]}\r\n    private tbType2Arr: object = {};\r\n\r\n    // 零散数据表\r\n    public config: any = {};\r\n\r\n    loadAllDesignTable(onProgress?: Function, onComplete?: Function) {\r\n        resManager.loadAsset(constants.bundles.design, \"design\", JsonAsset, (percent: number) => {\r\n            if (onProgress) {\r\n                onProgress(percent);\r\n            }\r\n        }, (err, asset) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n            this.tb2Arr = asset.json;\r\n\r\n            // 数据格式化\r\n            for (let tbName in this.tb2Arr) {\r\n                let tbData = this.tb2Arr[tbName];\r\n                this.initTable(tbName, tbData);\r\n            }\r\n\r\n            // 释放资源\r\n            resManager.releaseAsset(asset);\r\n\r\n            if (onComplete) {\r\n                onComplete();\r\n            }\r\n        });\r\n    }\r\n\r\n    initTable(tbName: string, tbData: object) {\r\n        this.tb2Obj[tbName] = {};\r\n        for (let i in tbData) {\r\n            let row = tbData[i];\r\n            // id索引\r\n            this.tb2Obj[tbName][row.id] = row;\r\n            if (row.hasOwnProperty(\"type\") && row.type != \"\" && row.type != null) {\r\n                // type索引\r\n                if (!this.tbType2Arr[tbName]) {\r\n                    this.tbType2Arr[tbName] = {};\r\n                }\r\n                if (!this.tbType2Arr[tbName][row.type]) {\r\n                    this.tbType2Arr[tbName][row.type] = [];\r\n                }\r\n                let tmpArr = this.tbType2Arr[tbName][row.type];\r\n                tmpArr.push(row);\r\n            }\r\n            if (tbName == \"config\") {\r\n                this.config[row.name] = row.val || row.val2 ;\r\n            }\r\n        }\r\n    }\r\n\r\n    getTable(tableName: string) {\r\n        return this.tb2Arr[tableName];\r\n    }\r\n\r\n    getRowById(tableName: string, id: number) {\r\n        return this.tb2Obj[tableName][id];\r\n    }\r\n\r\n    getRowsByType(tableName: string, type: number | string) {\r\n        if (this.tbType2Arr[tableName] && this.tbType2Arr[tableName][type]) {\r\n            return this.tbType2Arr[tableName][type];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    getLastRow(tableName: string) {\r\n        let tb = this.getTable(tableName);\r\n        return tb[tb.length - 1];\r\n    }\r\n\r\n    getFirstIdByType(type: number) {\r\n        return type * 10 + 1;\r\n    }\r\n\r\n}\r\n\r\nexport const designManager = DesignManager.instance;\r\n\r\n"]}