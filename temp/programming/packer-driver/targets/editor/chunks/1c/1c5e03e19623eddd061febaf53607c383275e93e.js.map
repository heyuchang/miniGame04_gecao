{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/layer/GuessGameLayer.ts"],"names":["instantiate","Label","Node","Sprite","SpriteFrame","tween","v3","_decorator","tyqSDK","constants","designManager","eventManager","UserData","BaseUILayer","ccclass","property","GuessGameLayer","type","_curSelectGuess","_curSelectBet","_index","_dtTime","_isStartRun","onLoad","onEnable","addTopUILayer","fitNodeWidget","btnlayer","onDisable","off","initGuess","onDestroy","start","on","stone1","config","console","log","index","items","getChildByName","getComponent","string","closeBless","closeLayer","selectBetNode","removeAllChildren","armNodeGuess","active","selectGuess","selectGuessNode","removeFromParent","itemLayer","guessLayer","tipLabel","node","onSelectBet","event","data","children","length","selectItem","addChild","to","position","onSelectBtn","toast","curBet","propItem","Id","Num","getInstance","checkUseProp","parseInt","openResult","result","Math","floor","random","str","spriteFrame","guessSprite","stoneDraw","multiplier","getRewardProp","openLayer","layers","GuessResultLayer","propArr","myGuess","otherGuess","update","dt","selectBet","eventSendCustomEvent"],"mappings":"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","sourcesContent":["import { instantiate, Label, Node, Sprite, SpriteFrame, tween, v3, _decorator } from 'cc';\r\nimport { tyqSDK } from '../../../tyqSDK/tyqSDK';\r\nimport { constants } from '../../data/constants';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { eventManager } from '../../manager/eventManager';\r\nimport { PropItem, UserData } from '../../model/UserData';\r\nimport { BaseUILayer } from './BaseUILayer';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GuessGameLayer')\r\nexport class GuessGameLayer extends BaseUILayer {\r\n\r\n    @property({ type: Node }) btnClose: Node = null;\r\n\r\n    @property(Node) armNodeGuess: Node = null;\r\n    @property(Node) selectBetNode: Node = null;\r\n\r\n    @property(Node) itemLayer: Node = null;\r\n    @property(Node) selectGuessNode: Node = null;\r\n    @property(Node) guessLayer: Node = null;\r\n\r\n\r\n    @property(Label) tipLabel: Label = null;\r\n    @property({ type: Node }) btnlayer: Node = null;\r\n\r\n\r\n    @property(SpriteFrame) guessSprite: SpriteFrame[] = [];\r\n\r\n    @property(Node) items: Node[] = [];\r\n    @property(Node) guessItems: Node[] = [];\r\n\r\n    _curSelectGuess = -1\r\n    _curSelectBet = -1\r\n\r\n\r\n\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        this.addTopUILayer(\"TopUILayer\")\r\n        this.fitNodeWidget(this.btnlayer, 30)\r\n\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n        eventManager.off(\"initGuess\",this.initGuess,this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    start() {\r\n        ///   console.log(\"tyqSDK.showCustomRectCenterAd\")\r\n        eventManager.on(\"initGuess\",this.initGuess,this)\r\n\r\n        let stone1 = designManager.config[\"stone1\"]\r\n        console.log(\"stone1 = \", stone1)\r\n        for (let index = 0; index < 6; index++) {\r\n            if (stone1[index] && this.items[index]) {\r\n                this.items[index].getChildByName(\"numLab\").getComponent(Label).string = \"\" + stone1[index][1]\r\n                //\tthis.items[index].getChildByName(\"gou\").active = false\r\n            }\r\n        }\r\n    }\r\n\r\n    closeBless() {\r\n        this.closeLayer()\r\n    }\r\n\r\n    initGuess() {\r\n        this.selectBetNode.removeAllChildren()\r\n        this.armNodeGuess.active = false\r\n        let selectGuess = this.selectGuessNode.getChildByName(\"selectGuess\")\r\n        if (selectGuess) {\r\n            selectGuess.removeFromParent()\r\n        }\r\n        this._index = 0\r\n        this._dtTime = 0\r\n        this._isStartRun = false\r\n\r\n        this._curSelectGuess = -1\r\n        this.itemLayer.active = true\r\n        this.guessLayer.active = true\r\n\r\n        this.tipLabel.node.active = true\r\n        this.tipLabel.string = \"默认上次选择金额，可重新选择\"\r\n\r\n        if (this._curSelectBet > -1) {\r\n            for (let index = 0; index < 6; index++) {\r\n                if (this.items[index]) {\r\n                    this.items[index].getChildByName(\"gou\").active = this._curSelectBet == index\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onSelectBet(event, data) {\r\n        if (this._curSelectBet == data && this.selectBetNode.children.length > 0) {\r\n            this.selectBetNode.removeAllChildren()\r\n            this._curSelectBet = -1\r\n            this.itemLayer.active = true\r\n\r\n            for (let index = 0; index < 6; index++) {\r\n                if (this.items[index]) {\r\n                    this.items[index].getChildByName(\"gou\").active = this._curSelectBet == index\r\n                }\r\n            }\r\n            this.tipLabel.string = \"请选择下注金额\"\r\n            return\r\n        }\r\n\r\n        this._curSelectBet = data\r\n        //this.items[this._curSelectBet].getChildByName(\"icon\").color = cc.Color.GRAY\r\n        console.log(\"select bet = \", data)\r\n        //\tconsole.log(\"select event.target = \", event)\r\n        let selectItem = instantiate(this.items[this._curSelectBet])\r\n        selectItem.getChildByName(\"gou\").active = false\r\n        this.selectBetNode.addChild(selectItem)\r\n        tween(selectItem).to(0.5, { position: v3(0, -30, 0) }).start()\r\n        this.tipLabel.string = \"请猜拳\"\r\n        this.itemLayer.active = false\r\n    }\r\n\r\n    onSelectBtn(event, data) {\r\n        if (this._curSelectGuess >= 0) {\r\n            return\r\n        }\r\n\r\n        if (this._curSelectBet < 0) {\r\n            this.toast(\"请先下注\")\r\n            return\r\n        }\r\n\r\n        let curBet = designManager.config[\"stone1\"][this._curSelectBet]\r\n        let propItem: PropItem = {\r\n            Id: curBet[0],\r\n            Num: curBet[1]\r\n        };\r\n        if (!UserData.getInstance().checkUseProp(propItem)) {\r\n            this.toast(\"资源不足\")\r\n            return\r\n        }\r\n        this._curSelectGuess = parseInt(data + \"\")\r\n        // let selectItem = instantiate(this.guessItems[this._curSelectGuess])\r\n        // selectItem.name = \"selectGuess\"\r\n        // selectItem.position = v3(-300, 0, 0)\r\n        // this.selectGuessNode.addChild(selectItem)\r\n        this._isStartRun = true\r\n        // let self = this\r\n        // tween(selectItem).to(0.6, { position: v3(0, 0, 0) }).call(function () {\r\n        //     self._isStartRun = true\r\n        // //    self.armNodeGuess.active = true\r\n        // }).start()\r\n\r\n        this.tipLabel.node.active = false\r\n        this.guessLayer.active = false\r\n    }\r\n\r\n    openResult() {\r\n\r\n        let result = Math.floor(Math.random() * 3)\r\n        let str = [\"石头\", \"剪刀\", \"布\"]\r\n        console.log(\"我方：\", str[this._curSelectGuess])\r\n        console.log(\"敌方：\", str[result])\r\n        this.armNodeGuess.getChildByName(\"icon\").getComponent(Sprite).spriteFrame = this.guessSprite[result]\r\n        let stoneDraw = designManager.config[\"stoneDraw\"]\r\n        //console.log(\"stoneDraw \", stoneDraw)\r\n        let multiplier = 1\r\n\r\n        if (this._curSelectGuess - result == -1 || this._curSelectGuess - result == 2) {\r\n            //\tconsole.log(\" ---- win\")\r\n            multiplier = stoneDraw[0]\r\n        } else if (this._curSelectGuess == result) {\r\n            //console.log(\" ---- 平局\")\r\n            multiplier = stoneDraw[1]\r\n        } else {\r\n            //console.log(\" ---- lose\")\r\n            multiplier = stoneDraw[2]\r\n        }\r\n        let curBet = designManager.config[\"stone1\"][this._curSelectBet]\r\n        let propItem: PropItem = {\r\n            Id: curBet[0],\r\n            Num: curBet[1] * multiplier\r\n        };\r\n\r\n        UserData.getInstance().getRewardProp([propItem])\r\n        this.openLayer(constants.layers.GuessResultLayer, { propArr: [propItem], myGuess: this._curSelectGuess, otherGuess: result });\r\n        this.initGuess()\r\n    }\r\n\r\n    _index = 0\r\n    _dtTime = 0\r\n    _isStartRun = false\r\n    protected update(dt: number): void {\r\n        if (!this._isStartRun) {\r\n            return\r\n        }\r\n        this.openLayer(constants.layers.GuessResultLayer, { myGuess: this._curSelectGuess, selectBet: this._curSelectBet });\r\n        this._isStartRun = false\r\n        tyqSDK.eventSendCustomEvent(\"参与猜拳\")\r\n        return\r\n\r\n        this._dtTime += dt\r\n        if (this._dtTime > 0.1) {\r\n            this._dtTime = 0\r\n            this.armNodeGuess.getChildByName(\"icon\").getComponent(Sprite).spriteFrame = this.guessSprite[this._index % 3]\r\n            this._index++\r\n            if (this._index > 20) {\r\n                this._isStartRun = false\r\n                this.openResult()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"]}