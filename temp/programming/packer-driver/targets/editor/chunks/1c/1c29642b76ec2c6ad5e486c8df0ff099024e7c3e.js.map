{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/model/mapModel.ts"],"names":["MapModel","Camera","find","Prefab","SpriteFrame","UITransform","view","cocosUtil","utilTools","constants","msgac","designManager","resManager","serverMsg","playerModel","UserData","constructor","visibleHalfSize","mapFightLayer","mapFightCamera","cameraOrthoHeight","mapLayer","player","mapSystem","monsterSystem","bulletSystem","numSystem","skillSystem","weaponSystem","hintSystem","propSystem","mapId","floor","time","expPool","expTypeRow","expNum","expLv","equipIdArr","coinNum","killMonsterNum","mapLevelArr","skillAllNum","monsterPrefabObj","bulletPrefabObj","dataRadius","destroyRadius","healAdCount","instance","_instance","initData","data","now","visibleSize","getVisibleSize","width","height","getComponent","orthoHeight","getSaveData","loadSaveData","enterMapWithMapId","obj","row","getRowById","tableName","map","type","mapTypes","main","hp","getInstance","life","atk","attack","wearProp","curDrop","prop","weaponId","weaponid","tower","info","getTowerRoleProInfo","propRow","$towerWeaponId","send","mapEnter","loadMapFightLayer","Promise","resolve","loadAsset","bundles","layer","layers","MapFightLayer","err","prefab","instantiate","parent","setCompoments","isInScreenVisible","node","pos","convertToWorldSpace","playerPos","tf","add","Math","abs","x","y","st","mapRow","expType","skillBombNum","skillHealNum","skillMagnetNum","skillLifeNum","createMapLevelArr","arr","getRowsByType","level","forEach","startTime","mapModel","mapLevel","id","timeCount","createCount","push","mapLeave","destroy","loadMapRes","progressCb","endCb","loadMonsterAndBulletRes","percent","then","sum","onePercent","monsterPercent","bulletPercent","otherPercent","tmpFunc","p","tmpFunc2","loadMonsterPrefabArr","loadBulletRes","loadOtherRes","pathArr","bg","wall","loadAssetByPathArr","icon","bullet","path","assetArr","asset","name","idArr","forArr","indexOf","monsterId","monster","split","parseDesignPropArr","reward","item","Id","Num"],"mappings":"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","sourcesContent":["import { Camera, find, Node, Prefab, SpriteFrame, UITransform, view } from \"cc\";\r\nimport { cocosUtil } from \"../../utils/cocosUtil\";\r\nimport { utilTools } from \"../../utils/utilTools\";\r\nimport { Player } from \"../compoment/item/Player\";\r\nimport { MapLayer } from \"../compoment/layer/MapLayer\";\r\nimport { BulletSystem } from \"../compoment/sys/BulletSystem\";\r\nimport { HintSystem } from \"../compoment/sys/HintSystem\";\r\nimport { MapSystem } from \"../compoment/sys/MapSystem\";\r\nimport { MonsterSystem } from \"../compoment/sys/MonsterSystem\";\r\nimport { NumSystem } from \"../compoment/sys/NumSystem\";\r\nimport { PropSystem } from \"../compoment/sys/PropSystem\";\r\nimport { SkillSystem } from \"../compoment/sys/SkillSystem\";\r\nimport { WeaponSystem } from \"../compoment/sys/WeaponSystem\";\r\nimport { constants } from \"../data/constants\";\r\nimport { msgac } from \"../data/msgac\";\r\nimport { designManager } from \"../manager/designManager\";\r\nimport { resManager } from \"../manager/resManager\";\r\nimport { serverMsg } from \"../other/serverMsg\";\r\nimport { playerModel } from \"./playerModel\";\r\nimport { PropItem, UserData } from \"./UserData\";\r\n\r\nclass MapModel {\r\n    private static _instance: MapModel;\r\n    private constructor() { }\r\n    public static get instance(): MapModel {\r\n        if (!this._instance) {\r\n            this._instance = new MapModel();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    // 半屏幕尺寸\r\n    visibleHalfSize: any;\r\n\r\n    mapFightLayer: Node;\r\n    mapFightCamera: Camera;\r\n    // 镜头初始视角\r\n    cameraOrthoHeight: number;\r\n\r\n    mapLayer: MapLayer;\r\n    player: Player;\r\n    mapSystem: MapSystem;\r\n    monsterSystem: MonsterSystem;\r\n    bulletSystem: BulletSystem;\r\n    numSystem: NumSystem;\r\n    skillSystem: SkillSystem;\r\n    weaponSystem: WeaponSystem;\r\n    hintSystem: HintSystem;\r\n    propSystem: PropSystem;\r\n\r\n    mapId: number;\r\n    floor: number;\r\n    // 战斗时长\r\n    time: number;\r\n\r\n    // 经验池数量\r\n    expPool: number;\r\n    // 经验增长模型\r\n    expTypeRow: any;\r\n    // 已获得的经验值\r\n    expNum: number;\r\n    // 经验等级\r\n    expLv: number;\r\n\r\n    // 装备数组\r\n    equipIdArr = [];\r\n\r\n    // 金币数量\r\n    coinNum: number;\r\n    // 击杀怪物数量\r\n    killMonsterNum: number;\r\n\r\n    // 出怪计划\r\n    mapLevelArr: any[];\r\n\r\n    // 3选1全都要次数\r\n    skillAllNum: number;\r\n\r\n    monsterPrefabObj: any = {};\r\n    bulletPrefabObj: any = {};\r\n\r\n    // 距离多远后隐藏节点，变成单纯的移动计算，不显示节点\r\n    dataRadius: number;\r\n    // 距离多远后，销毁节点数据\r\n    destroyRadius: number;\r\n\r\n    healAdCount: number = 0;\r\n\r\n    initData(data: any, now: Date) {\r\n        if (!data) {\r\n            data = {};\r\n        }\r\n\r\n        let visibleSize = view.getVisibleSize();\r\n        this.visibleHalfSize = {\r\n            width: visibleSize.width * 0.5,\r\n            height: visibleSize.height * 0.5\r\n        };\r\n        this.dataRadius = visibleSize.height * 0.6;\r\n        this.destroyRadius = visibleSize.height * 1.5;\r\n\r\n        this.mapFightCamera = find(\"CanvasMapFight/Camera\").getComponent(Camera);\r\n        this.cameraOrthoHeight = this.mapFightCamera.orthoHeight;\r\n    }\r\n\r\n    getSaveData() {\r\n        let data: any = {};\r\n        data.mapId = this.mapId;\r\n        data.floor = this.floor;\r\n        data.time = this.time;\r\n        data.expPool = this.expPool;\r\n        data.expTypeRow = this.expTypeRow;\r\n        data.expNum = this.expNum;\r\n        data.expLv = this.expLv;\r\n        data.coinNum = this.coinNum;\r\n        data.killMonsterNum = this.killMonsterNum;\r\n        data.mapLevelArr = this.mapLevelArr;\r\n        data.skillAllNum = this.skillAllNum;\r\n        data.equipIdArr = this.equipIdArr;\r\n        data.healAdCount = this.healAdCount;\r\n\r\n        return data;\r\n    }\r\n\r\n    loadSaveData(data: any) {\r\n        this.mapId = data.mapId;\r\n        this.floor = data.floor;\r\n        this.time = data.time;\r\n        this.expPool = data.expPool;\r\n        this.expTypeRow = data.expTypeRow;\r\n        this.expNum = data.expNum;\r\n        this.expLv = data.expLv;\r\n        this.coinNum = data.coinNum;\r\n        this.killMonsterNum = data.killMonsterNum;\r\n        this.mapLevelArr = data.mapLevelArr;\r\n        this.skillAllNum = data.skillAllNum;\r\n        this.equipIdArr = data.equipIdArr;\r\n        this.healAdCount = data.healAdCount;\r\n    }\r\n\r\n    enterMapWithMapId(mapId: number, floor: number = 0) {\r\n        let obj: any = {};\r\n        obj.mapId = mapId;\r\n        obj.floor = floor;\r\n\r\n        let row = designManager.getRowById(constants.tableName.map, mapId);\r\n\r\n        // hp atk weaponId\r\n        if (row.type == constants.mapTypes.main) {\r\n            obj.hp = UserData.getInstance().life;\r\n            obj.atk = UserData.getInstance().attack;\r\n            if (UserData.getInstance().wearProp[0] > 0) {\r\n                let curDrop = designManager.getRowById(constants.tableName.prop, UserData.getInstance().wearProp[0])\r\n                if (curDrop && curDrop.type == 11) {\r\n                    obj.weaponId = curDrop.weaponid\r\n                } else {\r\n                    obj.weaponId = 0\r\n                }\r\n            } else {\r\n                obj.weaponId = 0\r\n            }\r\n        } else if (row.type == constants.mapTypes.tower) {\r\n            let info = UserData.getInstance().getTowerRoleProInfo(true);\r\n            obj.hp = info.hp;\r\n            obj.atk = info.atk;\r\n            let propRow = designManager.getRowById(constants.tableName.prop, UserData.getInstance().$towerWeaponId);\r\n            obj.weaponId = propRow.weaponid;\r\n        }\r\n\r\n        serverMsg.send(msgac.mapEnter, obj);\r\n    }\r\n\r\n    loadMapFightLayer() {\r\n        return new Promise((resolve) => {\r\n            if (this.mapFightLayer) {\r\n                resolve();\r\n                return;\r\n            }\r\n            resManager.loadAsset(constants.bundles.layer, constants.layers.MapFightLayer, Prefab, () => { }, (err, prefab) => {\r\n                this.mapFightLayer = cocosUtil.instantiate(prefab);\r\n                this.mapFightLayer.parent = find(\"CanvasMapFight\");\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    setCompoments(mapLayer: MapLayer, player: Player, mapSystem: MapSystem, monsterSystem: MonsterSystem,\r\n        bulletSystem: BulletSystem, numSystem: NumSystem, weaponSystem: WeaponSystem, skillSystem: SkillSystem,\r\n        hintSystem: HintSystem, propSystem: PropSystem) {\r\n        this.mapLayer = mapLayer;\r\n        this.player = player;\r\n        this.mapSystem = mapSystem;\r\n        this.monsterSystem = monsterSystem;\r\n        this.bulletSystem = bulletSystem;\r\n        this.numSystem = numSystem;\r\n        this.weaponSystem = weaponSystem;\r\n        this.skillSystem = skillSystem;\r\n        this.hintSystem = hintSystem;\r\n        this.propSystem = propSystem;\r\n    }\r\n\r\n    isInScreenVisible(node: Node) {\r\n        if (!node || !node.parent) {\r\n            return false;\r\n        }\r\n        let pos = cocosUtil.convertToWorldSpace(node);\r\n        let playerPos = cocosUtil.convertToWorldSpace(this.player.node);\r\n        let tf = node.getComponent(UITransform);\r\n        let add = tf.width + tf.height;\r\n        if ((Math.abs(pos.x - playerPos.x) <= this.visibleHalfSize.width + add + 150)\r\n            && (Math.abs(pos.y - playerPos.y) <= this.visibleHalfSize.height + add)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    mapEnter(data: any) {\r\n        if (this.mapId) {\r\n            data.st = 2;\r\n            return;\r\n        }\r\n        this.mapFightCamera.orthoHeight = this.cameraOrthoHeight;\r\n\r\n        let mapId = data.mapId;\r\n\r\n        this.mapId = mapId;\r\n        this.floor = data.floor;\r\n\r\n        let mapRow = designManager.getRowById(constants.tableName.map, mapId);\r\n\r\n        // test\r\n        // arr = [arr[0]];\r\n\r\n        this.time = 0;\r\n\r\n        this.expPool = 0;\r\n        this.expTypeRow = designManager.getRowById(constants.tableName.expType, mapRow.expType * 100 + 1);\r\n        this.expNum = 0;\r\n        this.expLv = 1;\r\n\r\n        this.coinNum = 0;\r\n        this.killMonsterNum = 0;\r\n\r\n        this.healAdCount = 0;\r\n\r\n        this.skillAllNum = 0;\r\n        this.equipIdArr = [];\r\n\r\n        playerModel.skillBombNum = 1;\r\n        playerModel.skillHealNum = 1;\r\n        playerModel.skillMagnetNum = 0;\r\n        playerModel.skillLifeNum = 0;\r\n\r\n        this.createMapLevelArr();\r\n\r\n        data.st = 1;\r\n    }\r\n\r\n    createMapLevelArr() {\r\n        this.mapLevelArr = [];\r\n\r\n        let arr = designManager.getRowsByType(constants.tableName.level, this.mapId);\r\n        if (!arr) {\r\n            return;\r\n        }\r\n\r\n        arr.forEach((row: any) => {\r\n            if (row.startTime <= mapModel.time) {\r\n                return;\r\n            }\r\n            let mapLevel: any = {};\r\n            mapLevel.id = row.id;\r\n            mapLevel.row = row;\r\n            mapLevel.timeCount = 0;\r\n            mapLevel.createCount = 0;\r\n            this.mapLevelArr.push(mapLevel);\r\n        });\r\n    }\r\n\r\n    mapLeave(data: any) {\r\n        if (!this.mapId) {\r\n            data.st = 2;\r\n            return;\r\n        }\r\n\r\n        this.mapFightLayer.destroy();\r\n        this.mapFightLayer = null;\r\n\r\n        this.mapId = 0;\r\n        this.floor = 0;\r\n\r\n        data.st = 1;\r\n    }\r\n\r\n    // 进入地图之前，加载必要的资源\r\n    loadMapRes(progressCb: Function, endCb: Function) {\r\n        this.loadMonsterAndBulletRes((percent: number) => {\r\n            progressCb(percent);\r\n        }, () => {\r\n            this.loadMapFightLayer().then(() => {\r\n                endCb();\r\n            });\r\n        });\r\n    }\r\n\r\n    loadMonsterAndBulletRes(progressCb: Function, endCb: Function) {\r\n        let sum = 3;\r\n        let onePercent = 1 / sum;\r\n        let monsterPercent = 0;\r\n        let bulletPercent = 0;\r\n        let otherPercent = 0;\r\n\r\n        let tmpFunc = () => {\r\n            let p = monsterPercent * onePercent + bulletPercent * onePercent + otherPercent * onePercent;\r\n            progressCb(p);\r\n        };\r\n        let tmpFunc2 = () => {\r\n            if (monsterPercent + bulletPercent + otherPercent == sum) {\r\n                endCb();\r\n            }\r\n        };\r\n\r\n        this.loadMonsterPrefabArr((percent: number) => {\r\n            monsterPercent = percent;\r\n            tmpFunc();\r\n        }, () => {\r\n            monsterPercent = 1;\r\n            tmpFunc2();\r\n        });\r\n        this.loadBulletRes((percent: number) => {\r\n            bulletPercent = percent;\r\n            tmpFunc();\r\n        }, () => {\r\n            bulletPercent = 1;\r\n            tmpFunc2();\r\n        });\r\n        this.loadOtherRes((percent: number) => {\r\n            otherPercent = percent;\r\n            tmpFunc();\r\n        }, () => {\r\n            otherPercent = 1;\r\n            tmpFunc2();\r\n        });\r\n\r\n    }\r\n\r\n    // 其他碎片资源，比如：背景图，围栏等\r\n    loadOtherRes(progressCb: Function, endCb: Function) {\r\n        let mapRow = designManager.getRowById(constants.tableName.map, this.mapId);\r\n        let pathArr = [\r\n            \"map/\" + mapRow.bg,\r\n            \"wall/\" + mapRow.wall + \"_v\",\r\n            \"wall/\" + mapRow.wall + \"_h\",\r\n        ];\r\n        resManager.loadAssetByPathArr(constants.bundles.icon, pathArr, SpriteFrame, progressCb, endCb);\r\n    }\r\n\r\n    // 加载子弹的资源\r\n    loadBulletRes(progressCb: Function, endCb: Function) {\r\n        this.bulletPrefabObj = {};\r\n        let arr = [];\r\n        let pathArr = [];\r\n        arr.forEach((id: number) => {\r\n            let row = designManager.getRowById(constants.tableName.bullet, id);\r\n            let path = row.prefab;\r\n            pathArr.push(path);\r\n        });\r\n        resManager.loadAssetByPathArr(constants.bundles.bullet, pathArr, Prefab, progressCb, (assetArr: any) => {\r\n            assetArr.forEach((asset: any) => {\r\n                this.bulletPrefabObj[asset.name] = asset;\r\n            });\r\n            endCb();\r\n        });\r\n    }\r\n\r\n    // 加载怪物资源\r\n    loadMonsterPrefabArr(progressCb: Function, endCb: Function) {\r\n        this.monsterPrefabObj = {};\r\n        let idArr = [];\r\n        let arr = designManager.getRowsByType(constants.tableName.level, this.mapId);\r\n        utilTools.forArr(arr, (row: any) => {\r\n            if (idArr.indexOf(row.monsterId) == -1) {\r\n                idArr.push(row.monsterId);\r\n            }\r\n        });\r\n\r\n        // 召唤怪和通用怪目前较少，暂时直接在这里添加\r\n        idArr.push(14);\r\n\r\n        let pathArr = [];\r\n        idArr.forEach((id: number) => {\r\n            let row = designManager.getRowById(constants.tableName.monster, id);\r\n            let path = row.prefab + \"/monster\";\r\n            pathArr.push(path);\r\n        });\r\n        resManager.loadAssetByPathArr(constants.bundles.monster, pathArr, Prefab, progressCb, (assetArr: any) => {\r\n            assetArr.forEach((asset: any) => {\r\n                let path = asset.path;\r\n                let name = path.split(\"/\")[0];\r\n                this.monsterPrefabObj[name] = asset;\r\n            });\r\n            endCb();\r\n        });\r\n\r\n    }\r\n\r\n    parseDesignPropArr(reward: any) {\r\n        let arr = [];\r\n        reward.forEach((item: any) => {\r\n            let data: PropItem = {\r\n                Id: item[0],\r\n                Num: item[1]\r\n            };\r\n            arr.push(data);\r\n        });\r\n        return arr;\r\n    }\r\n\r\n}\r\n\r\nexport const mapModel = MapModel.instance;"]}