{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/base/BaseLayer.ts"],"names":["BaseLayer","Button","Component","find","Label","Node","ProgressBar","ResolutionPolicy","RichText","ScrollView","sp","Sprite","v3","view","Widget","myLog","tyqSDK","cocosUtil","constants","localText","msgac","audioManager","designManager","eventManager","layerManager","ResLoader","resManager","playerModel","UserData","ItemLayer","ScrollViewUtil","layerName","layerData","layerCb","layerId","pathNodeObj","Map","resLoader","autoReleaseAsset","preLoadAssetConfigArr","eventArr","openUpdateSecond","updateSecondInterval","openAllBtnInteractive","openBtnLongPress","btnLongTrigTime","btnLognTrigTimeCount","btnLongTrigCount","btnLongNode","isShowBannerAd","onLoad","addPathNode","node","DesignResolutionHeight","setDesignResolutionSize","FIXED_HEIGHT","i","chooseDesignResolution","screen1","getVisibleSize","width","height","FIXED_WIDTH","onEnable","addButtonListener","initUI","refreshRedPoint","clearInterval","setInterval","updateSecond","isRecordAd","showBannerAd","on","onDisable","removeEventArr","off","undefined","hideBannerAd","onDestroy","layers","HomeLayer","releaseAllAsset","path","set","chs","children","len","length","pNode","name","getNodeByPath","get","screenAdapterBG","isValid","widget","getComponent","enabled","scale","getScreenBgAdapterScale","scaleX","getScale","x","scaleY","y","setScale","screenAdapterUI","getScreenAdapterScale","preOnButtonClick","EventType","TOUCH_START","preOnButtonTouchStart","TOUCH_MOVE","preOnButtonTouchMove","TOUCH_END","preOnButtonTouchEnd","TOUCH_CANCEL","preOnButtonTouchCancel","indexOf","addComponent","max","ch","btn","top","substring","remain","key","toLocaleUpperCase","hasPlayAudio","preOnButtonLongClick","btnNode","event","target","touch","openPropInfoLayer2","id","num","getInstance","getPropNumById","obj","openLayer","PropInfoLayer2","isShowingLayer","showHintLayer","msg","cb","hintLayer","active","setString","hideHintLayer","openMsgBoxLayer","hint","MsgBoxLayer","openAwardGetLayer","awardArr","RewardLayer","propArr","notMoveAni","openAwardInfoLayer","AwardInfoLayer","setRoleSkin","roleNode","skin","getHeroSkin","Skeleton","setSkin","playAudioEffect","delayTime","scheduleOnce","playEffect","onClickBtnClose","closeLayer","data","showCb","openSingleLayer","baseLayer","prefab","addAsset","forEach","assetConfig","asset","destroy","addEventArr","arr","val","preProcessEvent","ac","ac2KeyObj","call","processEvent","showLackItem","itemId","itemRow","getRowById","tableName","prop","createNotice","lackItemHint","format","showGetItem","content","scrollViewSetData","scrollViewNode","refreshItemFunc","resetPos","itemTween","scrollViewUtil","setData","itemUI","item","index","scrollViewAddData","pushData","scrollViewRefreshList","refreshList","scrollViewRefreshItemUI","refreshIndex","scrollViewRefreshItemUIByIndex","scrollViewRemoveItemUI","removeByIndex","scrollViewRemoveItemUIByIndex","scrollViewScrollToEnd","time","scrollToEnd","scrollViewScrollToItemUI","scrollViewScrollToIndex","scrollToIndex","setProgressBar","progressBar","percent","progress","setNumString","formatNum","setItemLayer","itemLayer","addComponentOnce","setNumItemLayer","push","setPropItem","iconNode","bgNode","numNode","row","e","icon","type","wRow","weapon","weaponid","setSpriteFrame2","quality","shakeScreen","tweenShakeNode","getPopLayerParentNode","removeRenderBatch","parent","renderChildBatch","removeRootItemNode","addRenderBatch","addRootItemNode","info","label","string","rich","setSpriteFrame","bundleName1","bundles","sprite","bundleName","d","split","loadSpriteFrame","err","spriteFrame","setSpineData","skeleton","spine","spinePath","loadSpineData","skeletonData","setSpineData2","update","dt","isGoOn"],"mappings":"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","sourcesContent":["\r\nimport { Button, Component, EventTouch, find, Label, Node, Prefab, ProgressBar, ResolutionPolicy, RichText, ScrollView, sp, Sprite, SpriteFrame, v3, view, Widget } from 'cc';\r\nimport { myLog } from '../../../common/myLog';\r\nimport { tyqSDK } from '../../../tyqSDK/tyqSDK';\r\nimport { cocosUtil } from '../../../utils/cocosUtil';\r\nimport { constants } from '../../data/constants';\r\nimport { localText } from '../../data/localText';\r\nimport { msgac } from '../../data/msgac';\r\nimport { audioManager } from '../../manager/audioManager';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { eventManager } from '../../manager/eventManager';\r\nimport { layerManager } from '../../manager/layerManager';\r\nimport { AssetConfig, ResLoader, resManager } from '../../manager/resManager';\r\nimport { playerModel } from '../../model/playerModel';\r\nimport { UserData } from '../../model/UserData';\r\nimport { ItemLayer } from './ItemLayer';\r\nimport { ScrollViewUtil } from './ScrollViewUtil';\r\n\r\nexport class BaseLayer extends Component {\r\n\r\n    public layerName: string = \"DefaultLayer\";\r\n\r\n    // 展示界面携带的数据和回调\r\n    public layerData: any = {};\r\n    public layerCb: Function = null;\r\n    public layerId: number = -1;\r\n\r\n    // {路径:节点对象}\r\n    public pathNodeObj: Map<string, Node> = new Map();\r\n\r\n    // 资源管理类\r\n    private resLoader: ResLoader = new ResLoader();\r\n    // 是否开启内存管理\r\n    public autoReleaseAsset: boolean = false;\r\n\r\n    // 特定预加载的资源\r\n    public preLoadAssetConfigArr: AssetConfig[];\r\n\r\n    // 监听事件\r\n    private eventArr: any;\r\n\r\n    // 控制是否打开秒级的update\r\n    public openUpdateSecond: boolean = false;\r\n    private updateSecondInterval: any;\r\n\r\n    // 按钮是否响应点击\r\n    public openAllBtnInteractive: boolean = true;\r\n\r\n    // 按钮长按功能开关\r\n    public openBtnLongPress: boolean = false;\r\n    // 多长时间后开始触发\r\n    private btnLongTrigTime: number = 0.5;\r\n    private btnLognTrigTimeCount: number = 0;\r\n    // 触发次数统计\r\n    private btnLongTrigCount: number = 0;\r\n    // 长按按钮节点对象\r\n    private btnLongNode: Node = null;\r\n\r\n    // 控制是否显示banner广告\r\n    isShowBannerAd: boolean = false;\r\n\r\n    onLoad() {\r\n        // // 背景适配\r\n        // let bgNode = find(\"bg\", this.node);\r\n        // this.screenAdapterBG(bgNode);\r\n        // let bgNode2 = find(\"bg2\", this.node);\r\n        // this.screenAdapterBG(bgNode2);\r\n\r\n        // // ui适配\r\n        // let uiNode = find(\"ui\", this.node);\r\n        // this.screenAdapterUI(uiNode);\r\n        // let uiNode2 = find(\"ui2\", this.node);\r\n        // this.screenAdapterUI(uiNode2);\r\n\r\n        this.addPathNode(this.node, \"\");\r\n\r\n        // this.DesignResolutionHeight()\r\n    }\r\n\r\n    DesignResolutionHeight() {\r\n        view.setDesignResolutionSize(720, 1660, ResolutionPolicy.FIXED_HEIGHT)\r\n        myLog.i(\"-----ResolutionPolicy.FIXED_HEIGHT\")\r\n    }\r\n\r\n    chooseDesignResolution() {\r\n        //    let resolute = view.getDesignResolutionSize()\r\n        let screen1 = view.getVisibleSize()\r\n        if (screen1.width / screen1.height > 720 / 1280) {\r\n            view.setDesignResolutionSize(720, 1280, ResolutionPolicy.FIXED_HEIGHT)\r\n            myLog.i(\"choose  ResolutionPolicy.FIXED_HEIGHT\")\r\n        } else {\r\n            myLog.i(\"choose  ResolutionPolicy.FIXED_WIDTH\")\r\n            view.setDesignResolutionSize(720, 1280, ResolutionPolicy.FIXED_WIDTH)\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        this.addButtonListener(this.node);\r\n        this.initUI();\r\n        this.refreshRedPoint();\r\n\r\n        if (this.openUpdateSecond) {\r\n            if (this.updateSecondInterval) {\r\n                clearInterval(this.updateSecondInterval);\r\n            }\r\n            this.updateSecondInterval = setInterval(() => {\r\n                this.updateSecond();\r\n            }, 1000);\r\n            this.updateSecond();\r\n        }\r\n\r\n        if (this.isShowBannerAd && !playerModel.isRecordAd) {\r\n            tyqSDK.showBannerAd()\r\n        }\r\n\r\n        eventManager.on(msgac.refreshRedPoint, this.refreshRedPoint, this);\r\n\r\n    }\r\n\r\n\r\n\r\n    updateSecond() {\r\n\r\n    }\r\n\r\n    refreshRedPoint() {\r\n\r\n    }\r\n\r\n    initUI() {\r\n\r\n    }\r\n\r\n    onDisable() {\r\n        this.removeEventArr(this.eventArr);\r\n\r\n        eventManager.off(msgac.refreshRedPoint, this.refreshRedPoint, this);\r\n\r\n        if (this.updateSecondInterval) {\r\n            clearInterval(this.updateSecondInterval);\r\n            this.updateSecondInterval = undefined;\r\n        }\r\n        if (this.isShowBannerAd) {\r\n            tyqSDK.hideBannerAd()\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        switch (this.layerName) {\r\n            case constants.layers.HomeLayer:\r\n                // 这些UI不释放资源\r\n                return;\r\n            default:\r\n                break;\r\n        }\r\n        if (this.autoReleaseAsset) {\r\n            this.resLoader.releaseAllAsset();\r\n        }\r\n    }\r\n\r\n    addPathNode(node: Node, path: string) {\r\n        if (node != this.node) {\r\n            this.pathNodeObj.set(path, node);\r\n        }\r\n        if (path) {\r\n            path += \"/\";\r\n        }\r\n        let chs = node.children;\r\n        for (let i = 0, len = chs.length; i < len; i++) {\r\n            let pNode = chs[i];\r\n            this.addPathNode(pNode, path + pNode.name);\r\n        }\r\n    }\r\n\r\n    getNodeByPath(path: string): Node {\r\n        let node = this.pathNodeObj.get(path);\r\n        if (node) {\r\n            return node;\r\n        }\r\n\r\n        node = find(path, this.node);\r\n        if (node) {\r\n            this.pathNodeObj.set(path, node);\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 缩放背景图，达到满屏显示，背景图部分内容超出屏幕也没事\r\n     * @param node 背景图节点\r\n     */\r\n    screenAdapterBG(node: Node) {\r\n        if (!cocosUtil.isValid(node)) {\r\n            return;\r\n        }\r\n        let widget = node.getComponent(Widget);\r\n        if (widget) {\r\n            widget.enabled = false;\r\n        }\r\n        let scale = cocosUtil.getScreenBgAdapterScale();\r\n        let scaleX = node.getScale().x;\r\n        let scaleY = node.getScale().y;\r\n        node.setScale(v3(scaleX * scale, scaleY * scale, 1));\r\n    }\r\n\r\n    /**\r\n     * 缩放UI，达到屏幕适配，ui上的全部内容在屏幕内显示，如果是全屏UI，ui节点如果有widget，缩放后依然有效\r\n     * @param node ui根节点\r\n     */\r\n    screenAdapterUI(node: Node) {\r\n        if (!cocosUtil.isValid(node)) {\r\n            return;\r\n        }\r\n        let scale = cocosUtil.getScreenAdapterScale();\r\n        let scaleX = node.getScale().x;\r\n        let scaleY = node.getScale().y;\r\n        node.setScale(v3(scaleX * scale, scaleY * scale, 1));\r\n    }\r\n\r\n    addButtonListener(node: Node) {\r\n        if (node.getComponent(Button)) {\r\n            node.on(\"click\", this.preOnButtonClick, this);\r\n            if (this.openBtnLongPress) {\r\n                node.on(Node.EventType.TOUCH_START, this.preOnButtonTouchStart, this);\r\n                node.on(Node.EventType.TOUCH_MOVE, this.preOnButtonTouchMove, this);\r\n                node.on(Node.EventType.TOUCH_END, this.preOnButtonTouchEnd, this);\r\n                node.on(Node.EventType.TOUCH_CANCEL, this.preOnButtonTouchCancel, this);\r\n            }\r\n        }\r\n        if (node.getComponent(ScrollView)) {\r\n            let name = node.name;\r\n            if (name.indexOf(\"NoUtil\") == -1 && !node.getComponent(ScrollViewUtil)) {\r\n                node.addComponent(ScrollViewUtil);\r\n            }\r\n        }\r\n        // if (node.getComponent(Label)) {\r\n        //     let label = node.getComponent(Label);\r\n        //     label.useSystemFont = true;\r\n        // }\r\n        // if (node.getComponent(RichText)) {\r\n        //     let richText = node.getComponent(RichText);\r\n        //     richText.useSystemFont = true;\r\n        // }\r\n\r\n        let chs = node.children;\r\n        for (let i = 0, max = chs.length; i < max; i++) {\r\n            let ch = chs[i];\r\n            this.addButtonListener(ch);\r\n        }\r\n\r\n    };\r\n\r\n    preOnButtonClick(btn: any) {\r\n        if (!this.openAllBtnInteractive) {\r\n            return;\r\n        }\r\n        if (this.openBtnLongPress && this.btnLongTrigCount > 0) {\r\n            this.btnLongTrigCount = 0;\r\n            return;\r\n        }\r\n\r\n        let node = btn.node;\r\n        let name = node.name;\r\n        myLog.i(this.layerName + \" onButtonClick \" + name);\r\n\r\n        if (this[\"onButtonClick\"]) {\r\n            this[\"onButtonClick\"](node, node.name);\r\n        }\r\n\r\n        if (name.length >= 2) {\r\n            let top = name.substring(0, 1);\r\n            let remain = name.substring(1, name.length);\r\n            let key = \"onClick\" + top.toLocaleUpperCase() + remain;\r\n            if (this[key]) {\r\n                this[key](node);\r\n            }\r\n        }\r\n\r\n        if (!node.hasPlayAudio) {\r\n            // 如果还没播放按钮音效，就播放通用按钮音效\r\n        }\r\n    }\r\n\r\n    preOnButtonLongClick(btnNode: Node) {\r\n        if (!this.openAllBtnInteractive) {\r\n            return;\r\n        }\r\n\r\n        let name = btnNode.name;\r\n        myLog.i(this.layerName + \" onButtonLongClick \" + name);\r\n        if (this[\"onButtonLongClick\"]) {\r\n            return this[\"onButtonLongClick\"](btnNode, name);\r\n        }\r\n\r\n        if (name.length >= 2) {\r\n            let top = name.substring(0, 1);\r\n            let remain = name.substring(1, name.length);\r\n            let key = \"onLongClick\" + top.toLocaleUpperCase() + remain;\r\n            if (this[key]) {\r\n                return this[key](btnNode);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    preOnButtonTouchStart(event: EventTouch) {\r\n        let btnNode = event.target;\r\n        let touch = event.touch;\r\n        this.btnLongNode = btnNode;\r\n        this.btnLognTrigTimeCount = 0;\r\n        this.btnLongTrigCount = 0;\r\n    }\r\n\r\n    preOnButtonTouchMove(event: EventTouch) {\r\n\r\n    }\r\n\r\n    preOnButtonTouchEnd(event: EventTouch) {\r\n        this.btnLongNode = null;\r\n    }\r\n\r\n    preOnButtonTouchCancel(event: EventTouch) {\r\n        this.btnLongNode = null;\r\n    }\r\n\r\n    openPropInfoLayer2(id: number, num: number = undefined) {\r\n        if (num == undefined) {\r\n            num = UserData.getInstance().getPropNumById(id);\r\n        }\r\n        let obj = {\r\n            id: id,\r\n            num: num\r\n        };\r\n        this.openLayer(constants.layers.PropInfoLayer2, obj);\r\n    }\r\n\r\n    isShowingLayer(layerName: string) {\r\n        return layerManager.isShowingLayer(layerName);\r\n    }\r\n\r\n    showHintLayer(msg: string, cb?: Function) {\r\n        let hintLayer = find(\"Canvas/hintLayer\");\r\n        hintLayer.active = true;\r\n        // @ts-ignore\r\n        hintLayer.cb = cb;\r\n        this.setString(find(\"ui/hint\", hintLayer), msg);\r\n    }\r\n    hideHintLayer() {\r\n        let hintLayer = find(\"Canvas/hintLayer\");\r\n        hintLayer.active = false;\r\n        // @ts-ignore\r\n        if (hintLayer.cb) {\r\n            // @ts-ignore\r\n            hintLayer.cb();\r\n        }\r\n    }\r\n\r\n    openMsgBoxLayer(hint: string) {\r\n        let obj = {\r\n            hint: hint\r\n        };\r\n        this.openLayer(constants.layers.MsgBoxLayer, obj);\r\n    }\r\n\r\n    openAwardGetLayer(awardArr: any) {\r\n        if (!awardArr || awardArr.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.openLayer(constants.layers.RewardLayer, { propArr: awardArr, notMoveAni: true });\r\n    }\r\n\r\n    openAwardInfoLayer(awardArr: any) {\r\n        if (!awardArr || awardArr.length <= 0) {\r\n            return;\r\n        }\r\n        this.openLayer(constants.layers.AwardInfoLayer, { awardArr: awardArr });\r\n    }\r\n\r\n    setRoleSkin(roleNode: Node, id: number = 0) {\r\n        let skin = UserData.getInstance().getHeroSkin(id);\r\n        roleNode.getComponent(sp.Skeleton).setSkin(skin);\r\n    }\r\n\r\n    playAudioEffect(name: string, btnNode?: any, delayTime?: number) {\r\n        if (!delayTime) {\r\n            delayTime = 0;\r\n        }\r\n        if (cocosUtil.isValid(btnNode)) {\r\n            btnNode.hasPlayAudio = true;\r\n        }\r\n        this.scheduleOnce(() => {\r\n            audioManager.playEffect(name);\r\n            if (cocosUtil.isValid(btnNode)) {\r\n                btnNode.hasPlayAudio = undefined;\r\n            }\r\n        }, delayTime)\r\n    }\r\n\r\n    onClickBtnClose(node: Node) {\r\n        this.closeLayer();\r\n    }\r\n\r\n    openLayer(layerName: string, data?: any, cb?: Function, showCb?: Function) {\r\n        // 默认每个弹窗只允许同时显示一个\r\n        if (typeof (data) == \"function\") {\r\n            cb = data;\r\n            data = null;\r\n        }\r\n\r\n        layerManager.openSingleLayer(layerName, data, cb, (baseLayer: BaseLayer, prefab: Prefab) => {\r\n            if (baseLayer.autoReleaseAsset && baseLayer.resLoader) {\r\n                baseLayer.resLoader.addAsset(prefab);\r\n                if (baseLayer.preLoadAssetConfigArr) {\r\n                    baseLayer.preLoadAssetConfigArr.forEach((assetConfig: AssetConfig) => {\r\n                        if (assetConfig.asset) {\r\n                            baseLayer.resLoader.addAsset(assetConfig.asset);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (showCb) {\r\n                showCb();\r\n            }\r\n        });\r\n    }\r\n\r\n    closeLayer(layerId?: number | string) {\r\n        if (!layerId) {\r\n            layerId = this.layerId;\r\n        }\r\n        if (layerId && layerId != -1) {\r\n            layerManager.closeLayer(layerId);\r\n            return;\r\n        }\r\n        this.node.destroy();\r\n    }\r\n\r\n    addEventArr(arr: any) {\r\n        this.eventArr = arr;\r\n        for (let i in arr) {\r\n            let val = arr[i];\r\n            if (!val) {\r\n                continue;\r\n            }\r\n            eventManager.on(val, this.preProcessEvent, this);\r\n        }\r\n    }\r\n\r\n    removeEventArr(arr: any) {\r\n        for (let i in arr) {\r\n            let val = arr[i];\r\n            if (!val) {\r\n                continue;\r\n            }\r\n            eventManager.off(val, this.preProcessEvent, this);\r\n        }\r\n    }\r\n\r\n    preProcessEvent(event: any) {\r\n        let ac = event.ac;\r\n        let data = event.data;\r\n        let key = msgac.ac2KeyObj[ac] + \"Ret\";\r\n        if (this[key]) {\r\n            this[key].call(this, data);\r\n        }\r\n        this.processEvent(ac, data);\r\n    }\r\n\r\n    processEvent(ac: any, data: any) {\r\n\r\n    }\r\n\r\n    showLackItem(itemId: number) {\r\n        let itemRow = designManager.getRowById(constants.tableName.prop, itemId);\r\n        if (!itemRow) {\r\n            return;\r\n        }\r\n        this.createNotice(localText.lackItemHint.format(itemRow.name));\r\n    }\r\n\r\n    showGetItem(itemId: number, num: number) {\r\n        // let itemRow = designManager.getRowById(constants.tableName.item, itemId);\r\n        // this.createNotice(localText.textObj.itemGet.format(itemRow.name, num));\r\n    }\r\n\r\n    createNotice(content) {\r\n        layerManager.createNotice(content);\r\n    }\r\n\r\n    scrollViewSetData(scrollViewNode: Node, arr: any, refreshItemFunc?: Function, resetPos: boolean = true, itemTween: boolean = false) {\r\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\r\n        if (!scrollViewUtil) {\r\n            return;\r\n        }\r\n        scrollViewUtil.setData(arr, (itemUI: Node, item: any, index: number) => {\r\n            if (refreshItemFunc) {\r\n                refreshItemFunc(itemUI, item, index);\r\n            }\r\n            this.addButtonListener(itemUI);\r\n        }, resetPos, itemTween);\r\n    }\r\n    scrollViewAddData(scrollViewNode: Node, arr: any, resetPos: boolean = false) {\r\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\r\n        if (!scrollViewUtil) {\r\n            return;\r\n        }\r\n        scrollViewUtil.pushData(arr, resetPos);\r\n    }\r\n    scrollViewRefreshList(scrollViewNode: Node) {\r\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\r\n        if (!scrollViewUtil) {\r\n            return;\r\n        }\r\n        scrollViewUtil.refreshList();\r\n    }\r\n    scrollViewRefreshItemUI(scrollViewNode: Node, itemUI: Node, item?: any) {\r\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\r\n        if (!scrollViewUtil) {\r\n            return;\r\n        }\r\n        scrollViewUtil.refreshIndex(itemUI[\"index\"], item);\r\n    }\r\n    scrollViewRefreshItemUIByIndex(scrollViewNode: Node, index: number, item?: any) {\r\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\r\n        if (!scrollViewUtil) {\r\n            return;\r\n        }\r\n        scrollViewUtil.refreshIndex(index, item);\r\n    }\r\n    scrollViewRemoveItemUI(scrollViewNode: Node, itemUI: Node, resetPos: boolean = false) {\r\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\r\n        if (!scrollViewUtil) {\r\n            return;\r\n        }\r\n        scrollViewUtil.removeByIndex(itemUI[\"index\"], resetPos);\r\n    }\r\n    scrollViewRemoveItemUIByIndex(scrollViewNode: Node, index: number, resetPos: boolean = false) {\r\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\r\n        if (!scrollViewUtil) {\r\n            return;\r\n        }\r\n        scrollViewUtil.removeByIndex(index, resetPos);\r\n    }\r\n    scrollViewScrollToEnd(scrollViewNode: Node, time?: number) {\r\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\r\n        if (!scrollViewUtil) {\r\n            return;\r\n        }\r\n        scrollViewUtil.scrollToEnd(time);\r\n    }\r\n    scrollViewScrollToItemUI(scrollViewNode: Node, itemUI: Node, time?: number) {\r\n        this.scrollViewScrollToIndex(scrollViewNode, itemUI[\"index\"], time);\r\n    }\r\n    scrollViewScrollToIndex(scrollViewNode: Node, index: number, time?: number) {\r\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\r\n        if (!scrollViewUtil || index == undefined) {\r\n            return;\r\n        }\r\n        scrollViewUtil.scrollToIndex(index);\r\n    }\r\n\r\n    setProgressBar(progressBar: Node | ProgressBar, percent: number) {\r\n        if (progressBar instanceof Node) {\r\n            progressBar = progressBar.getComponent(ProgressBar);\r\n        }\r\n        if (progressBar) {\r\n            progressBar.progress = percent;\r\n        }\r\n    }\r\n\r\n    setNumString(node: Node, num: any) {\r\n        num = cocosUtil.formatNum(num);\r\n        this.setString(node, num);\r\n    }\r\n\r\n    setItemLayer(node: Node, arr: any, cb?: Function) {\r\n        let itemLayer = cocosUtil.addComponentOnce(node, ItemLayer);\r\n        itemLayer.initUI(this, arr, cb);\r\n    }\r\n\r\n    setNumItemLayer(node: Node, num: number, cb?: Function) {\r\n        let arr = [];\r\n        for (let i = 0; i < num; i++) {\r\n            arr.push(i + 1);\r\n        }\r\n        let itemLayer = node.getComponent(ItemLayer);\r\n        if (!itemLayer) {\r\n            itemLayer = node.addComponent(ItemLayer);\r\n        }\r\n        itemLayer.initUI(this, arr, (itemUI: Node, item: any, index: number) => {\r\n            if (cb) {\r\n                cb(itemUI, item, index);\r\n            }\r\n        });\r\n    }\r\n\r\n    setPropItem(id: number, iconNode: Node, num: number = 0, bgNode?: Node, numNode?: Node) {\r\n        let row = designManager.getRowById(constants.tableName.prop, id);\r\n        if (!row) {\r\n            myLog.e(\"setPropItem error id:\" + id);\r\n        }\r\n        let icon = \"prop/\" + row.icon;\r\n        if (row.type == 11) {\r\n            let wRow = designManager.getRowById(constants.tableName.weapon, row.weaponid);\r\n            icon = \"weapon/\" + wRow.icon;\r\n        }\r\n        this.setSpriteFrame2(iconNode, icon);\r\n        if (bgNode) {\r\n            this.setSpriteFrame2(bgNode, \"prop/propbg\" + row.quality);\r\n        }\r\n        if (num > 0 && numNode) {\r\n            this.setString(numNode, \"x\" + num);\r\n        }\r\n    }\r\n\r\n    // 屏幕振动\r\n    shakeScreen() {\r\n        cocosUtil.tweenShakeNode(layerManager.getPopLayerParentNode());\r\n    }\r\n\r\n    removeRenderBatch(node: Node) {\r\n        let itemLayer = node.parent.getComponent(ItemLayer);\r\n        if (itemLayer && itemLayer.renderChildBatch) {\r\n            itemLayer.renderChildBatch.removeRootItemNode(node);\r\n        }\r\n    }\r\n\r\n    addRenderBatch(node: Node) {\r\n        let itemLayer = node.parent.getComponent(ItemLayer);\r\n        if (itemLayer && itemLayer.renderChildBatch) {\r\n            itemLayer.renderChildBatch.addRootItemNode(node);\r\n        }\r\n    }\r\n\r\n    setString(node: Node, info: any) {\r\n        if (!node) {\r\n            myLog.e(\"setString error:node is null\", info);\r\n            return;\r\n        }\r\n        info = info + \"\";\r\n        let label = node.getComponent(Label);\r\n        if (label) {\r\n            label.string = info;\r\n            return;\r\n        }\r\n\r\n        let rich = node.getComponent(RichText);\r\n        if (rich) {\r\n            rich.string = info;\r\n            return;\r\n        }\r\n    }\r\n\r\n    setSpriteFrame(node: Node, name: string, showCb?: Function, bundleName1 = constants.bundles.icon) {\r\n        if (!name) {\r\n            return;\r\n        }\r\n        if (!cocosUtil.isValid(node)) {\r\n            return;\r\n        }\r\n        let sprite = node.getComponent(Sprite);\r\n        if (!cocosUtil.isValid(sprite)) {\r\n            return;\r\n        }\r\n        sprite.enabled = false;\r\n        node[\"loadName\"] = name;\r\n\r\n        let bundleName = bundleName1;\r\n        let d = name.split(\"_\");\r\n        let path = d[0] + \"/\" + name;\r\n        let arr = name.split(\"|\");\r\n        if (arr.length >= 2) {\r\n            bundleName = arr[0];\r\n            path = arr[1];\r\n        }\r\n\r\n        resManager.loadSpriteFrame(bundleName, path, (err, spriteFrame: SpriteFrame) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n            if (!cocosUtil.isValid(node)) {\r\n                return;\r\n            }\r\n            if (!cocosUtil.isValid(sprite)) {\r\n                return;\r\n            }\r\n            if (node[\"loadName\"] != name) {\r\n                return;\r\n            }\r\n            if (this.autoReleaseAsset) {\r\n                this.resLoader.addAsset(spriteFrame);\r\n            }\r\n            sprite.enabled = true;\r\n            sprite.spriteFrame = spriteFrame;\r\n            if (showCb) {\r\n                showCb();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    setSpriteFrame2(node: Node, name: string, showCb?: Function, bundleName1 = constants.bundles.icon) {\r\n        if (!name) {\r\n            return;\r\n        }\r\n        if (!cocosUtil.isValid(node)) {\r\n            return;\r\n        }\r\n        let sprite = node.getComponent(Sprite);\r\n        if (!cocosUtil.isValid(sprite)) {\r\n            return;\r\n        }\r\n        sprite.enabled = false;\r\n        node[\"loadName\"] = name;\r\n\r\n        let bundleName = bundleName1;\r\n        let path = name\r\n\r\n        resManager.loadSpriteFrame(bundleName, path, (err, spriteFrame: SpriteFrame) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n            if (!cocosUtil.isValid(node)) {\r\n                return;\r\n            }\r\n            if (!cocosUtil.isValid(sprite)) {\r\n                return;\r\n            }\r\n            if (node[\"loadName\"] != name) {\r\n                return;\r\n            }\r\n            if (this.autoReleaseAsset) {\r\n                this.resLoader.addAsset(spriteFrame);\r\n            }\r\n            sprite.enabled = true;\r\n            sprite.spriteFrame = spriteFrame;\r\n            if (showCb) {\r\n                showCb();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    setSpineData(node: Node, name: string, showCb?: Function) {\r\n        if (!cocosUtil.isValid(node)) {\r\n            return;\r\n        }\r\n        let skeleton = node.getComponent(sp.Skeleton);\r\n        if (!cocosUtil.isValid(skeleton)) {\r\n            return;\r\n        }\r\n        skeleton.enabled = false;\r\n        node[\"loadName\"] = name;\r\n        let bundleName = constants.bundles.spine;\r\n        let spinePath = name + \"/\" + name;\r\n\r\n        resManager.loadSpineData(bundleName, spinePath, (err, skeletonData: sp.SkeletonData) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n            if (!cocosUtil.isValid(node)) {\r\n                return;\r\n            }\r\n            if (!cocosUtil.isValid(skeleton)) {\r\n                return;\r\n            }\r\n            if (node[\"loadName\"] != name) {\r\n                return;\r\n            }\r\n            if (this.autoReleaseAsset) {\r\n                this.resLoader.addAsset(skeletonData);\r\n            }\r\n            skeleton.enabled = true;\r\n            skeleton.skeletonData = skeletonData;\r\n            if (showCb) {\r\n                showCb(skeleton);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    setSpineData2(node: Node, bundleName, name: string, showCb?: Function) {\r\n        if (!cocosUtil.isValid(node)) {\r\n            return;\r\n        }\r\n        let skeleton = node.getComponent(sp.Skeleton);\r\n        if (!cocosUtil.isValid(skeleton)) {\r\n            return;\r\n        }\r\n        skeleton.enabled = false;\r\n        node[\"loadName\"] = name;\r\n        let spinePath = name\r\n\r\n        resManager.loadSpineData(bundleName, spinePath, (err, skeletonData: sp.SkeletonData) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n            if (!cocosUtil.isValid(node)) {\r\n                return;\r\n            }\r\n            if (!cocosUtil.isValid(skeleton)) {\r\n                return;\r\n            }\r\n            if (node[\"loadName\"] != name) {\r\n                return;\r\n            }\r\n            if (this.autoReleaseAsset) {\r\n                this.resLoader.addAsset(skeletonData);\r\n            }\r\n            skeleton.enabled = true;\r\n            skeleton.skeletonData = skeletonData;\r\n            if (showCb) {\r\n                showCb(skeleton);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    update(dt: number) {\r\n        if (this.openBtnLongPress && this.btnLongNode) {\r\n            this.btnLognTrigTimeCount += dt;\r\n            if (this.btnLognTrigTimeCount >= this.btnLongTrigTime) {\r\n                let isGoOn = this.preOnButtonLongClick(this.btnLongNode);\r\n                this.btnLongTrigCount++;\r\n                if (!isGoOn) {\r\n                    // 默认只会触发一次\r\n                    this.btnLongNode = null;\r\n                    this.btnLognTrigTimeCount = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n"]}