{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/layer/RewardRedBoxLayer.ts"],"names":["Button","instantiate","Node","Prefab","Sprite","v3","_decorator","sdkManager","constants","designManager","UserData","PropItemPrefab","BaseUILayer","ccclass","property","RewardRedBoxLayer","type","onLoad","onDisable","onDestroy","start","initList","itemProp","active","propArr","getRowsByType","tableName","CNTM","proplayer","removeAllChildren","i","length","data","award","item","position","addChild","propItem","getComponent","setView","Type_UnTouch","Type_HideNum","changeBg","bundles","wwqVec","setScale","addButtonHander","getChildByName","node","getInstance","isHaveProp","grayscale","interactable","onClickVideoGet","event","console","log","self","openAd","st","Id","Num","getRewardProp","openLayer","layers","RewardLayer"],"mappings":"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","sourcesContent":["import { Button, instantiate, Node, Prefab, Sprite, v3, _decorator } from 'cc';\r\nimport { sdkManager } from '../../../sdk/sdkManager';\r\nimport { constants } from '../../data/constants';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { PropItem, UserData } from '../../model/UserData';\r\nimport { PropItemPrefab } from '../item/PropItemPrefab';\r\nimport { BaseUILayer } from './BaseUILayer';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RewardRedBoxLayer')\r\nexport class RewardRedBoxLayer extends BaseUILayer {\r\n\r\n    @property(Node) itemProp: Node = null;\r\n    @property(Node) proplayer: Node = null;\r\n\r\n    @property({ type: Prefab }) propItem: Prefab = null;\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n  \r\n    onDisable() {\r\n        super.onDisable();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    start() {\r\n        this.initList()\r\n        this.itemProp.active = false\r\n    }\r\n\r\n    initList(){\r\n        let propArr = designManager.getRowsByType(constants.tableName.CNTM, 1)\r\n        this.proplayer.removeAllChildren()\r\n        for (let i = 0; i < propArr.length; i++) {\r\n            let data = propArr[i].award[0]\r\n            let item = instantiate(this.itemProp)\r\n            item.position = v3(0, 0, 0)\r\n            item.active = true\r\n            this.proplayer.addChild(item)\r\n            let propItem = instantiate(this.propItem)\r\n            propItem.getComponent(PropItemPrefab).setView(data[0], 0, PropItemPrefab.Type_UnTouch | PropItemPrefab.Type_HideNum)\r\n            propItem.getComponent(PropItemPrefab).changeBg(\"activityRes/itembg\", constants.bundles.wwqVec)\r\n            propItem.getComponent(PropItemPrefab).setScale(99)\r\n            item.addChild(propItem)\r\n            propItem.position = v3(0, -20, 0)\r\n            this.addButtonHander(item.getChildByName(\"btnGet\"), this.node, \"RewardRedBoxLayer\", \"onClickVideoGet\", data[0])\r\n\r\n            if (UserData.getInstance().isHaveProp(data[0])) {\r\n                item.getChildByName(\"btnGet\").getComponent(Sprite).grayscale = true\r\n                item.getChildByName(\"btnGet\").getComponent(Button).interactable = false\r\n            }\r\n        }\r\n    }\r\n\r\n    onClickVideoGet(event, data) {\r\n        console.log(\"onClickVideoGet = \", data)\r\n        let self = this\r\n        sdkManager.openAd(\"领取皮肤\", function (st) {\r\n            if (st == 1) {\r\n                let propItem: PropItem = {\r\n                    Id: data,\r\n                    Num: 1\r\n                };\r\n                UserData.getInstance().getRewardProp([propItem])\r\n                self.openLayer(constants.layers.RewardLayer, { propArr: [propItem] });\r\n                self.initList()\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}