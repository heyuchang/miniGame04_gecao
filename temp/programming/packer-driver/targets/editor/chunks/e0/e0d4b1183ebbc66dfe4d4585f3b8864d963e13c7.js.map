{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/layer/SkinChangeLayer.ts"],"names":["find","_decorator","constants","localText","msgac","designManager","eventManager","UserData","BaseLayer","ccclass","property","SkinChangeLayer","listResetPos","btnEquip","btnGoGet","choseId","onLoad","getNodeByPath","getInstance","heroSkin","onEnable","onDisable","onDestroy","initUI","arr","getRowsByType","tableName","prop","propTypes","skin","scrollViewSetData","refreshSkinItem","bind","setRoleSkin","rank","setSpriteFrame2","active","getPropById","itemUI","row","icon","num","id","yinNode","choseNode","processEvent","ac","data","onButtonClick","node","name","onClickSkinItem","item","closeLayer","layerCb","onClickBtnGoGet","obj","layerName","layers","RewardSkinLayer","DaySignLayer","send","jumpLayer","onClickBtnEquip","createNotice","notHas","equipSuccess"],"mappings":"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","sourcesContent":["import { find, Node, _decorator } from 'cc';\r\nimport { constants } from '../../data/constants';\r\nimport { localText } from '../../data/localText';\r\nimport { msgac } from '../../data/msgac';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { eventManager } from '../../manager/eventManager';\r\nimport { UserData } from '../../model/UserData';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SkinChangeLayer')\r\nexport class SkinChangeLayer extends BaseLayer {\r\n\r\n    listResetPos = true;\r\n\r\n    btnEquip: Node;\r\n    btnGoGet: Node;\r\n\r\n    choseId: number = 0;\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n\r\n        this.btnEquip = this.getNodeByPath(\"ui/bottom/btns/btnEquip\");\r\n        this.btnGoGet = this.getNodeByPath(\"ui/bottom/btns/btnGoGet\");\r\n\r\n        this.choseId = UserData.getInstance().heroSkin;\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    initUI() {\r\n        let arr = designManager.getRowsByType(constants.tableName.prop, constants.propTypes.skin);\r\n        this.scrollViewSetData(this.getNodeByPath(\"ui/bottom/list\"), arr, this.refreshSkinItem.bind(this), this.listResetPos);\r\n        this.listResetPos = false;\r\n\r\n        this.setRoleSkin(this.getNodeByPath(\"ui/top/body\"), this.choseId);\r\n        let rank = this.choseId % 2000;\r\n        this.setSpriteFrame2(this.getNodeByPath(\"ui/top/skin\"), \"skin/skin\" + rank, null, \"ui\");\r\n\r\n        this.btnEquip.active = false;\r\n        this.btnGoGet.active = false;\r\n        if (UserData.getInstance().getPropById(this.choseId) > 0) {\r\n            this.btnEquip.active = true;\r\n        } else {\r\n            this.btnGoGet.active = true;\r\n        }\r\n    }\r\n\r\n    refreshSkinItem(itemUI: Node, row: any) {\r\n        this.setSpriteFrame2(find(\"icon\", itemUI), \"prop/\" + row.icon);\r\n        let num = UserData.getInstance().getPropById(row.id);\r\n        let yinNode = find(\"yin\", itemUI);\r\n        let choseNode = find(\"chose\", itemUI);\r\n        if (num > 0) {\r\n            yinNode.active = false;\r\n        } else {\r\n            yinNode.active = true;\r\n        }\r\n        if (row.id == this.choseId) {\r\n            choseNode.active = true;\r\n        } else {\r\n            choseNode.active = false;\r\n        }\r\n    }\r\n\r\n    processEvent(ac: any, data: any) {\r\n        switch (ac) {\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onButtonClick(node: Node, name: string) {\r\n        switch (name) {\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClickSkinItem(node: any) {\r\n        let row = node.item;\r\n        this.choseId = row.id;\r\n        this.initUI();\r\n    }\r\n\r\n    closeLayer() {\r\n        super.closeLayer();\r\n        if (this.layerCb) {\r\n            this.layerCb();\r\n        }\r\n    }\r\n\r\n    onClickBtnGoGet() {\r\n        this.closeLayer();\r\n        let obj: any = {\r\n            layerName: constants.layers.RewardSkinLayer\r\n        };\r\n        if (this.choseId % 2000 == 5) {\r\n            obj.layerName = constants.layers.DaySignLayer;\r\n        }\r\n        eventManager.send(msgac.jumpLayer, obj);\r\n    }\r\n\r\n    onClickBtnEquip() {\r\n        let num = UserData.getInstance().getPropById(this.choseId);\r\n        if (num <= 0) {\r\n            this.createNotice(localText.notHas);\r\n            return;\r\n        }\r\n        UserData.getInstance().heroSkin = this.choseId;\r\n        this.createNotice(localText.equipSuccess);\r\n    }\r\n\r\n}\r\n\r\n"]}