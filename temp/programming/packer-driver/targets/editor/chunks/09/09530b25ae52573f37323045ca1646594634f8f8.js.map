{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/item/bullet/Bullet1101.ts"],"names":["Component","macro","tween","Tween","v3","Vec2","Vec3","_decorator","cocosUtil","utilTools","mapModel","physicsGroup","ccclass","property","bullet1101","bullet","hasTweenPlay","outScreenNotRecycle","lv","targetDis","radianSpeed","radian","shotTimeCount","init","node","angle","setUpDownTween","playerPos","player","getPosition","x","y","setPosition","extraObj","endCb","isOpen","by","position","union","repeatForever","start","stopAllByTarget","startShot","duration","Math","PI","random","schedule","shot","REPEAT_FOREVER","scheduleOnce","unschedule","pos","rotateZ","ZERO","angleToRadian","targetPos","add","direction","clone","subtract","bulletSystem","addBullet","id","PLAYER_BULLET","convertToWorldSpace","update","dt","scale","speed","dis","distance","maxSpeed","getMoveSpeed","normalize","multiplyScalar"],"mappings":"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","sourcesContent":["import { Component, macro, tween, Tween, v3, Vec2, Vec3, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../../utils/utilTools';\r\nimport { mapModel } from '../../../model/mapModel';\r\nimport { physicsGroup } from '../../../other/physicsGroup';\r\nimport { Bullet } from './Bullet';\r\nconst { ccclass, property } = _decorator;\r\n\r\n// 技能-轰炸机\r\n@ccclass('bullet1101')\r\nexport class bullet1101 extends Component {\r\n\r\n    bullet: Bullet;\r\n    hasTweenPlay: boolean = false;\r\n\r\n    // 不可以自动销毁\r\n    outScreenNotRecycle: boolean = true;\r\n\r\n    // 轰炸机等级\r\n    lv: number;\r\n    targetDis: number = 260;\r\n\r\n    // 转速\r\n    radianSpeed: number;\r\n    radian: number;\r\n\r\n    shotTimeCount: number;\r\n\r\n    init(bullet: Bullet) {\r\n        this.bullet = bullet;\r\n\r\n        this.node.angle = 0;\r\n        this.radianSpeed = 0;\r\n\r\n        this.setUpDownTween(true);\r\n\r\n        let playerPos = mapModel.player.node.getPosition();\r\n        playerPos.x += 80;\r\n        playerPos.y += 80;\r\n        this.node.setPosition(playerPos);\r\n\r\n        this.lv = this.bullet.extraObj.lv;\r\n        this.bullet.extraObj.endCb(this);\r\n    }\r\n\r\n    setUpDownTween(isOpen: boolean) {\r\n        if (isOpen) {\r\n            if (!this.hasTweenPlay) {\r\n                this.hasTweenPlay = true;\r\n                tween(this.node).by(1, { position: v3(0, 20, 0) }).by(1, { position: v3(0, -20, 0) }).union().repeatForever().start();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.hasTweenPlay) {\r\n            this.hasTweenPlay = false;\r\n            Tween.stopAllByTarget(this.node);\r\n        }\r\n    }\r\n\r\n    startShot(duration: number) {\r\n        this.radianSpeed = Math.PI * 2 / duration;\r\n        // 随机一个开始角度\r\n        this.radian = Math.random() * Math.PI * 2;\r\n        // 每隔一定时间发射一枚子弹\r\n        this.schedule(this.shot, 0.1 - this.lv * 0.01, macro.REPEAT_FOREVER);\r\n        // duration后，停止轰炸\r\n        this.scheduleOnce(() => {\r\n            this.radianSpeed = 0;\r\n            this.unschedule(this.shot);\r\n        }, duration);\r\n    }\r\n\r\n    shot() {\r\n        let pos = v3(this.targetDis + (Math.random() - 0.5) * 50, 0, 0);\r\n        Vec3.rotateZ(pos, pos, Vec3.ZERO, this.radian + (Math.random() - 0.5) * utilTools.angleToRadian(20));\r\n        let targetPos = mapModel.player.node.getPosition().add(pos);\r\n\r\n        // 发射角度\r\n        let direction = targetPos.clone().subtract(this.node.getPosition());\r\n        let radian = (Math.random() - 0.5) * utilTools.angleToRadian(180);\r\n        Vec3.rotateZ(direction, direction, Vec3.ZERO, radian);\r\n        mapModel.bulletSystem.addBullet(this.bullet.id + 1, physicsGroup.PLAYER_BULLET, cocosUtil.convertToWorldSpace(this.node), direction, targetPos);\r\n    }\r\n\r\n    update(dt: number) {\r\n        let pos = this.node.getPosition();\r\n        let playerPos = mapModel.player.node.getPosition();\r\n        if (pos.x > playerPos.x) {\r\n            this.node.scale = v3(-1, 1, 1);\r\n        } else {\r\n            this.node.scale = v3(1, 1, 1);\r\n        }\r\n\r\n        // 目标位置\r\n        playerPos.x += 80;\r\n        playerPos.y += 80;\r\n\r\n        let speed = 0;\r\n        let dis = Vec2.distance(pos, playerPos);\r\n        if (dis > 5) {\r\n            speed = dis * 2;\r\n            let maxSpeed = mapModel.player.getMoveSpeed() * 1.5;\r\n            if (speed > maxSpeed) {\r\n                speed = maxSpeed;\r\n            }\r\n        }\r\n        if (this.hasTweenPlay && dis <= 30) {\r\n            speed = 0;\r\n        }\r\n        if (speed > 0) {\r\n            this.setUpDownTween(false);\r\n            let direction = playerPos.subtract(pos).normalize();\r\n            direction.multiplyScalar(dt * speed);\r\n            pos.add(direction);\r\n            this.node.setPosition(pos);\r\n        } else {\r\n            this.setUpDownTween(true);\r\n        }\r\n\r\n        if (this.radianSpeed > 0) {\r\n            this.radian -= this.radianSpeed * dt;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n"]}