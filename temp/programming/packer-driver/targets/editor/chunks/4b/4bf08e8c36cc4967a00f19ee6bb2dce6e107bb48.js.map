{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/layer/MapLayer.ts"],"names":["find","ProgressBar","tween","Tween","v3","_decorator","myLog","sdkManager","tyqSDK","cocosUtil","utilTools","constants","localText","msgac","audioManager","designManager","mapModel","playerModel","UserData","serverMsg","BaseLayer","GameCtrl","Player","ShineColor","BulletSystem","HintSystem","MapSystem","MonsterSystem","NumSystem","PropSystem","SkillSystem","WeaponSystem","ccclass","property","MapLayer","fightCapNode","mapSystem","player","gameCtrl","timeNode","expProgress","expLvNode","expBarColorArr","expBarColorIndex","expBarShineColor","expLvUpCount","coinNumNode","coinIconNode","diamondNumNode","killMonsterNumNode","bossHpLayer","bossDamProgressBar","bossHpProgress","skillBombIcon","skillBombAd","skillBombNum","skillBombCd","btnSkillHeal","skillHealIcon","skillHealAd","skillHealNum","skillHealCd","skillMagnetAd","skillMagnetNum","skillLifeAd","skillLifeNum","monsterNumNode","showNumNode","playerPosNode","expNumNode","onLoad","chooseDesignResolution","getNodeByPath","active","isRecordAd","isInDevelopmentEnvironment","addComponent","mapFightLayer","mapLayer","monsterSystem","bulletSystem","numSystem","skillSystem","weaponSystem","hintSystem","propSystem","setCompoments","getComponent","mapData","getInstance","loadSaveMapData","initData","layerData","openUpdateSecond","playMusic","audioNames","map","schedule","popBuyLifeLayer","getPopBuyLifeTime","onEnable","addEventArr","mapLeave","saveDataBefore","commonResRefresh","mapRefreshSkill","onDisable","onDestroy","start","mapHand","scheduleOnce","popLayer","layers","HandLayer","eventSendCustomEvent","eventLevelStart","mapId","initUI","refreshExpLayer","refreshBossHpLayer","refreshResLayer","refreshSkillLayer","baoshi","config","backLifeDiamond","BuyLifeLayer","setString","mapRefreshSkillRet","updateSecond","hp","hpMax","healAdCount","i","openAd","st","useSkillHeal","isBreath","tweenBreath","stopAllByTarget","scale","bossMonster","setProgressBar","progress","bossSubHp","dam","pStart","pEnd","to","easing","coinNum","killMonsterNum","row","getRowById","tableName","expLv","total","exp","current","expNum","lastRow","startShine","materials","shineColor","check","skillAllNum","length","setRenderableColor","unschedule","onSkillSelect","obj","lvCount","SkillSelectLayer","layerName","layerCb","isShowingLayer","gameFightPause","openLayer","gameFightResume","refreshTimeNode","timeStr","getTimeStr","time","fightPause","fightResume","mapLeaveRet","data","closeLayer","HomeLayer","commonResRefreshRet","loadSaveData","propData","weaponData","skillData","monsterData","saveDataBeforeRet","getSaveData","onClickBtnSkillBomb","createNotice","cd","useSkillBomb","num","getFloatValue","onClickBtnSkillHeal","onClickBtnSkillMagnet","useSkillMagnet","onClickBtnSkillLife","onClickBtnPause","node","PauseLayer","onClickBtnClose","send","onClickBtnSkillSelectLayer","onClickBtnResume","onClickBtnBoss","onClickBtnLuckyDraw","BoxMonsterLayer","onClickBtnAccountClear","clearAccountData","onClickBtnMonsterAdd","monsterAddFlag"],"mappings":"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","sourcesContent":["\r\n\r\nimport { find, Node, ProgressBar, tween, Tween, v3, _decorator } from 'cc';\r\nimport { myLog } from '../../../common/myLog';\r\nimport { sdkManager } from '../../../sdk/sdkManager';\r\nimport { tyqSDK } from '../../../tyqSDK/tyqSDK';\r\nimport { cocosUtil } from '../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../utils/utilTools';\r\nimport { constants } from '../../data/constants';\r\nimport { localText } from '../../data/localText';\r\nimport { msgac } from '../../data/msgac';\r\nimport { audioManager } from '../../manager/audioManager';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { mapModel } from '../../model/mapModel';\r\nimport { playerModel } from '../../model/playerModel';\r\nimport { UserData } from '../../model/UserData';\r\nimport { serverMsg } from '../../other/serverMsg';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nimport { GameCtrl } from '../item/GameCtrl';\r\nimport { Player } from '../item/Player';\r\nimport { ShineColor } from '../shader/ShineColor';\r\nimport { BulletSystem } from '../sys/BulletSystem';\r\nimport { HintSystem } from '../sys/HintSystem';\r\nimport { MapSystem } from '../sys/MapSystem';\r\nimport { MonsterSystem } from '../sys/MonsterSystem';\r\nimport { NumSystem } from '../sys/NumSystem';\r\nimport { PropSystem } from '../sys/PropSystem';\r\nimport { SkillSystem } from '../sys/SkillSystem';\r\nimport { WeaponSystem } from '../sys/WeaponSystem';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MapLayer')\r\nexport class MapLayer extends BaseLayer {\r\n\r\n    fightCapNode: Node;\r\n\r\n    mapSystem: MapSystem;\r\n\r\n    player: Player;\r\n    gameCtrl: GameCtrl;\r\n\r\n    timeNode: Node;\r\n    expProgress: Node;\r\n    expLvNode: Node;\r\n    expBarColorArr = [\"#00FF00\", \"#00C2FF\", \"#FF00D6\", \"#FF2900\"];\r\n    expBarColorIndex = 0;\r\n    expBarShineColor: ShineColor;\r\n    expLvUpCount: number = 0;\r\n    coinNumNode: Node;\r\n    coinIconNode: Node;\r\n    diamondNumNode: Node;\r\n    killMonsterNumNode: Node;\r\n\r\n    bossHpLayer: Node;\r\n    bossDamProgressBar: ProgressBar;\r\n    bossHpProgress: Node;\r\n\r\n    skillBombIcon: Node;\r\n    skillBombAd: Node;\r\n    skillBombNum: Node;\r\n    skillBombCd: Node;\r\n\r\n    btnSkillHeal: Node;\r\n    skillHealIcon: Node;\r\n    skillHealAd: Node;\r\n    skillHealNum: Node;\r\n    skillHealCd: Node;\r\n\r\n    skillMagnetAd: Node;\r\n    skillMagnetNum: Node;\r\n    skillLifeAd: Node;\r\n    skillLifeNum: Node;\r\n\r\n    monsterNumNode: Node;\r\n    showNumNode: Node;\r\n    playerPosNode: Node;\r\n    expNumNode: Node;\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n        this.chooseDesignResolution();\r\n        this.getNodeByPath(\"bg\").active = false;\r\n        this.getNodeByPath(\"ui/btns\").active = playerModel.isRecordAd || playerModel.isInDevelopmentEnvironment();\r\n\r\n        this.fightCapNode = this.getNodeByPath(\"fightCap\");\r\n        this.fightCapNode.active = false;\r\n        this.gameCtrl = this.getNodeByPath(\"gameCtrl\").addComponent(GameCtrl);\r\n\r\n        this.mapSystem = mapModel.mapFightLayer.addComponent(MapSystem);\r\n        let mapLayer = find(\"map\", mapModel.mapFightLayer);\r\n\r\n        this.player = find(\"player\", mapLayer).addComponent(Player);\r\n        let monsterSystem = find(\"monsterLayer\", mapLayer).addComponent(MonsterSystem);\r\n        let bulletSystem = find(\"bulletLayer\", mapLayer).addComponent(BulletSystem);\r\n        let numSystem = find(\"numLayer\", mapLayer).addComponent(NumSystem);\r\n        let skillSystem = find(\"player/skillLayer\", mapLayer).addComponent(SkillSystem);\r\n        let weaponSystem = find(\"player/weaponLayer\", mapLayer).addComponent(WeaponSystem);\r\n        let hintSystem = find(\"hintLayer\", mapLayer).addComponent(HintSystem);\r\n        let propSystem = find(\"propLayer\", mapLayer).addComponent(PropSystem);\r\n\r\n        mapModel.setCompoments(this, this.player, this.mapSystem, monsterSystem, bulletSystem, numSystem, weaponSystem, skillSystem,\r\n            hintSystem, propSystem);\r\n\r\n        this.coinIconNode = this.getNodeByPath(\"ui/top/coinLayer/icon\");\r\n        this.coinNumNode = this.getNodeByPath(\"ui/top/coinLayer/num\");\r\n        this.diamondNumNode = this.getNodeByPath(\"ui/top/diamondLayer/num\");\r\n        this.killMonsterNumNode = this.getNodeByPath(\"ui/top/monsterLayer/num\");\r\n\r\n        this.expProgress = this.getNodeByPath(\"ui/expProgress\");\r\n        this.expLvNode = this.getNodeByPath(\"ui/expProgress/lv\")\r\n        this.expBarShineColor = this.getNodeByPath(\"ui/expProgress/bar\").addComponent(ShineColor);\r\n\r\n        this.bossHpLayer = this.getNodeByPath(\"ui/bossHpLayer\");\r\n        this.bossDamProgressBar = this.getNodeByPath(\"ui/bossHpLayer/damProgress\").getComponent(ProgressBar);\r\n        this.bossHpProgress = this.getNodeByPath(\"ui/bossHpLayer/hpProgress\");\r\n        this.bossHpLayer.active = false;\r\n\r\n        this.skillBombIcon = this.getNodeByPath(\"ui/skillBtns/btnSkillBomb/icon\");\r\n        this.skillBombAd = this.getNodeByPath(\"ui/skillBtns/btnSkillBomb/icon/ad\");\r\n        this.skillBombNum = this.getNodeByPath(\"ui/skillBtns/btnSkillBomb/icon/num\");\r\n        this.skillBombCd = this.getNodeByPath(\"ui/skillBtns/btnSkillBomb/cd\");\r\n\r\n        this.btnSkillHeal = this.getNodeByPath(\"ui/skillBtns/btnSkillHeal\");\r\n        this.skillHealIcon = this.getNodeByPath(\"ui/skillBtns/btnSkillHeal/icon\");\r\n        this.skillHealAd = this.getNodeByPath(\"ui/skillBtns/btnSkillHeal/icon/ad\");\r\n        this.skillHealNum = this.getNodeByPath(\"ui/skillBtns/btnSkillHeal/icon/num\");\r\n        this.skillHealCd = this.getNodeByPath(\"ui/skillBtns/btnSkillHeal/cd\");\r\n\r\n        this.skillMagnetAd = this.getNodeByPath(\"ui/skillBtns/btnSkillMagnet/icon/ad\");\r\n        this.skillMagnetNum = this.getNodeByPath(\"ui/skillBtns/btnSkillMagnet/icon/num\");\r\n        this.skillLifeAd = this.getNodeByPath(\"ui/skillBtns/btnSkillLife/icon/ad\");\r\n        this.skillLifeNum = this.getNodeByPath(\"ui/skillBtns/btnSkillLife/icon/num\");\r\n\r\n        this.timeNode = this.getNodeByPath(\"ui/top/time\");\r\n\r\n        this.getNodeByPath(\"ui/infoDev\").active = playerModel.isInDevelopmentEnvironment();\r\n        this.monsterNumNode = this.getNodeByPath(\"ui/infoDev/monsterNum\");\r\n        this.showNumNode = this.getNodeByPath(\"ui/infoDev/showNum\");\r\n        this.playerPosNode = this.getNodeByPath(\"ui/infoDev/playerPos\");\r\n        this.expNumNode = this.getNodeByPath(\"ui/infoDev/expNum\");\r\n\r\n        let mapData = UserData.getInstance().mapData;\r\n        if (mapData) {\r\n            // 战斗中断\r\n            this.loadSaveMapData(mapData);\r\n        } else {\r\n            // 新的开始\r\n            mapModel.player.initData(this.layerData);\r\n            mapModel.weaponSystem.initData(this.layerData);\r\n        }\r\n\r\n        this.openUpdateSecond = true;\r\n        audioManager.playMusic(constants.audioNames.map);\r\n\r\n        this.schedule(this.popBuyLifeLayer, this.getPopBuyLifeTime());\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n\r\n        this.addEventArr([\r\n            msgac.mapLeave,\r\n            msgac.saveDataBefore,\r\n            msgac.commonResRefresh,\r\n            msgac.mapRefreshSkill,\r\n        ]);\r\n\r\n        // test 武器\r\n        // this.scheduleOnce(() => {\r\n        //     mapModel.weaponSystem.addWeapon(4);\r\n        // }, 1);\r\n\r\n        // // test 技能\r\n        // this.scheduleOnce(() => {\r\n        //     for (let i = 0; i < 1; i++) {\r\n        //         mapModel.skillSystem.addSkill(10);\r\n        //     }\r\n        // }, 1);\r\n        // this.scheduleOnce(() => {\r\n        //     mapModel.skillSystem.addSkill(7);\r\n        // }, 5);\r\n        // this.scheduleOnce(() => {\r\n        //     mapModel.skillSystem.addSkill(7);\r\n        // }, 8);\r\n\r\n        // // test 被动技能\r\n        // this.scheduleOnce(() => {\r\n        //     for (let i = 0; i < 6; i++) {\r\n        //         mapModel.skillSystem.addSkill2(12);\r\n        //     }\r\n        //     myLog.i(\"被动技能添加了\");\r\n        // }, 10);\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    start() {\r\n        if (!UserData.getInstance().mapHand) {\r\n            UserData.getInstance().mapHand = 1;\r\n            this.scheduleOnce(() => {\r\n                this.popLayer(constants.layers.HandLayer);\r\n            });\r\n        }\r\n        tyqSDK.eventSendCustomEvent(\"进入战斗场景\", \"玩家人数\")\r\n        //console.log(\"mapModel.mapId = \", mapModel.mapId)\r\n        tyqSDK.eventLevelStart(mapModel.mapId)\r\n    }\r\n\r\n    initUI() {\r\n        this.refreshExpLayer();\r\n        this.refreshBossHpLayer();\r\n        this.refreshResLayer();\r\n        this.refreshSkillLayer();\r\n    }\r\n\r\n    popBuyLifeLayer() {\r\n        if (UserData.getInstance().baoshi < designManager.config.backLifeDiamond) {\r\n            return;\r\n        }\r\n        this.popLayer(constants.layers.BuyLifeLayer);\r\n    }\r\n\r\n    // 强弹复活购买界面间隔时间，单位：秒\r\n    getPopBuyLifeTime() {\r\n        return 60 * 3;\r\n    }\r\n\r\n    refreshSkillLayer() {\r\n        this.skillBombAd.active = false;\r\n        this.skillBombNum.active = false;\r\n        if (playerModel.skillBombNum > 0) {\r\n            this.skillBombNum.active = true;\r\n            this.setString(this.skillBombNum, playerModel.skillBombNum);\r\n        } else {\r\n            this.skillBombAd.active = true;\r\n        }\r\n\r\n        this.skillHealAd.active = false;\r\n        this.skillHealNum.active = false;\r\n        if (playerModel.skillHealNum > 0) {\r\n            this.skillHealNum.active = true;\r\n            this.setString(this.skillHealNum, playerModel.skillHealNum);\r\n        } else {\r\n            this.skillHealAd.active = true;\r\n        }\r\n\r\n        this.skillMagnetAd.active = false;\r\n        this.skillMagnetNum.active = false;\r\n        if (playerModel.skillMagnetNum > 0) {\r\n            this.skillMagnetNum.active = true;\r\n            this.setString(this.skillMagnetNum, playerModel.skillMagnetNum);\r\n        } else {\r\n            this.skillMagnetAd.active = true;\r\n        }\r\n\r\n        this.skillLifeAd.active = false;\r\n        this.skillLifeNum.active = false;\r\n        if (playerModel.skillLifeNum > 0) {\r\n            this.skillLifeNum.active = true;\r\n            this.setString(this.skillLifeNum, playerModel.skillLifeNum);\r\n        } else {\r\n            this.skillLifeAd.active = true;\r\n        }\r\n    }\r\n\r\n    mapRefreshSkillRet() {\r\n        this.refreshSkillLayer();\r\n    }\r\n\r\n    updateSecond() {\r\n        // if (mapModel.mapSystem.skillBombCd > 0) {\r\n        //     this.skillBombCd.active = true;\r\n        //     cocosUtil.setRenderableColor(this.skillBombIcon, constants.colors.yin.parseColor());\r\n        //     this.setString(this.skillBombCd, Math.ceil(mapModel.mapSystem.skillBombCd));\r\n        // } else {\r\n        //     this.skillBombCd.active = false;\r\n        //     cocosUtil.setRenderableColor(this.skillBombIcon, Color.WHITE);\r\n        // }\r\n        // if (mapModel.mapSystem.skillHealCd > 0) {\r\n        //     this.skillHealCd.active = true;\r\n        //     cocosUtil.setRenderableColor(this.skillHealIcon, constants.colors.yin.parseColor());\r\n        //     this.setString(this.skillHealCd, Math.ceil(mapModel.mapSystem.skillHealCd));\r\n        // } else {\r\n        //     this.skillHealCd.active = false;\r\n        //     cocosUtil.setRenderableColor(this.skillHealIcon, Color.WHITE);\r\n        // }\r\n        if (mapModel.player.hp / mapModel.player.hpMax < 0.25 && mapModel.player.hp > 0 && !mapModel.healAdCount) {\r\n            // 强制弹出激励视频，观看后，恢复血量\r\n            mapModel.healAdCount++;\r\n            myLog.i(\"==========血量小于0.25强弹广告治疗\");\r\n            sdkManager.openAd(\"血量小于0.25强弹广告治疗\", (st) => {\r\n                if (st == 1) {\r\n                    mapModel.player.useSkillHeal(0.25);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (mapModel.player.hp / mapModel.player.hpMax < 0.5 && !this.btnSkillHeal.isBreath) {\r\n            this.btnSkillHeal.isBreath = true;\r\n            cocosUtil.tweenBreath(this.btnSkillHeal);\r\n        }\r\n        if (mapModel.player.hp / mapModel.player.hpMax > 0.5 && this.btnSkillHeal.isBreath) {\r\n            this.btnSkillHeal.isBreath = false;\r\n            Tween.stopAllByTarget(this.btnSkillHeal);\r\n            this.btnSkillHeal.scale = v3(1, 1, 1);\r\n        }\r\n    }\r\n\r\n    refreshBossHpLayer() {\r\n        let bossMonster = mapModel.monsterSystem.bossMonster;\r\n        if (bossMonster) {\r\n            this.setProgressBar(this.bossHpProgress, bossMonster.hp / bossMonster.hpMax);\r\n            if (!this.bossHpLayer.active) {\r\n                this.bossHpLayer.active = true;\r\n                Tween.stopAllByTarget(this.bossDamProgressBar);\r\n                this.bossDamProgressBar.progress = this.bossHpProgress.getComponent(ProgressBar).progress;\r\n            }\r\n        } else {\r\n            this.bossHpLayer.active = false;\r\n        }\r\n    }\r\n\r\n    bossSubHp(dam: number) {\r\n        let pStart = this.bossHpProgress.getComponent(ProgressBar).progress;\r\n        this.bossDamProgressBar.progress = pStart;\r\n\r\n        mapModel.mapLayer.refreshBossHpLayer();\r\n        let pEnd = this.bossHpProgress.getComponent(ProgressBar).progress;\r\n\r\n        Tween.stopAllByTarget(this.bossDamProgressBar);\r\n        tween(this.bossDamProgressBar).to(0.5, { progress: pEnd }, { easing: \"quadOut\" }).start();\r\n    }\r\n\r\n    refreshResLayer() {\r\n        this.setString(this.coinNumNode, mapModel.coinNum);\r\n        this.setString(this.diamondNumNode, UserData.getInstance().baoshi);\r\n        this.setString(this.killMonsterNumNode, mapModel.killMonsterNum);\r\n    }\r\n\r\n    refreshExpLayer() {\r\n        let row = designManager.getRowById(constants.tableName.expLv, mapModel.expLv);\r\n        if (!row) {\r\n            return;\r\n        }\r\n        let total = row.exp;\r\n        let current = mapModel.expNum;\r\n        if (mapModel.expLv > 1) {\r\n            let lastRow = designManager.getRowById(constants.tableName.expLv, mapModel.expLv - 1);\r\n            total = row.exp - lastRow.exp;\r\n            current = mapModel.expNum - lastRow.exp;\r\n        }\r\n        this.setProgressBar(this.expProgress, current / total);\r\n        this.setString(this.expLvNode, mapModel.expLv);\r\n        // 闪白\r\n        this.expBarShineColor.startShine(constants.materials.shineColor, null, 0.2);\r\n\r\n        if (mapModel.expNum >= row.exp && mapModel.player.hp > 0) {\r\n            // 升级了\r\n            this.expLvUpCount++;\r\n            mapModel.expLv++;\r\n            if (mapModel.expLv % designManager.config.check == 0) {\r\n                mapModel.skillAllNum++;\r\n            }\r\n            this.expBarColorIndex++;\r\n            if (this.expBarColorIndex >= this.expBarColorArr.length) {\r\n                this.expBarColorIndex = 0;\r\n            }\r\n            cocosUtil.setRenderableColor(find(\"bar\", this.expProgress), this.expBarColorArr[this.expBarColorIndex]);\r\n            this.refreshExpLayer();\r\n            this.unschedule(this.onSkillSelect);\r\n            this.scheduleOnce(this.onSkillSelect, 0.5);\r\n        }\r\n    }\r\n\r\n    onSkillSelect() {\r\n        if (this.expLvUpCount <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (mapModel.player.hp > 0 && !playerModel.isRecordAd) {\r\n            this.expProgress.active = false;\r\n            let obj: any = {};\r\n            obj.lvCount = this.expLvUpCount;\r\n            this.popLayer(constants.layers.SkillSelectLayer, obj, () => {\r\n                this.expProgress.active = true;\r\n            });\r\n        }\r\n\r\n        if (mapModel.player.hp > 0) {\r\n            this.expLvUpCount = 0;\r\n        }\r\n    }\r\n\r\n    popLayer(layerName: string, layerData?: any, layerCb?: Function) {\r\n        if (this.isShowingLayer(layerName)) {\r\n            return;\r\n        }\r\n        this.gameFightPause();\r\n        this.openLayer(layerName, layerData, () => {\r\n            this.gameFightResume();\r\n            if (layerCb) {\r\n                layerCb();\r\n            }\r\n        });\r\n    }\r\n\r\n    refreshTimeNode() {\r\n        let timeStr = utilTools.getTimeStr(mapModel.time * 1000, true);\r\n        this.setString(this.timeNode, timeStr);\r\n    }\r\n\r\n    gameFightPause() {\r\n        this.mapSystem.fightPause();\r\n    }\r\n\r\n    gameFightResume() {\r\n        this.mapSystem.fightResume();\r\n    }\r\n\r\n    mapLeaveRet(data: any) {\r\n        UserData.getInstance().mapData = null;\r\n        this.closeLayer();\r\n        this.openLayer(constants.layers.HomeLayer, data);\r\n    }\r\n\r\n    commonResRefreshRet(data: any) {\r\n        this.refreshResLayer();\r\n    }\r\n\r\n    loadSaveMapData(mapData: any) {\r\n        mapModel.loadSaveData(mapData.mapModel);\r\n        mapModel.mapSystem.loadSaveData(mapData.mapData);\r\n        mapModel.propSystem.loadSaveData(mapData.propData);\r\n        mapModel.weaponSystem.loadSaveData(mapData.weaponData);\r\n        mapModel.skillSystem.loadSaveData(mapData.skillData);\r\n        mapModel.player.loadSaveData(mapData.player);\r\n        mapModel.monsterSystem.loadSaveData(mapData.monsterData);\r\n    }\r\n\r\n    saveDataBeforeRet(data: any) {\r\n        if (mapModel.player.hp <= 0) {\r\n            return;\r\n        }\r\n        mapModel.propSystem.saveDataBefore();\r\n\r\n        let mapData: any = {};\r\n        mapData.mapModel = mapModel.getSaveData();\r\n        mapData.mapData = mapModel.mapSystem.getSaveData();\r\n        mapData.propData = mapModel.propSystem.getSaveData();\r\n        mapData.weaponData = mapModel.weaponSystem.getSaveData();\r\n        mapData.skillData = mapModel.skillSystem.getSaveData();\r\n        mapData.player = mapModel.player.getSaveData();\r\n        mapData.monsterData = mapModel.monsterSystem.getSaveData();\r\n\r\n        UserData.getInstance().mapData = mapData;\r\n    }\r\n\r\n    onClickBtnSkillBomb() {\r\n        if (mapModel.mapSystem.skillBombCd > 0) {\r\n            this.createNotice(localText.cd);\r\n            return;\r\n        }\r\n        if (playerModel.skillBombNum > 0) {\r\n            mapModel.mapSystem.useSkillBomb();\r\n            this.refreshSkillLayer();\r\n            return;\r\n        }\r\n\r\n        sdkManager.openAd(\"主动技能-炸弹\", (st: number) => {\r\n            if (st == 1) {\r\n                let num = utilTools.getFloatValue(1, 3, true);\r\n                playerModel.skillBombNum += num;\r\n                this.refreshSkillLayer();\r\n            }\r\n        });\r\n    }\r\n\r\n    onClickBtnSkillHeal() {\r\n        if (mapModel.mapSystem.skillHealCd > 0) {\r\n            this.createNotice(localText.cd);\r\n            return;\r\n        }\r\n        if (playerModel.skillHealNum > 0) {\r\n            mapModel.mapSystem.useSkillHeal();\r\n            this.refreshSkillLayer();\r\n            return;\r\n        }\r\n\r\n        sdkManager.openAd(\"主动技能-治疗\", (st: number) => {\r\n            if (st == 1) {\r\n                playerModel.skillHealNum += 4;\r\n                this.refreshSkillLayer();\r\n            }\r\n        });\r\n    }\r\n\r\n    onClickBtnSkillMagnet() {\r\n        if (playerModel.skillMagnetNum > 0) {\r\n            mapModel.mapSystem.useSkillMagnet();\r\n            this.refreshSkillLayer();\r\n            return;\r\n        }\r\n\r\n        sdkManager.openAd(\"主动技能-磁铁\", (st: number) => {\r\n            if (st == 1) {\r\n                playerModel.skillMagnetNum++;\r\n                this.refreshSkillLayer();\r\n            }\r\n        });\r\n    }\r\n\r\n    onClickBtnSkillLife() {\r\n        if (playerModel.skillLifeNum > 0) {\r\n            return;\r\n        }\r\n\r\n        sdkManager.openAd(\"主动技能-自动复活\", (st: number) => {\r\n            if (st == 1) {\r\n                playerModel.skillLifeNum++;\r\n                this.refreshSkillLayer();\r\n            }\r\n        });\r\n    }\r\n\r\n    onClickBtnPause(node: Node) {\r\n        this.popLayer(constants.layers.PauseLayer);\r\n    }\r\n\r\n    onClickBtnClose(node: Node) {\r\n        serverMsg.send(msgac.mapLeave);\r\n    }\r\n\r\n    onClickBtnSkillSelectLayer() {\r\n        this.popLayer(constants.layers.SkillSelectLayer);\r\n    }\r\n\r\n    onClickBtnResume() {\r\n        this.gameFightResume();\r\n    }\r\n\r\n    onClickBtnBoss() {\r\n        if (mapModel.time < 300) {\r\n            mapModel.time = 295;\r\n        } else if (mapModel.time < 600 && mapModel.time > 305) {\r\n            mapModel.time = 595;\r\n        } else if (mapModel.time > 605) {\r\n            mapModel.time = 895;\r\n        }\r\n    }\r\n\r\n    onClickBtnLuckyDraw() {\r\n        // this.popLayer(constants.layers.LuckyDrawLayer);\r\n        this.popLayer(constants.layers.BoxMonsterLayer);\r\n    }\r\n\r\n    onClickBtnAccountClear() {\r\n        UserData.getInstance().clearAccountData();\r\n    }\r\n\r\n    onClickBtnMonsterAdd() {\r\n        if (!this.monsterAddFlag) {\r\n            this.monsterAddFlag = 0;\r\n        }\r\n        this.monsterAddFlag++;\r\n    }\r\n\r\n}\r\n\r\n"]}