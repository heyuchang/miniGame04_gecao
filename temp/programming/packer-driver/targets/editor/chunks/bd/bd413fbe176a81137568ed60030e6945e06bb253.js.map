{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/GameLaunch.ts"],"names":["assetManager","AudioSource","director","find","Node","_decorator","myLog","GLoginState","GNetCmd","GNetConst","CronCtr","ServerCtr","tyqAdManager","cocosUtil","BaseLayer","constants","msgac","audioManager","eventManager","layerManager","localStorageManager","playerModel","ccclass","property","GameLaunch","onLoad","isInDevelopmentEnvironment","isOpen","init","btnTest","getNodeByPath","active","layer1","node","layerHint","setMusicAudioSource","getComponent","setEffectAudioSource","loadingName","layers","LoadingLayer","addComponent","noticeName","NoticeLayer","i","getEnterUrlQuery","on","GetFriendVal","toString","onMessageEvent","ReqWxSession","GetRegionData","onEnable","addEventArr","openLayer","showNotice","onDisable","start","canvasNode","EventType","TOUCH_START","event","send","globalTouchStart","value","console","log","status","ResSuccess","error","GetInstance","isLogin","getInstance","isPutEnable","loginState","loginWithAccount","ctr","cmd","shareObj","friendNum","friendCnt","friendData","JSON","parse","friendAdNum","videoCalCnt","friendPassNum","friendPassCnt","token","regionDataList","nickName","reqRegionData","wxRes","openid","openId","uid","serverDataVersion","dataVersion","dataVersionFlag","ServerIsNew","serverData","jsonData","regionId","openLayerRet","data","name","showNoticeRet","createNotice","onClickBtnTest","assets","onClickBtnHintClose","hideHintLayer"],"mappings":"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","sourcesContent":["import { assetManager, AudioSource, director, EventTouch, find, Node, _decorator } from 'cc';\r\nimport { myLog } from '../common/myLog';\r\nimport { GLoginState, GNetCmd, GNetConst } from '../tyqSDK/network/conf';\r\nimport CronCtr from '../tyqSDK/network/CronCtr';\r\nimport ServerCtr from '../tyqSDK/network/ServerCtr';\r\nimport { tyqAdManager } from '../tyqSDK/tyqAdManager';\r\nimport { cocosUtil } from '../utils/cocosUtil';\r\nimport { BaseLayer } from './compoment/base/BaseLayer';\r\nimport { constants } from './data/constants';\r\nimport { msgac } from './data/msgac';\r\nimport { audioManager } from './manager/audioManager';\r\nimport { eventManager } from './manager/eventManager';\r\nimport { layerManager } from './manager/layerManager';\r\nimport { localStorageManager } from './manager/localStorageManager';\r\nimport { playerModel } from './model/playerModel';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameLaunch')\r\nexport class GameLaunch extends BaseLayer {\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n\r\n        if (playerModel.isInDevelopmentEnvironment()) {\r\n            myLog.isOpen = true;\r\n        }\r\n\r\n        cocosUtil.init();\r\n        msgac.init();\r\n\r\n        super.onLoad();\r\n\r\n        let btnTest = this.getNodeByPath(\"btnTest\");\r\n        btnTest.active = playerModel.isInDevelopmentEnvironment();\r\n\r\n        let layer1 = find(\"layer1\", this.node);\r\n        let layerHint = find(\"layerHint\", this.node);\r\n        layerManager.init(layer1, layerHint);\r\n\r\n        // 设置音频播放组件\r\n        audioManager.setMusicAudioSource(this.getNodeByPath(\"audio/music\").getComponent(AudioSource));\r\n        audioManager.setEffectAudioSource(this.getNodeByPath(\"audio/effect\").getComponent(AudioSource));\r\n\r\n        let loadingName = constants.layers.LoadingLayer;\r\n        this.getNodeByPath(loadingName).addComponent(loadingName);\r\n\r\n        let noticeName = constants.layers.NoticeLayer;\r\n        find(noticeName, layerHint).addComponent(noticeName);\r\n\r\n        myLog.i(\"========启动参数：\", tyqAdManager.getEnterUrlQuery());\r\n\r\n        director.on(GNetCmd.GetFriendVal.toString(), this.onMessageEvent, this);\r\n\r\n        director.on(GNetCmd.ReqWxSession.toString(), this.onMessageEvent, this);\r\n        director.on(GNetCmd.GetRegionData.toString(), this.onMessageEvent, this);\r\n    }\r\n\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n\r\n        this.addEventArr([\r\n            msgac.openLayer,\r\n            msgac.showNotice,\r\n        ]);\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n\r\n    }\r\n\r\n    start() {\r\n        let canvasNode = find(\"Canvas\");\r\n        canvasNode.on(Node.EventType.TOUCH_START, (event: EventTouch) => {\r\n            eventManager.send(msgac.globalTouchStart, event);\r\n        });\r\n\r\n    }\r\n\r\n    onMessageEvent(value) {\r\n        console.log(\"处理服务端发送的消息:\", value);\r\n        if (value.status != GNetConst.ResSuccess) {\r\n            console.error(\"服务端响应失败~!\")\r\n            ServerCtr.GetInstance().isLogin = false;\r\n            CronCtr.getInstance().isPutEnable = false;\r\n            ServerCtr.GetInstance().loginState = GLoginState.loginWithAccount\r\n            return;\r\n        }\r\n        let ctr = ServerCtr.GetInstance();\r\n        switch (value.cmd) {\r\n            case GNetCmd.GetFriendVal:\r\n                playerModel.shareObj.friendNum = value.friendCnt;\r\n                let friendData = JSON.parse(value.friendData);\r\n                playerModel.shareObj.friendAdNum = friendData.videoCalCnt;\r\n                playerModel.shareObj.friendPassNum = friendData.friendPassCnt;\r\n                break;\r\n            case GNetCmd.ReqWxSession:\r\n                ctr.token = value.token;\r\n                ctr.regionDataList = value.regionDataList;\r\n                if (value.nickName && value.nickName != '') {\r\n                    ctr.nickName = value.nickName;\r\n                }\r\n                //直接请求服务端数据\r\n                ServerCtr.GetInstance().reqRegionData()\r\n                if (value.wxRes && value.wxRes.openid) {\r\n                    localStorageManager.openId = value.wxRes.openid;\r\n                }\r\n                if (value.uid) {\r\n                    localStorageManager.uid = value.uid;\r\n                }\r\n                break;\r\n            case GNetCmd.GetRegionData:\r\n                ctr.token = value.token;\r\n                ctr.isLogin = true;\r\n                //标记是账号登录\r\n                ServerCtr.GetInstance().serverDataVersion = value.dataVersion\r\n\r\n                //如果服务端的版本大于本地，直接赋值\r\n                if (value.dataVersionFlag == GNetConst.ServerIsNew) {\r\n                    ServerCtr.GetInstance().serverData = JSON.parse(value.jsonData)\r\n                }\r\n\r\n                ctr.loginState = GLoginState.loginWithAccount\r\n                CronCtr.getInstance().isPutEnable = false;\r\n\r\n                console.log(\"获得服务端数据!\", ServerCtr.GetInstance().serverData)\r\n\r\n                ctr.uid = value.uid;\r\n                ctr.regionId = value.regionId;\r\n\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    openLayerRet(data: any) {\r\n        this.openLayer(constants.layers[data.name], data);\r\n    }\r\n\r\n    showNoticeRet(data: any) {\r\n        this.createNotice(data);\r\n    }\r\n\r\n    onClickBtnTest(node: Node) {\r\n        myLog.i(assetManager.assets);\r\n\r\n    }\r\n\r\n    onClickBtnHintClose() {\r\n        this.hideHintLayer();\r\n    }\r\n\r\n}\r\n\r\n"]}