{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/layer/TowerLayer.ts"],"names":["Animation","find","ScrollView","_decorator","constants","designManager","UserData","AnimationCtrl","BaseLayer","ccclass","property","TowerLayer","qianShouNode","dianJvNode","xieZiNode","nianChouNode","paoDangRenNode","btnsLayer","onLoad","layerName","layers","getNodeByPath","chs","children","i","length","addComponent","textNode","row","getRowById","tableName","map","setString","name","onEnable","onDisable","onDestroy","initUI","getComponent","scrollToTop","itemUI","handNode","active","needHand","scheduleOnce","startQianShouUpdate","startDianJvUpdate","startXieziUpdate","startNianChouUpdate","startPaoDangRenUpdate","Math","random","floorId","getInstance","getTowerMapInfo","floor","spineSkeleton","animation","playAnimation","num","pause","playAnimationOnce","resume","processEvent","ac","data","onButtonClick","node","openTowerFloorLayer","mapId","obj","id","openLayer","TowerFloorLayer","onClickBtnTower"],"mappings":"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","sourcesContent":["import { Animation, find, Node, ScrollView, _decorator } from 'cc';\r\nimport { constants } from '../../data/constants';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { UserData } from '../../model/UserData';\r\nimport { AnimationCtrl } from '../base/AnimationCtrl';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TowerLayer')\r\nexport class TowerLayer extends BaseLayer {\r\n\r\n    qianShouNode: Node;\r\n    dianJvNode: Node;\r\n    xieZiNode: Node;\r\n    nianChouNode: Node;\r\n    paoDangRenNode: Node;\r\n\r\n    btnsLayer: Node;\r\n\r\n    onLoad() {\r\n        this.layerName = constants.layers.TowerLayer;\r\n        super.onLoad();\r\n\r\n        this.btnsLayer = this.getNodeByPath(\"ui/listNoUtil/view/content/map\");\r\n        let chs = this.btnsLayer.children;\r\n        for (let i = 0; i < chs.length; i++) {\r\n            find(\"monster\", chs[i]).addComponent(AnimationCtrl);\r\n            let textNode = find(\"name/text\", chs[i]);\r\n            let row = designManager.getRowById(constants.tableName.map, 101 + i);\r\n            this.setString(textNode, row.name)\r\n        }\r\n        this.qianShouNode = find(\"monster\", chs[0]);\r\n        this.dianJvNode = find(\"monster\", chs[1]);\r\n        this.xieZiNode = find(\"monster\", chs[2]);\r\n        this.nianChouNode = find(\"monster\", chs[4]);\r\n        this.paoDangRenNode = find(\"monster\", chs[5]);\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    initUI() {\r\n        this.getNodeByPath(\"ui/listNoUtil\").getComponent(ScrollView).scrollToTop();\r\n        let chs = this.btnsLayer.children;\r\n        for (let i = 0; i < chs.length; i++) {\r\n            let itemUI = chs[i];\r\n            let row = designManager.getRowById(constants.tableName.map, 100 + i + 1);\r\n            // @ts-ignore\r\n            itemUI.row = row;\r\n            this.setString(find(\"name\", itemUI), row.name);\r\n            let handNode = find(\"hand\", itemUI);\r\n            if (handNode) {\r\n                handNode.active = false;\r\n            }\r\n            if (this.needHand()) {\r\n                if (i == 0) {\r\n                    itemUI.active = true;\r\n                    handNode.active = true;\r\n                } else {\r\n                    itemUI.active = false;\r\n                }\r\n            } else {\r\n                itemUI.active = true;\r\n            }\r\n        }\r\n\r\n        this.scheduleOnce(() => {\r\n            this.startQianShouUpdate();\r\n            if (!this.needHand()) {\r\n                this.startDianJvUpdate();\r\n                this.startXieziUpdate();\r\n                this.startNianChouUpdate();\r\n                this.startPaoDangRenUpdate();\r\n            }\r\n        }, 1 + Math.random());\r\n    }\r\n\r\n    needHand() {\r\n        let floorId = UserData.getInstance().getTowerMapInfo(101).floor;\r\n        if (floorId <= 1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    startPaoDangRenUpdate() {\r\n        if (Math.random() > 0.3) {\r\n            if (this.paoDangRenNode.getComponent(AnimationCtrl).spineSkeleton.animation != \"walk\") {\r\n                this.paoDangRenNode.getComponent(AnimationCtrl).playAnimation(\"walk\", true);\r\n            }\r\n            this.scheduleOnce(() => {\r\n                this.startPaoDangRenUpdate();\r\n            }, 1 + Math.random());\r\n        } else {\r\n            let name = Math.random() > 0.7 ? \"attack1\" : \"attack3\";\r\n            if (name == \"attack1\") {\r\n                let num = Math.random();\r\n                if (num < 0.33) {\r\n                    name = \"attackHand1\";\r\n                } else if (num < 0.66) {\r\n                    name = \"attackHand2\";\r\n                } else {\r\n                    name = \"attackHand3\";\r\n                }\r\n            }\r\n            let animation = this.paoDangRenNode.getComponent(Animation);\r\n            animation.pause();\r\n            this.paoDangRenNode.getComponent(AnimationCtrl).playAnimationOnce(name, () => {\r\n                animation.resume();\r\n                this.startPaoDangRenUpdate();\r\n            });\r\n        }\r\n    }\r\n\r\n    startNianChouUpdate() {\r\n        if (Math.random() > 0.2) {\r\n            if (this.nianChouNode.getComponent(AnimationCtrl).spineSkeleton.animation != \"walk\") {\r\n                this.nianChouNode.getComponent(AnimationCtrl).playAnimation(\"walk\", true);\r\n            }\r\n            this.scheduleOnce(() => {\r\n                this.startNianChouUpdate();\r\n            }, 1 + Math.random());\r\n        } else {\r\n            this.nianChouNode.getComponent(AnimationCtrl).playAnimationOnce(\"attack1\", () => {\r\n                this.startNianChouUpdate();\r\n            });\r\n        }\r\n    }\r\n\r\n    startXieziUpdate() {\r\n        if (Math.random() > 0.2) {\r\n            if (this.xieZiNode.getComponent(AnimationCtrl).spineSkeleton.animation != \"walk\") {\r\n                this.xieZiNode.getComponent(AnimationCtrl).playAnimation(\"walk\", true);\r\n            }\r\n            this.scheduleOnce(() => {\r\n                this.startXieziUpdate();\r\n            }, 1 + Math.random());\r\n        } else {\r\n            let name = Math.random() > 0.5 ? \"attack1\" : \"attack4\";\r\n            this.xieZiNode.getComponent(AnimationCtrl).playAnimationOnce(name, () => {\r\n                this.startXieziUpdate();\r\n            });\r\n        }\r\n    }\r\n\r\n    startDianJvUpdate() {\r\n        if (Math.random() > 0.3) {\r\n            if (this.dianJvNode.getComponent(AnimationCtrl).spineSkeleton.animation != \"walk\") {\r\n                this.dianJvNode.getComponent(AnimationCtrl).playAnimation(\"walk\", true);\r\n            }\r\n            this.scheduleOnce(() => {\r\n                this.startDianJvUpdate();\r\n            }, 1 + Math.random());\r\n        } else {\r\n            let name = Math.random() > 0.5 ? \"attack1\" : \"attack2\";\r\n            this.dianJvNode.getComponent(AnimationCtrl).playAnimationOnce(name, () => {\r\n                this.startDianJvUpdate();\r\n            });\r\n        }\r\n    }\r\n\r\n    startQianShouUpdate() {\r\n        if (Math.random() > 0.5) {\r\n            if (this.qianShouNode.getComponent(AnimationCtrl).spineSkeleton.animation != \"walk\") {\r\n                this.qianShouNode.getComponent(AnimationCtrl).playAnimation(\"walk\", true);\r\n            }\r\n            this.scheduleOnce(() => {\r\n                this.startQianShouUpdate();\r\n            }, 1 + Math.random());\r\n        } else {\r\n            this.qianShouNode.getComponent(AnimationCtrl).playAnimationOnce(\"attack\", () => {\r\n                this.startQianShouUpdate();\r\n            });\r\n        }\r\n    }\r\n\r\n    processEvent(ac: any, data: any) {\r\n        switch (ac) {\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onButtonClick(node: Node, name: string) {\r\n        switch (name) {\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    openTowerFloorLayer(mapId: number) {\r\n        let obj = {\r\n            id: mapId\r\n        };\r\n        this.openLayer(constants.layers.TowerFloorLayer, obj);\r\n    }\r\n\r\n    onClickBtnTower(node: any) {\r\n        let row = node.row;\r\n        this.openTowerFloorLayer(row.id);\r\n    }\r\n\r\n}\r\n\r\n"]}