{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/item/monsters/Monster5.ts"],"names":["BoxCollider2D","Component","tween","_decorator","cocosUtil","utilTools","constants","mapModel","physicsGroup","ccclass","property","Monster5","monster","moveStop","otherCollider1","otherCollider2","bulletId","otherColliderOffset","otherColliderSize","init","getComponents","resetOtherCollider","startSkillLogic","enabled","time","Math","random","scheduleOnce","hp","attackWithSkill1","attackWithSkill2","animationCtrl","playAnimation","speed","animations","walk","playAnimationOnce","pos","node","getPosition","direction","player","subtract","normalize","multiplyScalar","add","to","position","easing","start","p","getInfoPosition","arr","getCircleDirectionArr","convertToWorldSpaceWithPos","forArr","bulletSystem","addBullet","MONSTER_BULLET"],"mappings":"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","sourcesContent":["import { BoxCollider2D, Component, tween, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../../utils/utilTools';\r\nimport { constants } from '../../../data/constants';\r\nimport { mapModel } from '../../../model/mapModel';\r\nimport { physicsGroup } from '../../../other/physicsGroup';\r\nimport { Monster } from './Monster';\r\nconst { ccclass, property } = _decorator;\r\n\r\n// 电锯人\r\n@ccclass('Monster5')\r\nexport class Monster5 extends Component {\r\n\r\n    monster: Monster;\r\n    moveStop: boolean;\r\n\r\n    otherCollider1: BoxCollider2D;\r\n    otherCollider2: BoxCollider2D;\r\n\r\n    // 齿轮子弹\r\n    bulletId: number = 1004;\r\n\r\n    otherColliderOffset: any;\r\n    otherColliderSize: any;\r\n\r\n    init(monster: Monster) {\r\n        this.monster = monster;\r\n        this.moveStop = false;\r\n\r\n        this.otherCollider1 = monster.getComponents(BoxCollider2D)[1];\r\n        this.otherCollider2 = monster.getComponents(BoxCollider2D)[2];\r\n        this.resetOtherCollider();\r\n\r\n        this.startSkillLogic();\r\n\r\n    }\r\n\r\n    resetOtherCollider() {\r\n        this.otherCollider1.enabled = true;\r\n        this.otherCollider2.enabled = false;\r\n    }\r\n\r\n    startSkillLogic() {\r\n        let time = 2 + Math.random() * 2;\r\n        this.scheduleOnce(() => {\r\n            if (this.monster.hp <= 0) {\r\n                return;\r\n            }\r\n            if (Math.random() < 0.6) {\r\n                this.attackWithSkill1();\r\n                return;\r\n            }\r\n            this.attackWithSkill2();\r\n        }, time);\r\n    }\r\n\r\n    attackWithSkill1() {\r\n        this.otherCollider1.enabled = false;\r\n        this.otherCollider2.enabled = true;\r\n        this.monster.animationCtrl.playAnimation(\"attack1\", true);\r\n        let speed = this.monster.speed;\r\n        this.monster.speed += speed * 2;\r\n        this.scheduleOnce(() => {\r\n            this.resetOtherCollider();\r\n            this.monster.animationCtrl.playAnimation(constants.animations.walk, true);\r\n            this.monster.speed = speed;\r\n            this.startSkillLogic();\r\n        }, 3);\r\n    }\r\n\r\n    attackWithSkill2() {\r\n        this.monster.animationCtrl.playAnimationOnce(\"attack2\", () => {\r\n            this.startSkillLogic();\r\n        });\r\n\r\n        let pos = this.monster.node.getPosition();\r\n        let direction = mapModel.player.node.getPosition().subtract(pos).normalize();\r\n        direction.multiplyScalar(200);\r\n        pos.add(direction);\r\n\r\n        tween(this.monster.node).to(0.5, { position: pos }, { easing: \"quadOut\" }).start();\r\n\r\n        this.scheduleOnce(() => {\r\n            // 一圈子弹\r\n            let p = this.monster.getInfoPosition();\r\n            let arr = cocosUtil.getCircleDirectionArr(10);\r\n            p = cocosUtil.convertToWorldSpaceWithPos(this.monster.node, p);\r\n            utilTools.forArr(arr, (direction: any) => {\r\n                mapModel.bulletSystem.addBullet(this.bulletId, physicsGroup.MONSTER_BULLET, p, direction);\r\n            });\r\n        }, 0.5);\r\n    }\r\n\r\n}\r\n\r\n"]}