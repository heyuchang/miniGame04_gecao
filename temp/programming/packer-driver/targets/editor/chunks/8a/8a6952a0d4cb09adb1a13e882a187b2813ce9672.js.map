{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/utils/FileUtils.ts"],"names":["FileUtils","READ_FILE_TYPE","openLocalFile","accept","callback","inputEl","document","getElementById","createElement","id","setAttribute","style","opacity","position","body","appendChild","onchange","event","files","length","file","click","readLocalFile","readType","reader","FileReader","onload","readyState","DONE","result","DATA_URL","readAsDataURL","TEXT","readAsText","BINARY","readAsBinaryString","ARRAYBUFFER","readAsArrayBuffer","saveForBrowser","textToWrite","fileNameToSaveAs","cc","sys","isBrowser","console","log","textFileAsBlob","Blob","type","downloadLink","download","innerHTML","window","webkitURL","href","createObjectURL","URL","display","saveDataForNative","data","fullPath","model","isNative","myGlobal","myjsb","ret","MyFileUtils","getInstance","writeDataToFile"],"mappings":"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","sourcesContent":["import * as cc from \"cc\";\r\n\r\nenum READ_FILE_TYPE {\r\n    DATA_URL,// readAsDataURL, base64\r\n    TEXT,// readAsText\r\n    BINARY,// readAsBinaryString\r\n    ARRAYBUFFER,// readAsArrayBuffer\r\n}\r\n\r\nexport class FileUtils {\r\n    /**\r\n    * 打开文件选择器\r\n    *\r\n    * @param {string} accept\r\n    * @param {(file: File) => void} callback\r\n    * @memberof FileMgr\r\n    */\r\n    public static openLocalFile(accept: string, callback: (file: File) => void) {\r\n        let inputEl: HTMLInputElement = <HTMLInputElement>document.getElementById('file_input');\r\n        if (!inputEl) {\r\n            // console.log('xxxxxx createElement input');\r\n            inputEl = document.createElement('input');\r\n            inputEl.id = 'file_input';\r\n            inputEl.setAttribute('id', 'file_input');\r\n            inputEl.setAttribute('type', 'file');\r\n            inputEl.setAttribute('class', 'fileToUpload');\r\n            inputEl.style.opacity = '0';\r\n            inputEl.style.position = 'absolute';\r\n            inputEl.setAttribute('left', '-999px');\r\n            document.body.appendChild(inputEl);\r\n        }\r\n\r\n        accept = accept || \".*\";\r\n        inputEl.setAttribute('accept', accept);\r\n\r\n        inputEl.onchange = (event) => {\r\n            let files = inputEl.files\r\n            if (files && files.length > 0) {\r\n                var file = files[0];\r\n                if (callback) callback(file);\r\n            }\r\n        }\r\n        inputEl.click();\r\n    }\r\n\r\n    /**\r\n     * 读取本地文件数据\r\n     *\r\n     * @param {File} file\r\n     * @param {READ_FILE_TYPE} readType\r\n     * @param {((result: string | ArrayBuffer) => void)} callback\r\n     * @memberof FileMgr\r\n     */\r\n    public static readLocalFile(file: File, readType: READ_FILE_TYPE, callback: (result: string | ArrayBuffer) => void) {\r\n        var reader = new FileReader();\r\n        reader.onload = function (event) {\r\n            if (callback) {\r\n                if (reader.readyState == FileReader.DONE) {\r\n                    callback(reader.result!);\r\n                } else {\r\n                    callback(null!);\r\n                }\r\n            }\r\n        };\r\n        switch (readType) {\r\n            case READ_FILE_TYPE.DATA_URL:\r\n                reader.readAsDataURL(file);\r\n                break;\r\n            case READ_FILE_TYPE.TEXT:\r\n                reader.readAsText(file);   //作为字符串读出\r\n                //reader.readAsText(file,'gb2312');   //默认是用utf-8格式输出的，想指定输出格式就再添加一个参数，像txt的ANSI格式只能用国标才能显示出来\r\n                break;\r\n            case READ_FILE_TYPE.BINARY:\r\n                reader.readAsBinaryString(file);\r\n                break;\r\n            case READ_FILE_TYPE.ARRAYBUFFER:\r\n                reader.readAsArrayBuffer(file);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 保存数据到本地\r\n     *\r\n     * @param {*} textToWrite       要保存的文件内容\r\n     * @param {*} fileNameToSaveAs  要保存的文件名\r\n     * @memberof FileMgr\r\n     */\r\n    public static saveForBrowser(textToWrite: string, fileNameToSaveAs: string) {\r\n        if (cc.sys.isBrowser) {\r\n            console.log(\"浏览器\");\r\n            let textFileAsBlob = new Blob([textToWrite], { type: 'text/plain;charset=utf-8' });\r\n            let downloadLink = document.createElement(\"a\");\r\n            downloadLink.download = fileNameToSaveAs;\r\n            downloadLink.innerHTML = \"Download File\";\r\n            if (window.webkitURL != null) {\r\n                // Chrome allows the link to be clicked            \r\n                // without actually adding it to the DOM.            \r\n                downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\r\n            } else {\r\n                // Firefox requires the link to be added to the DOM            \r\n                // before it can be clicked.            \r\n                downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\r\n                // downloadLink.onclick = destroyClickedElement;            \r\n                downloadLink.style.display = \"none\";\r\n                document.body.appendChild(downloadLink);\r\n            }\r\n            downloadLink.click();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 保存数据到本地\r\n     *\r\n     * @param {*} data   要保存的文件内容 支持 ArrayBuffer | string\r\n     * @param {*} model  打开文件模式\r\n     * @param {*} fullPath  要保存的文件路径+文件名\r\n     * @memberof FileMgr\r\n     */\r\n    public static saveDataForNative(data: ArrayBuffer | string, fullPath: string, model: string = 'wb') {\r\n        if (cc.sys.isNative) {\r\n            let myGlobal: any = window;\r\n            let myjsb = myGlobal.myjsb;\r\n            if (myjsb) {\r\n                let ret = myjsb.MyFileUtils.getInstance().writeDataToFile(data, model, fullPath);\r\n                return ret;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}"]}