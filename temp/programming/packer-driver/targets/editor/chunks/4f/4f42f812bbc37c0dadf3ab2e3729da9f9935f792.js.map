{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/sys/NumSystem.ts"],"names":["Color","Component","find","Label","tween","UIOpacity","v3","_decorator","cocosUtil","NodePoolUtil","ccclass","property","NumSystem","numNode","nodePoolUtil","onLoad","node","addComponent","recycleNode","addNum","num","worldPos","color","getNode","pos","convertToNodeSpace","dx","Math","random","x","setPosition","setScale","getComponent","opacity","string","WHITE","setRenderableColor","dy","by","position","scale","onUpdate","ratio","call","start"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,E,OAAAA,E;AAAUC,MAAAA,U,OAAAA,U;;AACjEC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;2BAGjBK,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb,SAC+BX,SAD/B,CACyC;AAAA;AAAA;AAAA,eAErCY,OAFqC;AAAA,eAIrCC,YAJqC;AAAA;;AAMrCC,QAAAA,MAAM,GAAG;AACL,eAAKF,OAAL,GAAeX,IAAI,CAAC,KAAD,EAAQ,KAAKc,IAAb,CAAnB;AACA,eAAKF,YAAL,GAAoB,KAAKG,YAAL;AAAA;AAAA,2CAApB;AACA,eAAKH,YAAL,CAAkBI,WAAlB,CAA8B,KAAKL,OAAnC;AACH;;AAEDM,QAAAA,MAAM,CAACC,GAAD,EAAuBC,QAAvB,EAAuCC,KAAvC,EAAoD;AACtD,cAAIT,OAAO,GAAG,KAAKC,YAAL,CAAkBS,OAAlB,EAAd;AAEA,cAAIC,GAAG,GAAG;AAAA;AAAA,sCAAUC,kBAAV,CAA6BZ,OAA7B,EAAsCQ,QAAtC,CAAV;AACA,cAAIK,EAAE,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAAzB;AACAF,UAAAA,EAAE,GAAGC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsBF,EAAtB,GAA2B,CAACA,EAAjC;AACAF,UAAAA,GAAG,CAACK,CAAJ,IAASH,EAAT;AACAb,UAAAA,OAAO,CAACiB,WAAR,CAAoBN,GAApB;AAEAX,UAAAA,OAAO,CAACkB,QAAR,CAAiBzB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB;AACAO,UAAAA,OAAO,CAACmB,YAAR,CAAqB3B,SAArB,EAAgC4B,OAAhC,GAA0C,GAA1C;AACApB,UAAAA,OAAO,CAACmB,YAAR,CAAqB7B,KAArB,EAA4B+B,MAA5B,GAAqC,KAAKd,GAA1C;;AACA,cAAI,CAACE,KAAL,EAAY;AACRA,YAAAA,KAAK,GAAGtB,KAAK,CAACmC,KAAd;AACH;;AACD;AAAA;AAAA,sCAAUC,kBAAV,CAA6BvB,OAA7B,EAAsCS,KAAtC;AAEA,cAAIe,EAAE,GAAG,KAAKV,IAAI,CAACC,MAAL,KAAgB,EAA9B;AACAxB,UAAAA,KAAK,CAACS,OAAD,CAAL,CAAeyB,EAAf,CAAkB,GAAlB,EAAuB;AACnBC,YAAAA,QAAQ,EAAEjC,EAAE,CAAC,CAAD,EAAI+B,EAAJ,EAAQ,CAAR,CADO;AAEnBG,YAAAA,KAAK,EAAElC,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX;AAFU,WAAvB,EAGGgC,EAHH,CAGM,GAHN,EAGW;AACPE,YAAAA,KAAK,EAAElC,EAAE,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,EAAa,CAAb;AADF,WAHX,EAKG;AACCmC,YAAAA,QAAQ,CAACzB,IAAD,EAAa0B,KAAb,EAA4B;AAChC7B,cAAAA,OAAO,CAACmB,YAAR,CAAqB3B,SAArB,EAAgC4B,OAAhC,GAA0C,CAAC,IAAIS,KAAL,IAAc,GAAxD;AACH;;AAHF,WALH,EASGC,IATH,CASQ,MAAM;AACV,iBAAK7B,YAAL,CAAkBI,WAAlB,CAA8BL,OAA9B;AACH,WAXD,EAWG+B,KAXH;AAaH;;AA3CoC,O","sourcesContent":["import { Color, Component, find, Label, Node, tween, UIOpacity, v3, Vec3, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../utils/cocosUtil';\r\nimport { NodePoolUtil } from '../base/NodePoolUtil';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('NumSystem')\r\nexport class NumSystem extends Component {\r\n\r\n    numNode: Node;\r\n\r\n    nodePoolUtil: NodePoolUtil;\r\n\r\n    onLoad() {\r\n        this.numNode = find(\"num\", this.node);\r\n        this.nodePoolUtil = this.addComponent(NodePoolUtil);\r\n        this.nodePoolUtil.recycleNode(this.numNode);\r\n    }\r\n\r\n    addNum(num: number | string, worldPos: Vec3, color?: any) {\r\n        let numNode = this.nodePoolUtil.getNode();\r\n\r\n        let pos = cocosUtil.convertToNodeSpace(numNode, worldPos);\r\n        let dx = Math.random() * 20;\r\n        dx = Math.random() > 0.5 ? dx : -dx;\r\n        pos.x += dx;\r\n        numNode.setPosition(pos);\r\n\r\n        numNode.setScale(v3(1, 1, 1));\r\n        numNode.getComponent(UIOpacity).opacity = 255;\r\n        numNode.getComponent(Label).string = \"\" + num;\r\n        if (!color) {\r\n            color = Color.WHITE;\r\n        }\r\n        cocosUtil.setRenderableColor(numNode, color);\r\n\r\n        let dy = 20 + Math.random() * 10;\r\n        tween(numNode).by(0.3, {\r\n            position: v3(0, dy, 0),\r\n            scale: v3(0.5, 0.5, 0)\r\n        }).by(0.3, {\r\n            scale: v3(-0.3, -0.3, 0),\r\n        }, {\r\n            onUpdate(node: Node, ratio: number) {\r\n                numNode.getComponent(UIOpacity).opacity = (1 - ratio) * 255;\r\n            }\r\n        }).call(() => {\r\n            this.nodePoolUtil.recycleNode(numNode);\r\n        }).start();\r\n\r\n    }\r\n\r\n}\r\n\r\n"]}