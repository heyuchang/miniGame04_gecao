{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/base/ProgressCtrl.ts"],"names":["Component","ProgressBar","_decorator","ccclass","property","ProgressCtrl","progressBar","time","timeCount","endCb","onLoad","getComponent","getComponentInChildren","startLoadProgress","undefined","update","dt","p","progress"],"mappings":";;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,U,OAAAA,U;;;;;;;;;OAC3B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;;8BAGjBG,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb,SACkCL,SADlC,CAC4C;AAAA;AAAA;AAAA,eAEhCM,WAFgC;AAAA,eAIhCC,IAJgC;AAAA,eAKhCC,SALgC;AAAA,eAMhCC,KANgC;AAAA;;AAQxCC,QAAAA,MAAM,GAAG;AACL,eAAKJ,WAAL,GAAmB,KAAKK,YAAL,CAAkBV,WAAlB,CAAnB;;AACA,cAAI,CAAC,KAAKK,WAAV,EAAuB;AACnB,iBAAKA,WAAL,GAAmB,KAAKM,sBAAL,CAA4BX,WAA5B,CAAnB;AACH;AACJ;;AAEDY,QAAAA,iBAAiB,CAACN,IAAD,EAAeE,KAAf,EAAiC;AAC9C,cAAI,KAAKD,SAAL,IAAkBM,SAAtB,EAAiC;AAC7B;AACA;AACH;;AACD,eAAKP,IAAL,GAAYA,IAAZ;AACA,eAAKE,KAAL,GAAaA,KAAb;AACA,eAAKD,SAAL,GAAiB,CAAjB;AACH;;AAEDO,QAAAA,MAAM,CAACC,EAAD,EAAa;AACf,cAAI,KAAKR,SAAL,IAAkBM,SAAlB,IAA+B,CAAC,KAAKR,WAAzC,EAAsD;AAClD;AACH;;AACD,eAAKE,SAAL,IAAkBQ,EAAlB;AACA,cAAIC,CAAC,GAAG,KAAKT,SAAL,GAAiB,KAAKD,IAA9B;AACA,eAAKD,WAAL,CAAiBY,QAAjB,GAA4BD,CAA5B;;AACA,cAAIA,CAAC,IAAI,CAAT,EAAY;AACR,iBAAKT,SAAL,GAAiBM,SAAjB;;AACA,gBAAI,KAAKL,KAAT,EAAgB;AACZ,mBAAKA,KAAL;AACH;AACJ;AACJ;;AAtCuC,O","sourcesContent":["import { Component, ProgressBar, _decorator } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ProgressCtrl')\r\nexport class ProgressCtrl extends Component {\r\n\r\n    private progressBar: ProgressBar;\r\n    // 时间，单位：秒\r\n    private time: number;\r\n    private timeCount: number;\r\n    private endCb: Function;\r\n\r\n    onLoad() {\r\n        this.progressBar = this.getComponent(ProgressBar);\r\n        if (!this.progressBar) {\r\n            this.progressBar = this.getComponentInChildren(ProgressBar);\r\n        }\r\n    }\r\n\r\n    startLoadProgress(time: number, endCb?: Function) {\r\n        if (this.timeCount != undefined) {\r\n            // 重复调用了\r\n            return;\r\n        }\r\n        this.time = time;\r\n        this.endCb = endCb;\r\n        this.timeCount = 0;\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.timeCount == undefined || !this.progressBar) {\r\n            return;\r\n        }\r\n        this.timeCount += dt;\r\n        let p = this.timeCount / this.time;\r\n        this.progressBar.progress = p;\r\n        if (p >= 1) {\r\n            this.timeCount = undefined;\r\n            if (this.endCb) {\r\n                this.endCb();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n"]}