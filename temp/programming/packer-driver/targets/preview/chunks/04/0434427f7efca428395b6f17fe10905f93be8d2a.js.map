{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/other/serverMsg.ts"],"names":["ServerMsg","myLog","msgac","eventManager","mapModel","playerModel","constructor","instance","_instance","send","ac","data","key","ac2KeyObj","playerMsgStart","playerMsgEnd","mapMsgStart","mapMsgEnd","i","notMyLog","st","serverMsg"],"mappings":";;;iFAMMA,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANGC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;AAEHL,MAAAA,S,GAAN,MAAMA,SAAN,CAAgB;AAEJM,QAAAA,WAAW,GAAG,CAAG;;AACC,mBAARC,QAAQ,GAAc;AACpC,cAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,iBAAKA,SAAL,GAAiB,IAAIR,SAAJ,EAAjB;AACH;;AACD,iBAAO,KAAKQ,SAAZ;AACH,SARW,CAWZ;;;AACOC,QAAAA,IAAI,CAACC,EAAD,EAAaC,IAAb,EAAyB;AAChC,cAAIC,GAAG,GAAG;AAAA;AAAA,8BAAMC,SAAN,CAAgBH,EAAhB,CAAV;;AACA,cAAI,CAACC,IAAL,EAAW;AACPA,YAAAA,IAAI,GAAG,EAAP;AACH,WAJ+B,CAMhC;;;AAEA,cAAID,EAAE,GAAG;AAAA;AAAA,8BAAMI,cAAX,IAA6BJ,EAAE,GAAG;AAAA;AAAA,8BAAMK,YAA5C,EAA0D;AACtD,gBAAI;AAAA;AAAA,4CAAYH,GAAZ,CAAJ,EAAsB;AAClB;AAAA;AAAA,8CAAYA,GAAZ,EAAiBD,IAAjB;AACH;AACJ;;AACD,cAAID,EAAE,GAAG;AAAA;AAAA,8BAAMM,WAAX,IAA0BN,EAAE,GAAG;AAAA;AAAA,8BAAMO,SAAzC,EAAoD;AAChD,gBAAI;AAAA;AAAA,sCAASL,GAAT,CAAJ,EAAmB;AACf;AAAA;AAAA,wCAASA,GAAT,EAAcD,IAAd;AACH;AACJ;;AAED;AAAA;AAAA,8BAAMO,CAAN,CAAQN,GAAG,GAAG,KAAd,EAAqBD,IAArB;AACAA,UAAAA,IAAI,CAACQ,QAAL,GAAgB,IAAhB,CApBgC,CAsBhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAIR,IAAI,CAACS,EAAL,IAAW,CAAf,EAAkB;AACd;AAAA;AAAA,8CAAaX,IAAb,CAAkBC,EAAlB,EAAsBC,IAAtB;AACH;AAEJ;;AA9CW,O;AAAVX,MAAAA,S,CACaQ,S;;2BAiDNa,S,GAAYrB,SAAS,CAACO,Q","sourcesContent":["import { myLog } from \"../../common/myLog\";\r\nimport { msgac } from \"../data/msgac\";\r\nimport { eventManager } from \"../manager/eventManager\";\r\nimport { mapModel } from \"../model/mapModel\";\r\nimport { playerModel } from \"../model/playerModel\";\r\n\r\nclass ServerMsg {\r\n    private static _instance: ServerMsg;\r\n    private constructor() { }\r\n    public static get instance(): ServerMsg {\r\n        if (!this._instance) {\r\n            this._instance = new ServerMsg();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n\r\n    // 模拟客户端与服务端的通信，为以后接入服务端做预留\r\n    public send(ac: number, data?: any) {\r\n        let key = msgac.ac2KeyObj[ac];\r\n        if (!data) {\r\n            data = {};\r\n        }\r\n\r\n        // myLog.i(key, data);\r\n\r\n        if (ac > msgac.playerMsgStart && ac < msgac.playerMsgEnd) {\r\n            if (playerModel[key]) {\r\n                playerModel[key](data);\r\n            }\r\n        }\r\n        if (ac > msgac.mapMsgStart && ac < msgac.mapMsgEnd) {\r\n            if (mapModel[key]) {\r\n                mapModel[key](data);\r\n            }\r\n        }\r\n\r\n        myLog.i(key + \"Ret\", data);\r\n        data.notMyLog = true;\r\n\r\n        // // 公共消息处理\r\n        // switch (data.st) {\r\n        //     case -1:\r\n        //         // 缺少道具\r\n        //         eventManager.send(msgac.playerLackItemHint, data);\r\n        //         return;\r\n        // }\r\n\r\n        if (data.st == 1) {\r\n            eventManager.send(ac, data);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const serverMsg = ServerMsg.instance;"]}