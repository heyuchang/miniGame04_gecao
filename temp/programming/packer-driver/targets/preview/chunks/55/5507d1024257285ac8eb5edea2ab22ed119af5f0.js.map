{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/item/weapon/Weapon.ts"],"names":["BoxCollider2D","Contact2DType","find","tween","Tween","v3","Vec2","Vec3","_decorator","cocosUtil","utilTools","constants","audioManager","designManager","mapModel","playerModel","UserData","physicsGroup","BaseLayer","Monster","ccclass","property","Weapon","info","id","direction","row","atk","atkPercentAdd","bodyNode","collider","lightNode","forward","targetNode","outV3","canFace","parentPos","timeCount","weaponUtil","onLoad","node","getComponent","enabled","on","BEGIN_CONTACT","contactBegin","parent","getPosition","onDestroy","unscheduleAllCallbacks","init","stopAllByTarget","getRowById","tableName","weapon","addComponentOnce","type","e","isFixedPos","scale","getScale","uiIndex","setScale","Math","abs","x","y","z","weaponId","floor","lv","getInstance","getWeaponLv","weaponOpt","weaponSystem","weaponArr","vipRow","vip","vipObj","atkAdd","atkByDart","playEffect","audio","p","convertToWorldSpace","extraObj","bulletSystem","addBullet","bulletId","PLAYER_BULLET","active","delay","atkTime","call","to","easing","start","atkByShot","scheduleOnce","back","clone","normalize","negative","multiplyScalar","orignPos","time","position","atkByFist","atkDis","getDisTargetNode","target","pos","moveMaxFar","atkByStick","angle","da","targetForceMoveBack","monster","monsterTypes","boss","by","getInfoPosition","index","isWorld","infoNode","infoPos","rotateZ","ZERO","angleToRadian","convertToWorldSpaceWithPos","selfCollider","otherCollider","group","MONSTER","dam","ceil","hitWithDam","getCalPosition","player","dis","distance","updateLogic","dt","mapSystem","getMinDisTargetNode","pos1","pos2","subtract","radianToAngle","atan2","isFixedDirection","stopTimeCount","isValid"],"mappings":"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","sourcesContent":["import { BoxCollider2D, Collider2D, Contact2DType, find, Node, tween, Tween, v3, Vec2, Vec3, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../../utils/utilTools';\r\nimport { constants } from '../../../data/constants';\r\nimport { audioManager } from '../../../manager/audioManager';\r\nimport { designManager } from '../../../manager/designManager';\r\nimport { mapModel } from '../../../model/mapModel';\r\nimport { playerModel } from '../../../model/playerModel';\r\nimport { UserData } from '../../../model/UserData';\r\nimport { physicsGroup } from '../../../other/physicsGroup';\r\nimport { BaseLayer } from '../../base/BaseLayer';\r\nimport { Monster } from '../monsters/Monster';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Weapon')\r\nexport class Weapon extends BaseLayer {\r\n\r\n    info: any;\r\n    id: any;\r\n    direction: Vec3;\r\n    row: any;\r\n\r\n    atk: number;\r\n    atkPercentAdd: number;\r\n\r\n    bodyNode: Node;\r\n    collider: BoxCollider2D;\r\n    lightNode: Node;\r\n\r\n    forward: boolean;\r\n\r\n    targetNode: Node;\r\n    outV3: any = v3(0, 0, 0);\r\n    canFace: boolean = true;\r\n    parentPos: Vec3;\r\n\r\n    timeCount: number = 0;\r\n\r\n    weaponUtil: any;\r\n\r\n    onLoad() {\r\n        this.collider = this.node.getComponent(BoxCollider2D);\r\n        if (this.collider) {\r\n            this.collider.enabled = false;\r\n            this.collider.on(Contact2DType.BEGIN_CONTACT, this.contactBegin, this);\r\n        }\r\n        this.bodyNode = find(\"body\", this.node);\r\n        this.lightNode = find(\"light\", this.node);\r\n\r\n        this.parentPos = this.node.parent.getPosition();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.unscheduleAllCallbacks();\r\n        if (this.weaponUtil) {\r\n            this.weaponUtil.unscheduleAllCallbacks();\r\n        }\r\n    }\r\n\r\n    init(info: any) {\r\n        if (!this.bodyNode) {\r\n            this.onLoad();\r\n        }\r\n\r\n        this.info = info;\r\n        let id = info.id;\r\n\r\n        this.id = id;\r\n        this.unscheduleAllCallbacks();\r\n        Tween.stopAllByTarget(this.bodyNode);\r\n\r\n        let row = designManager.getRowById(constants.tableName.weapon, id);\r\n        this.row = row;\r\n\r\n        this.atk = row.atk;\r\n\r\n        try {\r\n            let weaponUtil = cocosUtil.addComponentOnce(this, \"Weapon\" + row.type);\r\n            weaponUtil.unscheduleAllCallbacks();\r\n            this.weaponUtil = weaponUtil;\r\n            // @ts-ignore\r\n            weaponUtil.init(this);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        if (this.weaponUtil && this.weaponUtil.isFixedPos) {\r\n            let scale = this.node.getScale();\r\n            if (info.uiIndex == 0 || info.uiIndex == 3) {\r\n                this.node.setScale(v3(Math.abs(scale.x), scale.y, scale.z));\r\n            } else {\r\n                this.node.setScale(v3(-Math.abs(scale.x), scale.y, scale.z));\r\n            }\r\n        }\r\n\r\n        this.atkPercentAdd = 0;\r\n        if (this.weaponUtil && this.weaponUtil.weaponId > 0 && mapModel.floor > 0) {\r\n            // 爬塔武器等级加成\r\n            let lv = UserData.getInstance().getWeaponLv(this.weaponUtil.weaponId);\r\n            let row = designManager.getRowById(constants.tableName.weaponOpt, lv);\r\n            this.atkPercentAdd = row.atk / 100;\r\n        }\r\n\r\n        if (mapModel.weaponSystem.weaponArr[0] == info) {\r\n            // 主武器攻击力收到vip等级加成\r\n            let vipRow = designManager.getRowById(constants.tableName.vip, playerModel.vipObj.vip);\r\n            if (vipRow) {\r\n                this.atkPercentAdd += vipRow.atkAdd;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // 飞镖类\r\n    atkByDart() {\r\n        audioManager.playEffect(this.row.audio);\r\n        let p = cocosUtil.convertToWorldSpace(this.node);\r\n        let extraObj: any = {};\r\n        extraObj.atkPercentAdd = this.atkPercentAdd;\r\n        mapModel.bulletSystem.addBullet(this.row.bulletId, physicsGroup.PLAYER_BULLET, p, this.direction, extraObj);\r\n        this.timeCount = 0;\r\n        this.bodyNode.active = false;\r\n        tween(this.bodyNode).delay(this.row.atkTime - 0.2).call(() => {\r\n            this.bodyNode.active = true;\r\n            this.bodyNode.setScale(v3(0.1, 0.1, 1));\r\n        }).to(0.2, { scale: v3(1, 1, 1) }, { easing: \"quadOut\" }).start();\r\n    }\r\n\r\n    // 子弹类\r\n    atkByShot() {\r\n        audioManager.playEffect(this.row.audio);\r\n        if (this.lightNode) {\r\n            // 枪口闪光\r\n            this.lightNode.active = true;\r\n            this.scheduleOnce(() => {\r\n                this.lightNode.active = false;\r\n            }, 0.03);\r\n        }\r\n\r\n        // 后摇动作\r\n        this.canFace = false;\r\n        let back = this.direction.clone().normalize().negative().multiplyScalar(20);\r\n        let orignPos = this.node.getPosition();\r\n        let time = 0.05;\r\n        tween(this.node)\r\n            .to(time, { position: back }, { easing: \"quadOut\" })\r\n            .to(time, { position: orignPos }, { easing: \"quadIn\" })\r\n            .call(() => {\r\n                this.canFace = true;\r\n                this.timeCount = 0;\r\n            }).start();\r\n    }\r\n\r\n    // 拳头类\r\n    atkByFist(atkDis: number, time: number) {\r\n        // 攻击距离判断\r\n        if (this.getDisTargetNode() > atkDis) {\r\n            return true;\r\n        }\r\n        audioManager.playEffect(this.row.audio);\r\n        let back = this.direction.clone().normalize().negative().multiplyScalar(20);\r\n        let target = this.direction.clone().normalize().multiplyScalar(atkDis);\r\n        let pos = this.node.getPosition();\r\n        this.canFace = false;\r\n        this.forward = false;\r\n        tween(this.node)\r\n            .to(time, { position: back }, { easing: \"quadOut\" })\r\n            .call(() => {\r\n                this.forward = true;\r\n                this.collider.enabled = true;\r\n            })\r\n            .to(time * 2, { position: target }, { easing: \"quadOut\" })\r\n            .call(() => {\r\n                this.forward = false;\r\n                this.collider.enabled = false;\r\n                if (this.weaponUtil && this.weaponUtil.moveMaxFar) {\r\n                    this.weaponUtil.moveMaxFar();\r\n                }\r\n            })\r\n            .to(time * 2, { position: pos }, { easing: \"quadIn\" })\r\n            .call(() => {\r\n                this.canFace = true;\r\n                this.timeCount = 0;\r\n            })\r\n            .start();\r\n    }\r\n\r\n    // 甩棍类\r\n    atkByStick(atkDis: number) {\r\n        // 攻击距离判断\r\n        if (this.getDisTargetNode() > atkDis) {\r\n            return;\r\n        }\r\n        audioManager.playEffect(this.row.audio);\r\n        this.canFace = false;\r\n        let angle = this.node.angle;\r\n        let da = 90;\r\n        let time = 0.03;\r\n        tween(this.node).to(time, { angle: angle + da }).call(() => {\r\n            let extraObj: any = {};\r\n            extraObj.atkPercentAdd = this.atkPercentAdd;\r\n            mapModel.bulletSystem.addBullet(this.row.bulletId, physicsGroup.PLAYER_BULLET, cocosUtil.convertToWorldSpace(this.node), this.direction, extraObj);\r\n        }).to(time, { angle: angle }).to(time, { angle: angle - da }).call(() => {\r\n            this.canFace = true;\r\n            this.timeCount = 0;\r\n        }).start();\r\n    }\r\n\r\n    // 强制敌人后退一点点\r\n    targetForceMoveBack(node: Node) {\r\n        if (!this.forward) {\r\n            return;\r\n        }\r\n        let monster = node.getComponent(Monster);\r\n        if (!monster || monster.row.type == constants.monsterTypes.boss) {\r\n            return;\r\n        }\r\n        let direction = this.direction.clone().normalize().multiplyScalar(50);\r\n        tween(node).by(0.02, { position: direction }).start();\r\n    }\r\n\r\n    getInfoPosition(index?: number, isWorld?: boolean) {\r\n        let pos = this.node.getPosition();\r\n        let infoNode = find(\"info\", this.node);\r\n        if (index > 0) {\r\n            infoNode = find(\"info\" + index, this.node);\r\n        }\r\n        if (infoNode) {\r\n            infoNode.active = false;\r\n            // 位置修正\r\n            let infoPos = infoNode.getPosition();\r\n            Vec3.rotateZ(infoPos, infoPos, Vec3.ZERO, utilTools.angleToRadian(this.node.angle));\r\n            pos.x += infoPos.x;\r\n            pos.y += infoPos.y;\r\n        }\r\n        if (this.weaponUtil && this.weaponUtil.isFixedPos) {\r\n            if (this.node.scale.x < 0) {\r\n                pos.x = -pos.x;\r\n            }\r\n        }\r\n        if (isWorld) {\r\n            pos = cocosUtil.convertToWorldSpaceWithPos(this.node, pos);\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    contactBegin(selfCollider: Collider2D, otherCollider: Collider2D) {\r\n        if (otherCollider.group == physicsGroup.MONSTER) {\r\n            let monster = otherCollider.getComponent(Monster);\r\n            if (monster) {\r\n                let dam = this.atk;\r\n                if (this.atkPercentAdd > 0) {\r\n                    dam = dam * (1 + this.atkPercentAdd);\r\n                    dam = Math.ceil(dam);\r\n                }\r\n                monster.hitWithDam(dam);\r\n            }\r\n        }\r\n        if (this.weaponUtil && this.weaponUtil.contactBegin) {\r\n            this.weaponUtil.contactBegin(otherCollider.node);\r\n        }\r\n    }\r\n\r\n    getCalPosition() {\r\n        let pos = mapModel.player.node.getPosition();\r\n        pos.x += this.parentPos.x;\r\n        pos.y += this.parentPos.y;\r\n\r\n        return pos;\r\n    }\r\n\r\n    getDisTargetNode() {\r\n        if (!this.targetNode) {\r\n            return 999999;\r\n        }\r\n        let dis = Vec2.distance(this.getCalPosition(), this.targetNode.position);\r\n\r\n        return dis;\r\n    }\r\n\r\n    updateLogic(dt: number) {\r\n        this.targetNode = null;\r\n\r\n        // 找出距离最近的怪物或木箱\r\n        let targetNode = mapModel.mapSystem.getMinDisTargetNode(this.getCalPosition());\r\n        if (!targetNode) {\r\n            return;\r\n        }\r\n\r\n        if (!this.canFace) {\r\n            return;\r\n        }\r\n\r\n        this.targetNode = targetNode;\r\n        let pos1 = cocosUtil.convertToWorldSpace(this.node);\r\n        let pos2 = cocosUtil.convertToWorldSpace(targetNode);\r\n        // 左右情况\r\n        let scale = this.node.getScale();\r\n        if (!this.weaponUtil || !this.weaponUtil.isFixedPos) {\r\n            if (pos1.x <= pos2.x) {\r\n                this.node.setScale(v3(scale.x, Math.abs(scale.y), scale.z));\r\n            } else {\r\n                this.node.setScale(v3(scale.x, -Math.abs(scale.y), scale.z));\r\n            }\r\n        }\r\n\r\n        // 瞄准最近怪物\r\n        pos2.subtract(pos1);\r\n        this.direction = pos2;\r\n        let angle = utilTools.radianToAngle(Math.atan2(pos2.y, pos2.x));\r\n        if (this.weaponUtil) {\r\n            if (this.weaponUtil.isFixedDirection) {\r\n                if (angle > -90 && angle <= 90) {\r\n                    angle = 0;\r\n                } else {\r\n                    angle = 180;\r\n                }\r\n            }\r\n            if (this.weaponUtil.isFixedPos) {\r\n                angle = 0;\r\n            }\r\n        }\r\n        this.node.angle = angle;\r\n\r\n        if (!this.weaponUtil || !this.weaponUtil.stopTimeCount) {\r\n            this.timeCount += dt;\r\n            if (this.timeCount >= this.row.atkTime) {\r\n                if (this.weaponUtil && cocosUtil.isValid(this.targetNode)) {\r\n                    this.weaponUtil.atk();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n"]}