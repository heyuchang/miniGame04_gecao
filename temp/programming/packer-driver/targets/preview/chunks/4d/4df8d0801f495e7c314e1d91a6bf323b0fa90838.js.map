{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/layer/SettlementLayer.ts"],"names":["find","tween","UITransform","v3","view","_decorator","sdkManager","CronCtr","Channel","tyqAdManager","tyqSDK","tyqSDKConfig","cocosUtil","utilTools","constants","msgac","audioManager","designManager","mapModel","playerModel","UserData","serverMsg","AnimationCtrl","BaseLayer","ccclass","property","SettlementLayer","winAniCtrl","winMapNameNode","failAniCtrl","failMapNameNode","winTitleNode","timeNode","bestTimeNode","monsterNode","lineNode","itemLayerBg","itemLayerNode","btnDouble","btnDoublePos","btnSure","btnSurePos","onLoad","getNodeByPath","addComponent","position","clone","isShowBannerAd","onEnable","getInstance","mapData","layerData","isWin","playEffect","audioNames","win","$friendPassCnt","saveDataToCloud","onDisable","onDestroy","initUI","addDayTaskNum","node","active","waterfall","result","cb","playAnimation","row","getRowById","tableName","map","mapId","setString","name","tweenScaleIn2","getTimeStr","time","newNode","isBest","tweenBlink","bestTime","killMonsterNum","tweenFadeIn","setItemLayer","award","refreshPropItem","bind","num","children","length","forArr","itemUI","index","scale","scheduleOnce","set","to","call","start","pos","x","getVisibleSize","width","getComponent","data","prop","Id","setSpriteFrame2","quality","icon","numNode","type","setNumString","Num","processEvent","ac","onButtonClick","closeLayer","layerCb","obj","floor","send","mapLeave","getSwitchValue","paramsKeys","tyq_more_game_level","openLevel","getChannel","WECHAT","openLayer","layers","MoreGameLayer","onClickBtnSure","onClickBtnDouble","openAd","st","getRewardProp"],"mappings":"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","sourcesContent":["import { find, Node, tween, UITransform, v3, Vec3, view, _decorator } from 'cc';\r\nimport { sdkManager } from '../../../sdk/sdkManager';\r\nimport CronCtr from '../../../tyqSDK/network/CronCtr';\r\nimport { Channel, tyqAdManager } from '../../../tyqSDK/tyqAdManager';\r\nimport { tyqSDK } from '../../../tyqSDK/tyqSDK';\r\nimport { tyqSDKConfig } from '../../../tyqSDK/tyqSDKConfig';\r\nimport { cocosUtil } from '../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../utils/utilTools';\r\nimport { constants } from '../../data/constants';\r\nimport { msgac } from '../../data/msgac';\r\nimport { audioManager } from '../../manager/audioManager';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { mapModel } from '../../model/mapModel';\r\nimport { playerModel } from '../../model/playerModel';\r\nimport { PropItem, UserData } from '../../model/UserData';\r\nimport { serverMsg } from '../../other/serverMsg';\r\nimport { AnimationCtrl } from '../base/AnimationCtrl';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SettlementLayer')\r\nexport class SettlementLayer extends BaseLayer {\r\n\r\n    winAniCtrl: AnimationCtrl;\r\n    winMapNameNode: Node;\r\n    failAniCtrl: AnimationCtrl;\r\n    failMapNameNode: Node;\r\n\r\n    winTitleNode: Node;\r\n    timeNode: Node;\r\n    bestTimeNode: Node;\r\n\r\n    monsterNode: Node;\r\n    lineNode: Node;\r\n\r\n    itemLayerBg: Node;\r\n    itemLayerNode: Node;\r\n\r\n    btnDouble: Node;\r\n    btnDoublePos: Vec3;\r\n    btnSure: Node;\r\n    btnSurePos: Vec3;\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n\r\n        this.winAniCtrl = this.getNodeByPath(\"bg2/win\").addComponent(AnimationCtrl);\r\n        this.winMapNameNode = this.getNodeByPath(\"bg2/win/mapName\");\r\n        this.failAniCtrl = this.getNodeByPath(\"bg2/fail\").addComponent(AnimationCtrl);\r\n        this.failMapNameNode = this.getNodeByPath(\"bg2/fail/mapName\");\r\n\r\n        this.winTitleNode = this.getNodeByPath(\"ui/winTitle\");\r\n        this.timeNode = this.getNodeByPath(\"ui/time\");\r\n        this.bestTimeNode = this.getNodeByPath(\"ui/bestTime\");\r\n\r\n        this.monsterNode = this.getNodeByPath(\"ui/monster\");\r\n        this.lineNode = this.getNodeByPath(\"ui/line\");\r\n        this.itemLayerBg = this.getNodeByPath(\"ui/itemLayer/bg\");\r\n        this.itemLayerNode = this.getNodeByPath(\"ui/itemLayer/itemLayer\");\r\n\r\n        this.btnDouble = this.getNodeByPath(\"ui/btns/btnDouble\");\r\n        this.btnDoublePos = this.btnDouble.position.clone();\r\n        this.btnSure = this.getNodeByPath(\"ui/btns/btnSure\");\r\n        this.btnSurePos = this.btnSure.position.clone();\r\n\r\n        this.isShowBannerAd = true;\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n\r\n        UserData.getInstance().mapData = null;\r\n        if (this.layerData.isWin) {\r\n            audioManager.playEffect(constants.audioNames.win);\r\n            // 好友通关次数\r\n            UserData.getInstance().$friendPassCnt++;\r\n            CronCtr.getInstance().saveDataToCloud(\"friendPassCnt\", UserData.getInstance().$friendPassCnt);\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    initUI() {\r\n        if (this.layerData.isWin) {\r\n            playerModel.addDayTaskNum(10);\r\n        }\r\n\r\n        this.winAniCtrl.node.active = false;\r\n        this.winMapNameNode.active = false;\r\n        this.failAniCtrl.node.active = false;\r\n        this.failMapNameNode.active = false;\r\n\r\n        this.winTitleNode.active = false;\r\n        this.timeNode.active = false;\r\n        this.bestTimeNode.active = false;\r\n\r\n        this.monsterNode.active = false;\r\n        this.lineNode.active = false;\r\n        this.itemLayerBg.active = false;\r\n\r\n        this.itemLayerNode.active = false;\r\n\r\n        this.btnDouble.active = false;\r\n        this.btnSure.active = false;\r\n        utilTools.waterfall([\r\n            (result: any, cb: Function) => {\r\n                if (this.layerData.isWin) {\r\n                    this.winAniCtrl.node.active = true;\r\n                    this.winAniCtrl.playAnimation(\"a\", false, () => {\r\n                        this.winAniCtrl.playAnimation(\"b\", true);\r\n                        cb();\r\n                    });\r\n                    return;\r\n                }\r\n                this.failAniCtrl.node.active = true;\r\n                this.failAniCtrl.playAnimation(\"a\", false, () => {\r\n                    this.failAniCtrl.playAnimation(\"b\", true);\r\n                    cb();\r\n                });\r\n            },\r\n            (result: any, cb: Function) => {\r\n                let row = designManager.getRowById(constants.tableName.map, mapModel.mapId);\r\n                if (this.layerData.isWin) {\r\n                    this.winMapNameNode.active = true;\r\n                    this.setString(find(\"text\", this.winMapNameNode), row.name);\r\n                    cocosUtil.tweenScaleIn2(this.winMapNameNode, 0.2, () => {\r\n                        cb();\r\n                    });\r\n                    return;\r\n                }\r\n                this.failMapNameNode.active = true;\r\n                this.setString(find(\"text\", this.failMapNameNode), row.name);\r\n                cocosUtil.tweenScaleIn2(this.failMapNameNode, 0.2, () => {\r\n                    cb();\r\n                });\r\n            },\r\n            (result: any, cb: Function) => {\r\n                if (this.layerData.isWin) {\r\n                    this.winTitleNode.active = true;\r\n                    cocosUtil.tweenScaleIn2(this.winTitleNode, 0.2, () => {\r\n                        cb();\r\n                    });\r\n                    return;\r\n                }\r\n                this.timeNode.active = true;\r\n                this.setString(find(\"time\", this.timeNode), utilTools.getTimeStr(this.layerData.time * 1000, true));\r\n                let newNode = find(\"new\", this.timeNode);\r\n                if (this.layerData.isBest) {\r\n                    newNode.active = true;\r\n                    cocosUtil.tweenBlink(newNode);\r\n                } else {\r\n                    newNode.active = false;\r\n                }\r\n                cocosUtil.tweenScaleIn2(this.timeNode, 0.2, () => {\r\n                    this.bestTimeNode.active = true;\r\n                    cocosUtil.tweenScaleIn2(this.bestTimeNode, 0.2, () => {\r\n                        this.setString(find(\"info/time\", this.bestTimeNode), utilTools.getTimeStr(this.layerData.bestTime * 1000, true));\r\n                        cb();\r\n                    });\r\n                });\r\n            },\r\n            (result: any, cb: Function) => {\r\n                this.monsterNode.active = true;\r\n                this.setString(find(\"info/num\", this.monsterNode), mapModel.killMonsterNum);\r\n                cocosUtil.tweenScaleIn2(this.monsterNode, 0.2, () => {\r\n                    cb();\r\n                });\r\n            },\r\n            (result: any, cb: Function) => {\r\n                this.lineNode.active = true;\r\n                cocosUtil.tweenFadeIn(this.lineNode, 0.2, () => {\r\n                    cb();\r\n                });\r\n            },\r\n            (result: any, cb: Function) => {\r\n                this.itemLayerBg.active = true;\r\n                cocosUtil.tweenFadeIn(this.itemLayerBg, 0.2, () => {\r\n                    cb();\r\n                });\r\n            },\r\n            (result: any, cb: Function) => {\r\n                this.itemLayerNode.active = true;\r\n                this.setItemLayer(this.itemLayerNode, this.layerData.award, this.refreshPropItem.bind(this));\r\n                let num = this.itemLayerNode.children.length;\r\n                utilTools.forArr(this.itemLayerNode.children, (itemUI: Node, index: number) => {\r\n                    itemUI.scale = v3(0, 0, 0);\r\n                    this.scheduleOnce(() => {\r\n                        tween(itemUI)\r\n                            .set({ scale: v3(2, 2, 1) })\r\n                            .to(0.2, { scale: v3(1, 1, 1) })\r\n                            .to(0.05, { scale: v3(1.1, 1.1, 1) })\r\n                            .to(0.05, { scale: v3(1, 1) })\r\n                            .call(() => {\r\n                                if (index >= num - 1) {\r\n                                    cb();\r\n                                }\r\n                            })\r\n                            .start();\r\n                    }, index * 0.2);\r\n                });\r\n            },\r\n            (result: any, cb: Function) => {\r\n                this.btnDouble.active = true;\r\n                let pos = this.btnDoublePos.clone();\r\n                pos.x += (view.getVisibleSize().width * 0.5 + this.btnDouble.getComponent(UITransform).width);\r\n                this.btnDouble.position = pos;\r\n\r\n                this.btnSure.active = true;\r\n                pos = this.btnSurePos.clone();\r\n                pos.x -= (view.getVisibleSize().width * 0.5 + this.btnSure.getComponent(UITransform).width);\r\n                this.btnSure.position = pos;\r\n\r\n                tween(this.btnDouble).to(0.5, { position: this.btnDoublePos }).start();\r\n                tween(this.btnSure).to(0.5, { position: this.btnSurePos }).start();\r\n            },\r\n        ]);\r\n    }\r\n\r\n    refreshPropItem(itemUI: Node, data: PropItem) {\r\n        let row = designManager.getRowById(constants.tableName.prop, data.Id);\r\n        this.setSpriteFrame2(find(\"bg\", itemUI), \"prop/propbg\" + row.quality);\r\n        this.setSpriteFrame2(find(\"icon\", itemUI), \"prop/\" + row.icon);\r\n\r\n        let numNode = find(\"num\", itemUI);\r\n        if (row.type == 8 || row.type == 11) {\r\n            numNode.active = false;\r\n        } else {\r\n            numNode.active = true;\r\n            this.setNumString(find(\"num/num\", itemUI), data.Num);\r\n        }\r\n    }\r\n\r\n    processEvent(ac: any, data: any) {\r\n        switch (ac) {\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onButtonClick(node: Node, name: string) {\r\n        switch (name) {\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    closeLayer() {\r\n        super.closeLayer();\r\n        if (this.layerCb) {\r\n            this.layerCb();\r\n        }\r\n        let obj: any = {};\r\n        obj.mapId = mapModel.mapId;\r\n        obj.floor = mapModel.floor;\r\n        obj.isWin = this.layerData.isWin;\r\n        serverMsg.send(msgac.mapLeave, obj);\r\n        if (tyqSDK.getSwitchValue(tyqSDKConfig.paramsKeys.tyq_more_game_level) > 0 && tyqSDK.getSwitchValue(tyqSDKConfig.paramsKeys.tyq_more_game_level) > UserData.getInstance().openLevel) {\r\n            if (tyqAdManager.getChannel() == Channel.WECHAT) {\r\n                this.openLayer(constants.layers.MoreGameLayer)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onClickBtnSure(node: Node) {\r\n        this.closeLayer();\r\n    }\r\n\r\n    onClickBtnDouble() {\r\n        sdkManager.openAd(\"结算奖励双倍\", (st: number) => {\r\n            if (st == 1) {\r\n                UserData.getInstance().getRewardProp(this.layerData.award);\r\n                this.closeLayer();\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n"]}