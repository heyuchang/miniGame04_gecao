{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/sys/PropSystem.ts"],"names":["Node","Prefab","UITransform","Vec2","_decorator","cocosUtil","utilTools","constants","designManager","resManager","mapModel","UserData","BaseLayer","NodePoolUtil","Prop","ccclass","property","PropSystem","idPropLayerObj","idPrefabObj","onLoad","onEnable","onDestroy","getPropLayerNameById","id","getPropLayerById","propLayer","addComponent","setPosition","parent","node","nodePoolUtil","init","saveDataBefore","forArr","children","getComponent","forEachUseNode","prop","propIds","boxMonsterCoin","playerGetProp","getSaveData","propData","arr","info","worldPos","convertToWorldSpace","extraObj","push","loadSaveData","data","addProp","tmpFunc","propNode","getNode","addComponentOnce","name","loadAsset","bundles","prefab","err","isValid","getProp","num","player","hp","row","getRowById","tableName","exp","mapSystem","addExp","skillSystem","getSkill2AddExp","coin","addCoin","getSkill2AddCoin","magnet","propSystem","forAllPropById","contactPlayer","addHpPercent","p1","bomb","box2","mapLayer","popLayer","layers","LuckyDrawLayer","diamond","getInstance","useBaoShi","type","equipIdArr","propId","cb","layer","isFollowPlayer","forVisiblePropCollider","active","isInScreenVisible","collider","forVisiblePropContact","forAllPropContact","use","recyclePropNode","recycleNode","updateLogic","dt","i","parseFloat","dis","distance","getPosition","dataRadius","propUtil","autoGet","doDisPlayerGet"],"mappings":"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","sourcesContent":["import { Node, Prefab, UITransform, Vec2, Vec3, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../utils/utilTools';\r\nimport { constants } from '../../data/constants';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { resManager } from '../../manager/resManager';\r\nimport { mapModel } from '../../model/mapModel';\r\nimport { UserData } from '../../model/UserData';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nimport { NodePoolUtil } from '../base/NodePoolUtil';\r\nimport { Prop } from '../item/prop/Prop';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PropSystem')\r\nexport class PropSystem extends BaseLayer {\r\n\r\n    // 按照道具id进行UI分层\r\n    idPropLayerObj: any = {};\r\n    idPrefabObj: any = {};\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    getPropLayerNameById(id: number) {\r\n        return \"propLayer\" + id;\r\n    }\r\n\r\n    getPropLayerById(id: number) {\r\n        let propLayer = this.idPropLayerObj[id];\r\n        if (!propLayer) {\r\n            propLayer = new Node(this.getPropLayerNameById(id));\r\n            propLayer.addComponent(UITransform);\r\n            propLayer.setPosition(0, 0);\r\n            propLayer.parent = this.node;\r\n            this.idPropLayerObj[id] = propLayer;\r\n\r\n            let nodePoolUtil = propLayer.addComponent(NodePoolUtil);\r\n            nodePoolUtil.init(this.idPrefabObj[id]);\r\n        }\r\n        return propLayer;\r\n    }\r\n\r\n    saveDataBefore() {\r\n        utilTools.forArr(this.node.children, (propLayer: Node) => {\r\n            let nodePoolUtil = propLayer.getComponent(NodePoolUtil);\r\n            nodePoolUtil.forEachUseNode((node: Node) => {\r\n                let prop = node.getComponent(Prop);\r\n                if (prop.id == constants.propIds.boxMonsterCoin) {\r\n                    prop.playerGetProp();\r\n                    return;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getSaveData() {\r\n        let propData: any = {};\r\n        propData.arr = [];\r\n        utilTools.forArr(this.node.children, (propLayer: Node) => {\r\n            let nodePoolUtil = propLayer.getComponent(NodePoolUtil);\r\n            nodePoolUtil.forEachUseNode((node: Node) => {\r\n                let prop = node.getComponent(Prop);\r\n                if (prop.id == constants.propIds.boxMonsterCoin) {\r\n                    prop.playerGetProp();\r\n                    return;\r\n                }\r\n                let info: any = {};\r\n                info.id = prop.id;\r\n                info.worldPos = cocosUtil.convertToWorldSpace(node);\r\n                info.extraObj = prop.extraObj;\r\n                propData.arr.push(info);\r\n            });\r\n        });\r\n        return propData;\r\n    }\r\n\r\n    loadSaveData(data: any) {\r\n        utilTools.forArr(data.arr, (prop: any) => {\r\n            this.addProp(prop.id, prop.worldPos, prop.extraObj);\r\n        });\r\n    }\r\n\r\n    addProp(id: number, worldPos: Vec3, extraObj?: any) {\r\n        let nodePoolUtil = this.getPropLayerById(id).getComponent(NodePoolUtil);\r\n\r\n        let tmpFunc = () => {\r\n            let propNode = nodePoolUtil.getNode();\r\n            let prop = cocosUtil.addComponentOnce(propNode, Prop);\r\n            prop.init(id, worldPos, extraObj);\r\n        };\r\n\r\n        if (!this.idPrefabObj[id]) {\r\n            let name = \"prop\" + id;\r\n            resManager.loadAsset(constants.bundles.prefab, \"prop/\" + name + \"/\" + name, Prefab, null, (err, prefab) => {\r\n                if (!cocosUtil.isValid(this)) {\r\n                    return;\r\n                }\r\n                this.idPrefabObj[id] = prefab;\r\n                nodePoolUtil.init(prefab);\r\n                tmpFunc();\r\n            });\r\n            return;\r\n        }\r\n        tmpFunc();\r\n    }\r\n\r\n    // 玩家获得道具\r\n    getProp(id: number, num: number = 1, extraObj?: any) {\r\n        if (mapModel.player.hp <= 0) {\r\n            return;\r\n        }\r\n        let row = designManager.getRowById(constants.tableName.prop, id);\r\n        switch (id) {\r\n            case constants.propIds.exp:\r\n                mapModel.mapSystem.addExp(num + mapModel.skillSystem.getSkill2AddExp());\r\n                break;\r\n            case constants.propIds.coin:\r\n                mapModel.mapSystem.addCoin(num + mapModel.skillSystem.getSkill2AddCoin());\r\n                break;\r\n            case constants.propIds.magnet:\r\n                // 磁铁-只吸经验\r\n                mapModel.propSystem.forAllPropById(constants.propIds.exp, (prop: Prop) => {\r\n                    prop.contactPlayer();\r\n                });\r\n                break;\r\n            case constants.propIds.addHpPercent:\r\n                // 回血\r\n                mapModel.player.addHpPercent(row.p1);\r\n                break;\r\n            case constants.propIds.bomb:\r\n                // 炸弹\r\n                mapModel.mapSystem.bomb();\r\n                break;\r\n            case constants.propIds.box2:\r\n                // 水果机\r\n                if (mapModel.player.hp > 0) {\r\n                    mapModel.mapLayer.popLayer(constants.layers.LuckyDrawLayer);\r\n                }\r\n                break;\r\n            case constants.propIds.boxMonsterCoin:\r\n                // 宝箱怪金币\r\n                mapModel.mapSystem.addCoin(1);\r\n                break;\r\n            case constants.propIds.diamond:\r\n                // 钻石，直接塞给玩家\r\n                UserData.getInstance().useBaoShi(num, true);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (row.type == 8 || row.type == 11) {\r\n            // 装备\r\n            mapModel.equipIdArr.push(id);\r\n        }\r\n    }\r\n\r\n    // 遍历所有存在的指定道具id\r\n    forAllPropById(propId: number, cb: (prop: Prop) => void) {\r\n        let layer = this.getPropLayerById(propId);\r\n        let nodePoolUtil = layer.getComponent(NodePoolUtil);\r\n        nodePoolUtil.forEachUseNode((node: Node) => {\r\n            let prop = node.getComponent(Prop);\r\n            if (prop.isFollowPlayer) {\r\n                return;\r\n            }\r\n            cb(prop);\r\n        });\r\n    }\r\n\r\n    // 遍历屏幕范围内的碰撞道具\r\n    forVisiblePropCollider(cb: (prop: Prop) => void) {\r\n        utilTools.forArr(this.node.children, (propLayer: Node) => {\r\n            utilTools.forArr(propLayer.children, (propNode: Node) => {\r\n                if (!propNode.active) {\r\n                    return;\r\n                }\r\n                if (!mapModel.isInScreenVisible(propNode)) {\r\n                    return;\r\n                }\r\n                let prop = propNode.getComponent(Prop);\r\n                if (!prop.collider) {\r\n                    return;\r\n                }\r\n                cb(prop);\r\n            });\r\n        });\r\n    }\r\n\r\n    // 遍历屏幕范围内的所有可直接吃的道具\r\n    forVisiblePropContact(cb: (prop: Prop) => void) {\r\n        utilTools.forArr(this.node.children, (propLayer: Node) => {\r\n            utilTools.forArr(propLayer.children, (propNode: Node) => {\r\n                if (!propNode.active) {\r\n                    return;\r\n                }\r\n                if (!mapModel.isInScreenVisible(propNode)) {\r\n                    return;\r\n                }\r\n                let prop = propNode.getComponent(Prop);\r\n                if (prop.collider) {\r\n                    return;\r\n                }\r\n                cb(prop);\r\n            });\r\n        });\r\n    }\r\n\r\n    // 遍历所有可直接吃的道具\r\n    forAllPropContact(cb: (prop: Prop) => void) {\r\n        utilTools.forArr(this.node.children, (propLayer: Node) => {\r\n            utilTools.forArr(propLayer.children, (propNode: Node) => {\r\n                // @ts-ignore\r\n                if (!propNode.use) {\r\n                    return;\r\n                }\r\n                let prop = propNode.getComponent(Prop);\r\n                if (prop.collider) {\r\n                    return;\r\n                }\r\n                cb(prop);\r\n            });\r\n        });\r\n    }\r\n\r\n    recyclePropNode(propNode: Node) {\r\n        let prop = propNode.getComponent(Prop);\r\n        let nodePoolUtil = this.getPropLayerById(prop.id).getComponent(NodePoolUtil);\r\n        nodePoolUtil.recycleNode(propNode);\r\n    }\r\n\r\n    updateLogic(dt: number) {\r\n        // 显示优化\r\n        for (let i in this.idPropLayerObj) {\r\n            let nodePoolUtil: NodePoolUtil = this.getPropLayerById(parseFloat(i)).getComponent(NodePoolUtil);\r\n            nodePoolUtil.forEachUseNode((node: Node) => {\r\n                let dis = Vec2.distance(node.getPosition(), mapModel.player.node.getPosition());\r\n                let prop = node.getComponent(Prop);\r\n                if (dis <= mapModel.dataRadius || (prop.propUtil && prop.propUtil.autoGet)) {\r\n                    node.active = true;\r\n                    prop.doDisPlayerGet(dis);\r\n                    return;\r\n                }\r\n                if (prop.isFollowPlayer) {\r\n                    return;\r\n                }\r\n                node.active = false;\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\n"]}