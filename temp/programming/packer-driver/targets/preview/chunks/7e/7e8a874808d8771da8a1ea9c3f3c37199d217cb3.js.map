{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/item/monsters/Monster21.ts"],"names":["BoxCollider2D","Component","find","tween","_decorator","cocosUtil","utilTools","mapModel","physicsGroup","HintNames","ccclass","property","Monster21","monster","moveStop","bulletId","otherCollider1","otherCollider2","otherCollider3","init","node","getComponent","resetColliders","startSkillLogic","enabled","scheduleOnce","arr","id","weight","skill1Tag","getSkill1Tag","push","tag","ret","getRowByWeight","Math","random","distancePlayer","pos","player","position","clone","subtract","angle","vec2XAngle","useSkill1","info","hp","canFace","otherCollider","animationCtrl","playAnimationOnce","useSkill2","dis","time","extraObj","duration","hintSystem","addHint","blockArrow","convertToWorldSpace","normalize","multiplyScalar","targetPos","add","to","easing","onUpdate","mapSystem","adjustInWall","start","useSkill3","direction","getBulletDirection","i","getInfoPosition","bulletSystem","addBullet","MONSTER_BULLET"],"mappings":"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","sourcesContent":["import { BoxCollider2D, Component, find, tween, v3, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../../utils/utilTools';\r\nimport { mapModel } from '../../../model/mapModel';\r\nimport { physicsGroup } from '../../../other/physicsGroup';\r\nimport { HintNames } from '../hint/Hint';\r\nimport { Monster } from './Monster';\r\nconst { ccclass, property } = _decorator;\r\n\r\n// 炸弹巨人\r\n@ccclass('Monster21')\r\nexport class Monster21 extends Component {\r\n\r\n    monster: Monster;\r\n    moveStop: boolean;\r\n\r\n    bulletId: number = 1017;\r\n\r\n    otherCollider1: BoxCollider2D;\r\n    otherCollider2: BoxCollider2D;\r\n    otherCollider3: BoxCollider2D;\r\n\r\n    init(monster: Monster) {\r\n        this.monster = monster;\r\n        this.moveStop = false;\r\n\r\n        this.otherCollider1 = find(\"collider1\", this.node).getComponent(BoxCollider2D);\r\n        this.otherCollider2 = find(\"collider2\", this.node).getComponent(BoxCollider2D);\r\n        this.otherCollider3 = find(\"collider3\", this.node).getComponent(BoxCollider2D);\r\n\r\n        this.resetColliders();\r\n\r\n        this.startSkillLogic();\r\n    }\r\n\r\n    resetColliders() {\r\n        this.otherCollider1.enabled = false;\r\n        this.otherCollider2.enabled = false;\r\n        this.otherCollider3.enabled = false;\r\n    }\r\n\r\n    startSkillLogic() {\r\n        this.scheduleOnce(() => {\r\n            let arr: any = [\r\n                { id: 2, weight: 10 },\r\n                { id: 3, weight: 10 },\r\n            ];\r\n\r\n            let skill1Tag = this.getSkill1Tag();\r\n            if (skill1Tag > 0) {\r\n                arr.push({ id: 1, weight: 100, tag: skill1Tag });\r\n            }\r\n\r\n            let ret = utilTools.getRowByWeight(arr);\r\n            if (ret) {\r\n                this[\"useSkill\" + ret.id](ret);\r\n            } else {\r\n                this.startSkillLogic();\r\n            }\r\n        }, 1.5 + Math.random());\r\n    }\r\n\r\n    getSkill1Tag() {\r\n        if (this.monster.distancePlayer >= 560) {\r\n            return 0;\r\n        }\r\n        let pos = mapModel.player.node.position.clone().subtract(this.node.position);\r\n        let angle = cocosUtil.vec2XAngle(pos);\r\n        if ((angle >= 345 || angle <= 15) || (angle >= 165 && angle <= 195)) {\r\n            // 中间\r\n            return 1;\r\n        }\r\n        if ((angle >= 30 && angle <= 60) || (angle >= 120 && angle <= 150)) {\r\n            // 上面\r\n            return 2;\r\n        }\r\n        if ((angle >= 300 && angle <= 330) || (angle >= 210 && angle <= 240)) {\r\n            // 下面\r\n            return 3;\r\n        }\r\n        return 0;\r\n\r\n    }\r\n    useSkill1(info: any) {\r\n        if (this.monster.hp <= 0) {\r\n            return;\r\n        }\r\n        this.moveStop = true;\r\n        this.monster.canFace = false;\r\n\r\n        let otherCollider = this[\"otherCollider\" + info.tag];\r\n        otherCollider.enabled = true;\r\n\r\n        this.monster.animationCtrl.playAnimationOnce(\"attackHand\" + info.tag, () => {\r\n            otherCollider.enabled = false;\r\n            this.monster.canFace = true;\r\n            this.moveStop = false;\r\n            this.startSkillLogic();\r\n        });\r\n    }\r\n\r\n    useSkill2() {\r\n        if (this.monster.hp <= 0) {\r\n            return;\r\n        }\r\n\r\n        let dis = 500 + Math.random() * 100;\r\n\r\n        let time = 1;\r\n        let extraObj: any = {};\r\n        extraObj.duration = time;\r\n        extraObj.monster = this.monster;\r\n        extraObj.dis = dis;\r\n        mapModel.hintSystem.addHint(HintNames.blockArrow, cocosUtil.convertToWorldSpace(this.node), 0, extraObj);\r\n\r\n        this.scheduleOnce(() => {\r\n            this.moveStop = true;\r\n            this.monster.canFace = false;\r\n            let pos = mapModel.player.node.position.clone();\r\n            pos.subtract(this.node.position).normalize().multiplyScalar(dis);\r\n            let targetPos = this.node.position.clone().add(pos);\r\n\r\n            tween(this.node).to(1, { position: targetPos }, {\r\n                easing: \"smooth\", onUpdate: () => {\r\n                    mapModel.mapSystem.adjustInWall(this.node);\r\n                }\r\n            }).start();\r\n\r\n            this.monster.animationCtrl.playAnimationOnce(\"attack2\", () => {\r\n                this.monster.canFace = true;\r\n                this.moveStop = false;\r\n                this.startSkillLogic();\r\n            });\r\n        }, time);\r\n\r\n    }\r\n\r\n    useSkill3() {\r\n        if (this.monster.hp <= 0) {\r\n            return;\r\n        }\r\n        this.moveStop = true;\r\n        this.monster.canFace = false;\r\n\r\n        // 发射4个跟踪子弹\r\n        let direction = this.monster.getBulletDirection();\r\n        this.scheduleOnce(() => {\r\n            for (let i = 0; i < 4; i++) {\r\n                this.scheduleOnce(() => {\r\n                    let pos = this.monster.getInfoPosition(i, true);\r\n                    mapModel.bulletSystem.addBullet(this.bulletId, physicsGroup.MONSTER_BULLET, pos, direction);\r\n                }, i * 0.2);\r\n            }\r\n        }, 0.45);\r\n\r\n        this.monster.animationCtrl.playAnimationOnce(\"attack3\", () => {\r\n            this.moveStop = false;\r\n            this.monster.canFace = true;\r\n            this.startSkillLogic();\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}