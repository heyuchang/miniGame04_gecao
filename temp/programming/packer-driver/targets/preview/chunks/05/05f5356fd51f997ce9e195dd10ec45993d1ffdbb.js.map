{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/tyqSDK/cocos/manager/tyqLayerManager.ts"],"names":["TyqLayerManager","find","instantiate","Prefab","UITransform","tyqSDK","tyqConstants","tyqResManager","constructor","instance","_instance","openLayer","layerName","obj","cb","path","paths","layer","loadAsset","bundles","tyqSDKBundle","err","prefab","log","message","node","com","addComponent","getComponent","priority","parent","closeLayer","destroy","tyqLayerManager"],"mappings":";;;4JAOMA,e;;;;;;;;;;;;;;;;;;;;;;;;;AANGC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AAC3BC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,Y,iBAAAA,Y;;AAEAC,MAAAA,a,iBAAAA,a;;;;;;;;;AAEHP,MAAAA,e,GAAN,MAAMA,eAAN,CAAsB;AAGVQ,QAAAA,WAAW,GAAG,CACrB;;AACyB,mBAARC,QAAQ,GAAoB;AAC1C,cAAI,KAAKC,SAAL,IAAkB,IAAtB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAIV,eAAJ,EAAjB;AACH;;AAED,iBAAO,KAAKU,SAAZ;AACH;;AAEDC,QAAAA,SAAS,CAACC,SAAD,EAAoBC,GAApB,EAA+BC,EAA/B,EAA8C;AACnD,cAAIC,IAAI,GAAG;AAAA;AAAA,4CAAaC,KAAb,CAAmBC,KAAnB,GAA2BL,SAAtC;AACA;AAAA;AAAA,8CAAcM,SAAd,CAAwB;AAAA;AAAA,4CAAaC,OAAb,CAAqBC,YAA7C,EAA2DL,IAA3D,EAAiEZ,MAAjE,EAAyE,IAAzE,EAA+E,CAACkB,GAAD,EAAMC,MAAN,KAAiB;AAC5F,gBAAID,GAAJ,EAAS;AACL;AAAA;AAAA,oCAAOE,GAAP,CAAW,kCAAkCF,GAAG,CAACG,OAAjD,EAA0DZ,SAA1D,EAAqES,GAArE;AACA;AACH;;AACD,gBAAII,IAAI,GAAGvB,WAAW,CAACoB,MAAD,CAAtB;AACA,gBAAII,GAAG,GAAGD,IAAI,CAACE,YAAL,CAAkBf,SAAlB,CAAV;AACAc,YAAAA,GAAG,CAACb,GAAJ,GAAUA,GAAV;AACAa,YAAAA,GAAG,CAACZ,EAAJ,GAASA,EAAT;AACAY,YAAAA,GAAG,CAACd,SAAJ,GAAgBA,SAAhB,CAT4F,CAW5F;;AACAa,YAAAA,IAAI,CAACG,YAAL,CAAkBxB,WAAlB,EAA+ByB,QAA/B,GAA0C,GAA1C;AACAJ,YAAAA,IAAI,CAACK,MAAL,GAAc7B,IAAI,CAAC,QAAD,CAAlB;AAEA;AAAA;AAAA,kCAAOsB,GAAP,CAAW,eAAeX,SAA1B,EAAqCC,GAArC;AACH,WAhBD;AAiBH;;AAEDkB,QAAAA,UAAU,CAACd,KAAD,EAAsB;AAC5B,cAAIL,SAAS,GAAGK,KAAK,CAACL,SAAtB;AACAK,UAAAA,KAAK,CAACQ,IAAN,CAAWO,OAAX;AACH;;AArCiB,O;AAAhBhC,MAAAA,e,CAEaU,S;;iCAuCNuB,e,GAAkBjC,eAAe,CAACS,Q","sourcesContent":["\r\nimport { find, instantiate, Prefab, UITransform } from 'cc';\r\nimport { tyqSDK } from '../../tyqSDK';\r\nimport { tyqConstants } from '../tyqConstants';\r\nimport { TyqBaseLayer } from './../layer/TyqBaseLayer';\r\nimport { tyqResManager } from './tyqResManager';\r\n\r\nclass TyqLayerManager {\r\n\r\n    private static _instance: TyqLayerManager;\r\n    private constructor() {\r\n    }\r\n    public static get instance(): TyqLayerManager {\r\n        if (this._instance == null) {\r\n            this._instance = new TyqLayerManager();\r\n        }\r\n\r\n        return this._instance;\r\n    }\r\n\r\n    openLayer(layerName: string, obj?: any, cb?: Function) {\r\n        let path = tyqConstants.paths.layer + layerName;\r\n        tyqResManager.loadAsset(tyqConstants.bundles.tyqSDKBundle, path, Prefab, null, (err, prefab) => {\r\n            if (err) {\r\n                tyqSDK.log(\"LayerManager.openLayer error:\" + err.message, layerName, err);\r\n                return;\r\n            }\r\n            let node = instantiate(prefab);\r\n            let com = node.addComponent(layerName);\r\n            com.obj = obj;\r\n            com.cb = cb;\r\n            com.layerName = layerName;\r\n\r\n            // 设置显示层级，保证在最上面\r\n            node.getComponent(UITransform).priority = 999;\r\n            node.parent = find(\"Canvas\");\r\n\r\n            tyqSDK.log(\"openLayer \" + layerName, obj);\r\n        });\r\n    }\r\n\r\n    closeLayer(layer: TyqBaseLayer) {\r\n        let layerName = layer.layerName;\r\n        layer.node.destroy();\r\n    }\r\n\r\n}\r\n\r\nexport const tyqLayerManager = TyqLayerManager.instance;\r\n"]}