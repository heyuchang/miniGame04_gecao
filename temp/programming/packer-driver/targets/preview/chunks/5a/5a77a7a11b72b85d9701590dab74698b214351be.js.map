{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/sys/MapSystem.ts"],"names":["BoxCollider2D","director","find","macro","Node","RenderTexture","Sprite","SpriteFrame","tween","Tween","UIOpacity","UITransform","v3","Vec2","view","_decorator","tyqSDK","cocosUtil","utilTools","constants","physicsWorld","designManager","mapModel","playerModel","UserData","AnimationCtrl","BaseLayer","ccclass","property","MapSystem","mapFightBgLayer","staticNode","bombAnimationCtrl","warnAnimationCtrl","skillBombAniCtrl","bossPosHintAnimationCtrl","boxHintNode","boxArrowNode","mapRow","pauseVal","wallLayer","wallShineNode","wallTopNode","wallBottomNode","wallLeftNode","wallRightNode","wallTopVal","wallBottomVal","wallLeftVal","wallRightVal","wallCenterPos","stopTimeCount","expTimeCount","killMonsterCount","backlifeCount","skillBombCd","skillHealCd","nineForArr","x","y","vec3Obj","nodePos","onLoad","getNodeByPath","active","addComponent","node","screenAdapterBG","tweenBreath","getRowById","tableName","map","mapId","schedule","refreshCamera","REPEAT_FOREVER","updateLogic","onEnable","start","scheduleOnce","getInstance","mapData","i","pos","getRectPos","player","createExp","refreshMapFightWindow","onDestroy","initUI","initMapFightBg","initWallLayer","path","wall","setSpriteFrame2","children","forEach","bg","getPosition","z","mapFightCamera","setPosition","refreshMapBgLayer","Math","floor","info","index","bgNode","posX","posY","getSaveData","data","orthoHeight","centerPos","loadSaveData","showWallLayer","bossDead","mapSystem","hideWallLayer","monsterSystem","bossMonster","isBoss","doSettlement","createMapLevelArr","mapLayer","refreshBossHpLayer","isWin","row","arr","coinNum","time","killMonsterNum","push","Id","propIds","coin","Num","equipIdArr","reward4","concat","parseDesignPropArr","reward5","sortArr","prop1","prop2","row1","prop","row2","quality","obj","levelData","getLevelData","Time","setLevelData","isBest","bestTime","getRewardProp","award","popLayer","layers","SettlementLayer","eventLevelEnd","showInterstitialAd","eventSendCustomEvent","getMinDisTargetNode","minDis","minDisNode","forVisibleMonster","monster","activeInHierarchy","dis","distancePlayer","distance","position","propSystem","forVisiblePropCollider","propNode","propPos","tmpDis","startWarning","aniName","playAnimation","cameraMove","cameraOrthoHeight","to","useSkillHeal","skillHealNum","useSkillMagnet","skillMagnetNum","getProp","magnet","useSkillBomb","skillBombNum","waitTimeAsync","hitArr","type","monsterTypes","common","dam","hp","waitHit","hitInfo","batchHitMonster","bulletSystem","forVisibleMonsterBullet","bullet","recycleSelf","bomb","playAnimationOnce","monsterDead","id","worldPos","isProb","expProb","exp","getFloatValue","expMin","expMax","refreshResLayer","getAroundPos","getVisibleSize","height","addProp","box1","propProbArr","length","prob","propId","propIdArr","propNum","propNumArr","direction","getCircleDirectionArr","clone","add","multiplyScalar","extraObj","num","addDayTaskNum","elite","boss","force","expPool","addExp","expNum","refreshExpLayer","addCoin","adjustInWall","tf","getComponent","hWidth","hHeight","vWidth","vHeight","width","ceil","top","size","bottom","left","right","refreshWallSideVal","opacity","shineOpacity","stopAllByTarget","union","repeat","call","fightPause","camera","texture","reset","targetTexture","root","frameMove","sp","fightCapNode","spriteFrame","fightResume","stopMove","dt","expTypeRow","startTime","endTime","expSpeed","expType","setString","expNumNode","refreshTimeNode","weaponSystem","skillSystem","updatePhysicsWorld","step","mapFightLayer","updateBoxHintLayer","minProp","playerPos","forAllPropById","box2","abs","visibleHalfSize","subtract","angle","radianToAngle","atan2","gap","halfWidth","halfHeight","getSelectItemArr","hasFull","weaponArr","design","weaponNum","getLastRow","weapon","getWeaponInfoByType","lv","maxLv","item","name","weight","skillArr","skillNum","skill","getSkillInfoByType","skill2Arr","skill2","getSkill2InfoByType","getRowsByWeightAndNum","addHpPercent","update"],"mappings":"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","sourcesContent":["import { BoxCollider2D, director, find, macro, Node, RenderTexture, Sprite, SpriteFrame, tween, Tween, UIOpacity, UITransform, v3, Vec2, Vec3, view, _decorator } from 'cc';\r\nimport { tyqSDK } from '../../../tyqSDK/tyqSDK';\r\nimport { cocosUtil } from '../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../utils/utilTools';\r\nimport { constants } from '../../data/constants';\r\nimport { physicsWorld } from '../../engine/PhysicsWorld';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { mapModel } from '../../model/mapModel';\r\nimport { playerModel } from '../../model/playerModel';\r\nimport { PropItem, UserData } from '../../model/UserData';\r\nimport { AnimationCtrl } from '../base/AnimationCtrl';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nimport { Bullet } from '../item/bullet/Bullet';\r\nimport { Monster } from '../item/monsters/Monster';\r\nimport { Prop } from '../item/prop/Prop';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MapSystem')\r\nexport class MapSystem extends BaseLayer {\r\n\r\n    mapFightBgLayer: Node;\r\n\r\n    staticNode: Node;\r\n    // 炸弹\r\n    bombAnimationCtrl: AnimationCtrl;\r\n    // 预警\r\n    warnAnimationCtrl: AnimationCtrl;\r\n    // 技能炸弹\r\n    skillBombAniCtrl: AnimationCtrl;\r\n\r\n    // boss出现位置提示\r\n    bossPosHintAnimationCtrl: AnimationCtrl;\r\n\r\n    // 宝箱提示\r\n    boxHintNode: Node;\r\n    boxArrowNode: Node;\r\n\r\n    mapRow: any;\r\n    pauseVal: number;\r\n\r\n    // 围栏\r\n    wallLayer: Node;\r\n    wallShineNode: Node;\r\n    wallTopNode: Node;\r\n    wallBottomNode: Node;\r\n    wallLeftNode: Node;\r\n    wallRightNode: Node;\r\n    wallTopVal: number;\r\n    wallBottomVal: number;\r\n    wallLeftVal: number;\r\n    wallRightVal: number;\r\n    wallCenterPos: Vec3;\r\n\r\n    // 是否停止时间统计\r\n    stopTimeCount: boolean;\r\n    // 经验池产出时间累计\r\n    expTimeCount: number;\r\n    // 击杀怪物数量累计，用于木箱的产生\r\n    killMonsterCount: number;\r\n    // 复活次数\r\n    backlifeCount: number = 0;\r\n\r\n    // 技能：炸弹cd\r\n    skillBombCd: number = 0;\r\n    // 技能：治疗cd\r\n    skillHealCd: number = 0;\r\n\r\n    nineForArr: any = [\r\n        { x: -1, y: 1 }, { x: 0, y: 1 }, { x: 1, y: 1 },\r\n        { x: -1, y: 0 }, { x: 0, y: 0 }, { x: 1, y: 0 },\r\n        { x: -1, y: -1 }, { x: 0, y: -1 }, { x: 1, y: -1 }\r\n    ];\r\n\r\n    // Vec3集中缓存\r\n    vec3Obj = {\r\n        nodePos: v3(0, 0, 0),\r\n    };\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n\r\n        this.mapFightBgLayer = this.getNodeByPath(\"map/bg\");\r\n\r\n        this.wallLayer = this.getNodeByPath(\"map/wallLayer\");\r\n        this.wallTopNode = this.getNodeByPath(\"map/wallLayer/top\");\r\n        this.wallBottomNode = this.getNodeByPath(\"map/wallLayer/bottom\");\r\n        this.wallLeftNode = this.getNodeByPath(\"map/wallLayer/left\");\r\n        this.wallRightNode = this.getNodeByPath(\"map/wallLayer/right\");\r\n        this.wallShineNode = this.getNodeByPath(\"map/wallLayer/shine\");\r\n        this.wallLayer.active = false;\r\n\r\n        this.staticNode = this.getNodeByPath(\"static\");\r\n\r\n        this.bombAnimationCtrl = this.getNodeByPath(\"static/bomb\").addComponent(AnimationCtrl);\r\n        this.bombAnimationCtrl.node.active = false;\r\n\r\n        this.skillBombAniCtrl = this.getNodeByPath(\"static/skillBomb\").addComponent(AnimationCtrl);\r\n        this.skillBombAniCtrl.node.active = false;\r\n\r\n        this.warnAnimationCtrl = this.getNodeByPath(\"static/warn\").addComponent(AnimationCtrl);\r\n        this.warnAnimationCtrl.node.active = false;\r\n        this.screenAdapterBG(this.warnAnimationCtrl.node);\r\n\r\n        this.bossPosHintAnimationCtrl = this.getNodeByPath(\"map/bossPosHint\").addComponent(AnimationCtrl);\r\n        this.bossPosHintAnimationCtrl.node.active = false;\r\n\r\n        this.boxHintNode = this.getNodeByPath(\"static/boxHint\");\r\n        this.boxHintNode.active = false;\r\n        this.boxArrowNode = this.getNodeByPath(\"static/boxHint/arrow\");\r\n        cocosUtil.tweenBreath(this.getNodeByPath(\"static/boxHint/icon\"), 0.4, 1.2);\r\n        cocosUtil.tweenBreath(this.getNodeByPath(\"static/boxHint/arrow/icon\"), 0.2, 1.2);\r\n\r\n        // if (playerModel.isInDevelopmentEnvironment()) {\r\n        //     PhysicsSystem2D.instance.debugDrawFlags = EPhysics2DDrawFlags.Shape;\r\n        // }\r\n        // PhysicsSystem2D.instance.enable = false;\r\n\r\n        this.mapRow = designManager.getRowById(constants.tableName.map, mapModel.mapId);\r\n        this.expTimeCount = 0;\r\n        this.pauseVal = 0;\r\n        this.killMonsterCount = 0;\r\n        this.stopTimeCount = false;\r\n\r\n        // 镜头视角慢恢复\r\n        this.schedule(this.refreshCamera, 0.5, macro.REPEAT_FOREVER);\r\n\r\n        // 开启逻辑帧\r\n        this.schedule(this.updateLogic, 0.1, macro.REPEAT_FOREVER);\r\n\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n\r\n    }\r\n\r\n    start() {\r\n        this.scheduleOnce(() => {\r\n            if (UserData.getInstance().mapData) {\r\n                // 战斗中断恢复的\r\n                return;\r\n            }\r\n            // 初始经验\r\n            for (let i = 0; i < 20; i++) {\r\n                let pos = cocosUtil.getRectPos(mapModel.player.node, 400, 700, 600, 1000, true);\r\n                this.createExp(1, pos, true);\r\n            }\r\n        }, 0.5);\r\n\r\n        this.refreshMapFightWindow();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    initUI() {\r\n        this.initMapFightBg();\r\n        this.initWallLayer();\r\n    }\r\n\r\n    initWallLayer() {\r\n        let path = \"wall/\" + this.mapRow.wall + \"_h\";\r\n        this.setSpriteFrame2(this.wallTopNode, path);\r\n        this.setSpriteFrame2(this.wallBottomNode, path);\r\n\r\n        path = \"wall/\" + this.mapRow.wall + \"_v\";\r\n        this.setSpriteFrame2(this.wallLeftNode, path);\r\n        this.setSpriteFrame2(this.wallRightNode, path);\r\n    }\r\n\r\n    initMapFightBg() {\r\n        this.mapFightBgLayer.children.forEach((node: Node) => {\r\n            let path = \"map/\" + this.mapRow.bg;\r\n            this.setSpriteFrame2(node, path);\r\n        });\r\n    }\r\n\r\n    refreshMapFightWindow() {\r\n        // 相机跟随\r\n        let pos = mapModel.player.node.getPosition();\r\n        pos.z = mapModel.mapFightCamera.node.getPosition().z;\r\n        mapModel.mapFightCamera.node.setPosition(pos);\r\n\r\n        this.refreshMapBgLayer();\r\n    }\r\n    refreshMapBgLayer() {\r\n        // 计算出玩家当前位置是属于哪个格子\r\n        let x = Math.floor((mapModel.player.node.getPosition().x + 512) / 1024);\r\n        let y = Math.floor((mapModel.player.node.getPosition().y + 512) / 1024);\r\n        // 遍历九宫调整位置\r\n        this.nineForArr.forEach((info: any, index: number) => {\r\n            let bgNode = this.mapFightBgLayer.children[index];\r\n            if (!bgNode) {\r\n                return;\r\n            }\r\n            let posX = (x + info.x) * 1024;\r\n            let posY = (y + info.y) * 1024;\r\n            bgNode.setPosition(posX, posY);\r\n        });\r\n    }\r\n\r\n    getSaveData() {\r\n        let data: any = {};\r\n        data.expTimeCount = this.expTimeCount;\r\n        data.killMonsterCount = this.killMonsterCount;\r\n        data.backlifeCount = this.backlifeCount;\r\n        data.skillBombCd = this.skillBombCd;\r\n        data.skillHealCd = this.skillHealCd;\r\n        data.stopTimeCount = this.stopTimeCount;\r\n\r\n        // 镜头高度\r\n        data.orthoHeight = mapModel.mapFightCamera.orthoHeight;\r\n\r\n        // 围栏\r\n        let wall = null;\r\n        if (this.wallLayer.active) {\r\n            wall = {};\r\n            wall.centerPos = this.wallCenterPos;\r\n        }\r\n        data.wall = wall;\r\n\r\n        return data;\r\n    }\r\n\r\n    loadSaveData(data: any) {\r\n        this.expTimeCount = data.expTimeCount;\r\n        this.killMonsterCount = data.killMonsterCount;\r\n        this.backlifeCount = data.backlifeCount;\r\n        this.skillBombCd = data.skillBombCd;\r\n        this.skillHealCd = data.skillHealCd;\r\n        this.stopTimeCount = data.stopTimeCount;\r\n\r\n        mapModel.mapFightCamera.orthoHeight = data.orthoHeight;\r\n\r\n        // 围栏\r\n        if (data.wall) {\r\n            let wall = data.wall;\r\n            this.showWallLayer(wall.centerPos);\r\n        }\r\n    }\r\n\r\n    bossDead() {\r\n        this.stopTimeCount = false;\r\n        mapModel.mapSystem.hideWallLayer();\r\n        if (mapModel.monsterSystem.bossMonster.isBoss == 2) {\r\n            // 最后一个BOSS\r\n            mapModel.mapSystem.doSettlement(true);\r\n        } else {\r\n            mapModel.createMapLevelArr();\r\n        }\r\n        mapModel.monsterSystem.bossMonster = null;\r\n        mapModel.mapLayer.refreshBossHpLayer();\r\n    }\r\n\r\n    doSettlement(isWin: boolean = false) {\r\n        let row = designManager.getRowById(constants.tableName.map, mapModel.mapId);\r\n        let arr: PropItem[] = [];\r\n\r\n        // 金币\r\n        let coinNum = mapModel.coinNum + Math.floor(mapModel.time / 60 * 100) + Math.floor(mapModel.killMonsterNum / 5);\r\n        arr.push({ Id: constants.propIds.coin, Num: coinNum });\r\n\r\n        // 装备\r\n        for (let i in mapModel.equipIdArr) {\r\n            arr.push({ Id: mapModel.equipIdArr[i], Num: 1 });\r\n        }\r\n\r\n        // 必拿奖励\r\n        if (row.reward4) {\r\n            arr = arr.concat(mapModel.parseDesignPropArr(row.reward4));\r\n        }\r\n\r\n        // 通关奖励 \r\n        if (isWin && row.reward5) {\r\n            arr = arr.concat(mapModel.parseDesignPropArr(row.reward5));\r\n        }\r\n\r\n        // 按照品质排序\r\n        utilTools.sortArr(arr, (prop1, prop2) => {\r\n            let row1 = designManager.getRowById(constants.tableName.prop, prop1.Id);\r\n            let row2 = designManager.getRowById(constants.tableName.prop, prop2.Id);\r\n            if (row1.quality < row2.quality) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        let obj: any = {};\r\n\r\n        let time = Math.floor(mapModel.time);\r\n        obj.time = time;\r\n        let levelData = UserData.getInstance().getLevelData(mapModel.mapId);\r\n        if (time >= levelData.Time) {\r\n            levelData.Time = time;\r\n            UserData.getInstance().setLevelData(levelData);\r\n            obj.isBest = true;\r\n        }\r\n        obj.bestTime = levelData.Time;\r\n\r\n        UserData.getInstance().getRewardProp(arr);\r\n\r\n        obj.isWin = isWin;\r\n        obj.award = arr;\r\n        mapModel.mapLayer.popLayer(constants.layers.SettlementLayer, obj);\r\n       \r\n        tyqSDK.eventLevelEnd(mapModel.mapId, isWin)\r\n        tyqSDK.showInterstitialAd()\r\n        if (time >= 15 * 60) {\r\n            //  myLog.i(\"第\" + mapModel.mapId +\"关-15分钟\")\r\n            tyqSDK.eventSendCustomEvent(\"第\" + mapModel.mapId + \"关-15分钟\")\r\n        } else if (time >= 10 * 60) {\r\n            // myLog.i(\"第\" + mapModel.mapId +\"关-10分钟\")\r\n            tyqSDK.eventSendCustomEvent(\"第\" + mapModel.mapId + \"关-10分钟\")\r\n        } else if (time >= 5 * 60) {\r\n            //  myLog.i(\"第\" + mapModel.mapId +\"关-5分钟\")\r\n            tyqSDK.eventSendCustomEvent(\"第\" + mapModel.mapId + \"关-5分钟\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得距离参考点pos最近的怪物或者宝箱节点\r\n     * @param pos 参考点，默认是玩家位置\r\n     */\r\n    getMinDisTargetNode(pos?: Vec3): Node {\r\n        let minDis = 999999;\r\n        let minDisNode = null;\r\n        mapModel.monsterSystem.forVisibleMonster((monster: Monster) => {\r\n            if (!monster.node.activeInHierarchy) {\r\n                return;\r\n            }\r\n            let dis = monster.distancePlayer;\r\n            if (pos) {\r\n                dis = Vec2.distance(pos, monster.node.position);\r\n            }\r\n            if (dis < minDis) {\r\n                minDis = monster.distancePlayer;\r\n                minDisNode = monster.node;\r\n            }\r\n        });\r\n\r\n        mapModel.propSystem.forVisiblePropCollider((prop: Prop) => {\r\n            let propNode = prop.node;\r\n            let propPos = propNode.getPosition();\r\n            if (!pos) {\r\n                pos = mapModel.player.node.position;\r\n            }\r\n            let tmpDis = Vec2.distance(pos, propPos);\r\n            if (tmpDis > minDis) {\r\n                return;\r\n            }\r\n            minDis = tmpDis;\r\n            minDisNode = propNode;\r\n        });\r\n\r\n        return minDisNode;\r\n    }\r\n\r\n    // 开始播放预警动画\r\n    startWarning(aniName: string) {\r\n        if (!aniName) {\r\n            return;\r\n        }\r\n        this.warnAnimationCtrl.node.active = true;\r\n        this.warnAnimationCtrl.playAnimation(aniName, false, () => {\r\n            this.warnAnimationCtrl.node.active = false;\r\n            if (aniName == \"11\") {\r\n                // 镜头拉远\r\n                this.cameraMove(mapModel.cameraOrthoHeight + 200);\r\n            }\r\n        });\r\n    }\r\n\r\n    // 镜头拉动\r\n    cameraMove(orthoHeight: number) {\r\n        if (orthoHeight == mapModel.mapFightCamera.orthoHeight) {\r\n            return;\r\n        }\r\n        tween(mapModel.mapFightCamera).to(3, { orthoHeight: orthoHeight }).start();\r\n    }\r\n\r\n    // 主动技能：治疗\r\n    useSkillHeal() {\r\n        // this.skillHealCd = designManager.config.hp_cd;\r\n        playerModel.skillHealNum--;\r\n        mapModel.player.useSkillHeal(0.25);\r\n    }\r\n\r\n    useSkillMagnet() {\r\n        playerModel.skillMagnetNum--;\r\n        mapModel.propSystem.getProp(constants.propIds.magnet);\r\n    }\r\n\r\n    // 主动技能：炸弹\r\n    async useSkillBomb() {\r\n        // this.skillBombCd = designManager.config.boom_cd;\r\n        playerModel.skillBombNum--;\r\n        this.skillBombAniCtrl.node.active = true;\r\n        this.skillBombAniCtrl.playAnimation(\"1\", false, () => {\r\n            this.skillBombAniCtrl.node.active = false;\r\n        });\r\n        await cocosUtil.waitTimeAsync(this, 0.8);\r\n        // 屏幕内的小怪全部阵亡\r\n        let hitArr = [];\r\n        mapModel.monsterSystem.forVisibleMonster((monster: Monster) => {\r\n            if (monster.row.type != constants.monsterTypes.common) {\r\n                return;\r\n            }\r\n            let dam = monster.hp;\r\n            monster.waitHit = true;\r\n            let hitInfo: any = {};\r\n            hitInfo.monster = monster;\r\n            hitInfo.dam = dam;\r\n            hitArr.push(hitInfo);\r\n        });\r\n        mapModel.monsterSystem.batchHitMonster(hitArr);\r\n\r\n        // 怪物子弹全部消失\r\n        mapModel.bulletSystem.forVisibleMonsterBullet((bullet: Bullet) => {\r\n            bullet.recycleSelf();\r\n        });\r\n    }\r\n\r\n    // 玩家吃到炸弹\r\n    bomb() {\r\n        // 屏幕闪白\r\n        this.bombAnimationCtrl.node.active = true;\r\n        this.bombAnimationCtrl.playAnimationOnce(\"bomb\", () => {\r\n            this.bombAnimationCtrl.node.active = false;\r\n        });\r\n\r\n        // 范围内的小怪全部阵亡\r\n        let hitArr = [];\r\n        mapModel.monsterSystem.forVisibleMonster((monster: Monster) => {\r\n            if (monster.row.type != constants.monsterTypes.common) {\r\n                return;\r\n            }\r\n            if (monster.distancePlayer > 300) {\r\n                return;\r\n            }\r\n            let dam = monster.hp;\r\n            monster.waitHit = true;\r\n            let hitInfo: any = {};\r\n            hitInfo.monster = monster;\r\n            hitInfo.dam = dam;\r\n            hitArr.push(hitInfo);\r\n        });\r\n        mapModel.monsterSystem.batchHitMonster(hitArr);\r\n\r\n        // 怪物子弹全部消失\r\n        mapModel.bulletSystem.forVisibleMonsterBullet((bullet: Bullet) => {\r\n            bullet.recycleSelf();\r\n        });\r\n    }\r\n\r\n    // 怪物阵亡\r\n    monsterDead(id: number, worldPos: Vec3) {\r\n        let row = designManager.getRowById(constants.tableName.monster, id);\r\n\r\n        // 经验产生\r\n        if (utilTools.isProb(row.expProb)) {\r\n            let exp = utilTools.getFloatValue(row.expMin, row.expMax, true);\r\n            this.createExp(exp, worldPos);\r\n        }\r\n\r\n        // 击杀数量统计\r\n        mapModel.killMonsterNum++;\r\n        mapModel.mapLayer.refreshResLayer();\r\n\r\n        // 木箱产生\r\n        this.killMonsterCount++;\r\n        if (this.killMonsterCount >= 10) {\r\n            this.killMonsterCount -= 10;\r\n            // 玩家周围随机位置\r\n            let pos = cocosUtil.getAroundPos(mapModel.player.node, 300, view.getVisibleSize().height * 2, true);\r\n            mapModel.propSystem.addProp(constants.propIds.box1, pos);\r\n        }\r\n\r\n        // 道具掉落\r\n        if (row.propProbArr) {\r\n            for (let i = 0; i < row.propProbArr.length; i++) {\r\n                let prob = row.propProbArr[i];\r\n                if (!utilTools.isProb(prob)) {\r\n                    continue;\r\n                }\r\n                let propId = row.propIdArr[i];\r\n                let propNum = row.propNumArr[i];\r\n                let direction: Vec3 = cocosUtil.getCircleDirectionArr(1)[0];\r\n                let pos = worldPos.clone().add(direction.multiplyScalar(80));\r\n                let extraObj: any = {};\r\n                extraObj.num = propNum;\r\n                mapModel.propSystem.addProp(propId, pos, extraObj);\r\n            }\r\n        }\r\n\r\n        // 每日任务\r\n        switch (row.type) {\r\n            case constants.monsterTypes.common:\r\n                playerModel.addDayTaskNum(4, 1);\r\n                break;\r\n            case constants.monsterTypes.elite:\r\n                playerModel.addDayTaskNum(5, 1);\r\n                break;\r\n            case constants.monsterTypes.boss:\r\n                playerModel.addDayTaskNum(6, 1);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // // test\r\n        // if (Math.random() > 0.5) {\r\n        //     // 炸弹\r\n        //     mapModel.propSystem.addProp(501, worldPos);\r\n        // } else {\r\n        //     // 磁铁\r\n        //     mapModel.propSystem.addProp(301, worldPos);\r\n        // }\r\n    }\r\n\r\n    // 经验产生\r\n    createExp(exp: number, worldPos: Vec3, force: boolean = false) {\r\n        if (!force) {\r\n            if (exp > mapModel.expPool) {\r\n                exp = mapModel.expPool;\r\n            }\r\n            if (exp <= 0) {\r\n                return;\r\n            }\r\n            mapModel.expPool -= exp;\r\n        }\r\n        let extraObj: any = {};\r\n        extraObj.num = exp;\r\n        mapModel.propSystem.addProp(constants.propIds.exp, worldPos, extraObj);\r\n    }\r\n\r\n    addExp(num: number) {\r\n        mapModel.expNum += num;\r\n        mapModel.mapLayer.refreshExpLayer();\r\n    }\r\n\r\n    addCoin(num: number) {\r\n        mapModel.coinNum += num;\r\n        mapModel.mapLayer.refreshResLayer();\r\n    }\r\n\r\n    adjustInWall(node: Node | Vec3, height: number = 0) {\r\n        if (!this.wallLayer.active) {\r\n            return;\r\n        }\r\n\r\n        let tf = null;\r\n        let pos = null;\r\n        if (node instanceof Node) {\r\n            tf = node.getComponent(UITransform);\r\n            pos = node.getPosition(this.vec3Obj.nodePos);\r\n        } else {\r\n            pos = node;\r\n        }\r\n        if (pos.x >= this.wallRightVal) {\r\n            pos.x = this.wallRightVal;\r\n        }\r\n        if (pos.x <= this.wallLeftVal) {\r\n            pos.x = this.wallLeftVal;\r\n        }\r\n        if (pos.y >= this.wallTopVal) {\r\n            pos.y = this.wallTopVal;\r\n        }\r\n        if (tf) {\r\n            height = tf.height;\r\n        }\r\n        if (pos.y <= this.wallBottomVal + height * 0.4) {\r\n            pos.y = this.wallBottomVal + height * 0.4;\r\n        }\r\n        if (node instanceof Node) {\r\n            node.position = pos;\r\n        }\r\n    }\r\n\r\n    showWallLayer(centerPos?: Vec3) {\r\n        this.wallLayer.active = true;\r\n        let hWidth = 33;\r\n        let hHeight = 51;\r\n        let vWidth = 32;\r\n        let vHeight = 27;\r\n        if (mapModel.mapId == 2) {\r\n            hWidth = 36;\r\n            hHeight = 32;\r\n            vWidth = 43;\r\n            vHeight = 55;\r\n        }\r\n\r\n        // 宽1200 高1500\r\n        let width = Math.ceil(1200 / hWidth) * hWidth;\r\n        let height = Math.ceil(1500 / vHeight) * vHeight;\r\n\r\n        if (!centerPos) {\r\n            centerPos = mapModel.player.node.getPosition().clone();\r\n            centerPos.y += 400;\r\n        }\r\n        this.wallCenterPos = centerPos;\r\n\r\n        let top = this.wallTopNode;\r\n        top.getComponent(UITransform).width = width;\r\n        top.getComponent(UITransform).height = hHeight;\r\n        top.getComponent(BoxCollider2D).size.width = width;\r\n        top.getComponent(BoxCollider2D).size.height = hHeight;\r\n        let pos = v3(centerPos.x, centerPos.y + height * 0.5, 0);\r\n        top.setPosition(pos);\r\n\r\n        let bottom = this.wallBottomNode;\r\n        bottom.getComponent(UITransform).width = top.getComponent(UITransform).width;\r\n        bottom.getComponent(UITransform).height = top.getComponent(UITransform).height;\r\n        bottom.getComponent(BoxCollider2D).size.width = top.getComponent(BoxCollider2D).size.width;\r\n        bottom.getComponent(BoxCollider2D).size.height = top.getComponent(BoxCollider2D).size.height;\r\n        pos = v3(centerPos.x, centerPos.y - height * 0.5, 0);\r\n        bottom.setPosition(pos);\r\n\r\n        let left = this.wallLeftNode;\r\n        left.getComponent(UITransform).width = vWidth;\r\n        left.getComponent(UITransform).height = height;\r\n        left.getComponent(BoxCollider2D).size.width = vWidth;\r\n        left.getComponent(BoxCollider2D).size.height = height;\r\n        pos = v3(centerPos.x - width * 0.5 + vWidth * 0.5, centerPos.y, 0);\r\n        left.setPosition(pos);\r\n\r\n        let right = this.wallRightNode;\r\n        right.getComponent(UITransform).width = left.getComponent(UITransform).width;\r\n        right.getComponent(UITransform).height = left.getComponent(UITransform).height;\r\n        right.getComponent(BoxCollider2D).size.width = left.getComponent(BoxCollider2D).size.width;\r\n        right.getComponent(BoxCollider2D).size.height = left.getComponent(BoxCollider2D).size.height;\r\n        pos = v3(centerPos.x + width * 0.5 - vWidth * 0.5, centerPos.y, 0);\r\n        right.setPosition(pos);\r\n\r\n        this.refreshWallSideVal();\r\n\r\n        this.wallTopNode.getComponent(UIOpacity).opacity = 0;\r\n        this.wallBottomNode.getComponent(UIOpacity).opacity = 0;\r\n        this.wallLeftNode.getComponent(UIOpacity).opacity = 0;\r\n        this.wallRightNode.getComponent(UIOpacity).opacity = 0;\r\n        this.wallShineNode.active = true;\r\n        this.wallShineNode.position = v3(centerPos.x, centerPos.y - 15);\r\n        this.wallShineNode.getComponent(UITransform).width = width * 0.5 + 10;\r\n        this.wallShineNode.getComponent(UITransform).height = height * 0.5 + 10;\r\n\r\n        let shineOpacity = this.wallShineNode.getComponent(UIOpacity);\r\n        Tween.stopAllByTarget(shineOpacity);\r\n        tween(shineOpacity).to(0.3, { opacity: 255 }).to(0.3, { opacity: 0 }).union().repeat(3).call(() => {\r\n            this.wallShineNode.active = false;\r\n            this.wallTopNode.getComponent(UIOpacity).opacity = 255;\r\n            this.wallBottomNode.getComponent(UIOpacity).opacity = 255;\r\n            this.wallLeftNode.getComponent(UIOpacity).opacity = 255;\r\n            this.wallRightNode.getComponent(UIOpacity).opacity = 255;\r\n        }).start();\r\n\r\n    }\r\n\r\n    refreshWallSideVal() {\r\n        this.wallTopVal = this.wallTopNode.position.y - 20;\r\n        this.wallBottomVal = this.wallBottomNode.position.y + 30;\r\n        this.wallLeftVal = this.wallLeftNode.position.x + 20;\r\n        this.wallRightVal = this.wallRightNode.position.x - 20;\r\n    }\r\n\r\n    hideWallLayer() {\r\n        this.wallLayer.active = false;\r\n    }\r\n\r\n    fightPause() {\r\n        this.pauseVal++;\r\n        if (this.pauseVal > 1) {\r\n            return;\r\n        }\r\n\r\n        let camera = mapModel.mapFightCamera;\r\n        let width = view.getVisibleSize().width;\r\n        let height = view.getVisibleSize().height;\r\n        let texture = new RenderTexture();\r\n        texture.reset({ width: width, height: height });\r\n\r\n        // 原生平台上会出现花屏（UI摄像机残留问题），因此暂时隐藏UI根节点，等待截屏完成后再恢复\r\n        find(\"Canvas/Camera\").active = false;\r\n\r\n        camera.targetTexture = texture;\r\n        // 执行渲染，单个渲染会报错，那就直接全部渲染一次吧（单个渲染：cc.director.root.pipeline.render([camera.camera]);）\r\n        director.root.frameMove(0);\r\n        camera.targetTexture = null;\r\n\r\n        find(\"Canvas/Camera\").active = true;\r\n\r\n        let sp = new SpriteFrame();\r\n        sp.texture = texture;\r\n\r\n        mapModel.mapLayer.fightCapNode.getComponent(Sprite).spriteFrame = sp;\r\n        mapModel.mapLayer.fightCapNode.active = true;\r\n\r\n        this.node.active = false;\r\n    }\r\n\r\n    fightResume() {\r\n        this.pauseVal--;\r\n        if (this.pauseVal > 0) {\r\n            return;\r\n        }\r\n        let camera = mapModel.mapFightCamera;\r\n        camera.targetTexture = null;\r\n\r\n        this.node.active = true;\r\n        mapModel.mapLayer.fightCapNode.active = false;\r\n        mapModel.player.stopMove();\r\n    }\r\n\r\n    updateLogic(dt: number) {\r\n        if (!this.stopTimeCount) {\r\n            // 时间\r\n            mapModel.time += dt;\r\n\r\n            // 经验池\r\n            this.expTimeCount += dt;\r\n            while (this.expTimeCount >= 1) {\r\n                this.expTimeCount--;\r\n                if (mapModel.expTypeRow) {\r\n                    if (mapModel.time >= mapModel.expTypeRow.startTime && mapModel.time <= mapModel.expTypeRow.endTime) {\r\n                        mapModel.expPool += mapModel.expTypeRow.expSpeed;\r\n                    } else {\r\n                        mapModel.expTypeRow = designManager.getRowById(constants.tableName.expType, mapModel.expTypeRow.id + 1);\r\n                    }\r\n                    this.setString(mapModel.mapLayer.expNumNode, mapModel.expPool);\r\n                }\r\n            }\r\n        }\r\n        mapModel.mapLayer.refreshTimeNode();\r\n\r\n        if (this.skillBombCd > 0) {\r\n            this.skillBombCd -= dt;\r\n        } else {\r\n            this.skillBombCd = 0;\r\n        }\r\n        if (this.skillHealCd > 0) {\r\n            this.skillHealCd -= dt;\r\n        } else {\r\n            this.skillHealCd = 0;\r\n        }\r\n\r\n        // 各个子系统\r\n        mapModel.weaponSystem.updateLogic(dt);\r\n        mapModel.monsterSystem.updateLogic(dt);\r\n        mapModel.skillSystem.updateLogic(dt);\r\n        mapModel.propSystem.updateLogic(dt);\r\n        mapModel.bulletSystem.updateLogic(dt);\r\n    }\r\n\r\n    updatePhysicsWorld() {\r\n        physicsWorld.step(mapModel.mapFightLayer);\r\n    }\r\n\r\n    updateBoxHintLayer(dt: number) {\r\n        let minDis = 999999;\r\n        let minProp: Prop = null;\r\n        let playerPos = mapModel.player.node.position;\r\n        mapModel.propSystem.forAllPropById(constants.propIds.box2, (prop: Prop) => {\r\n            let node = prop.node;\r\n            let pos = node.position;\r\n            let tf = node.getComponent(UITransform);\r\n            let add = (tf.width + tf.height) * 0.5;\r\n            if ((Math.abs(pos.x - playerPos.x) <= mapModel.visibleHalfSize.width + add)\r\n                && (Math.abs(pos.y - playerPos.y) <= mapModel.visibleHalfSize.height + add)) {\r\n                return;\r\n            }\r\n            let dis = Vec2.distance(pos, playerPos);\r\n            if (dis < minDis) {\r\n                minDis = dis;\r\n                minProp = prop;\r\n            }\r\n        });\r\n        if (!minProp) {\r\n            this.boxHintNode.active = false;\r\n            return;\r\n        }\r\n        this.boxHintNode.active = true;\r\n\r\n        let direction = minProp.node.getPosition().subtract(playerPos);\r\n        let angle = utilTools.radianToAngle(Math.atan2(direction.y, direction.x));\r\n        this.boxArrowNode.angle = angle;\r\n\r\n        let propPos = minProp.node.position;\r\n        let gap = 80;\r\n\r\n        let x = propPos.x - playerPos.x;\r\n        let halfWidth = view.getVisibleSize().width * 0.5 - gap;\r\n        if (x > halfWidth) {\r\n            x = halfWidth;\r\n        } else if (x < -halfWidth) {\r\n            x = -halfWidth;\r\n        }\r\n\r\n        let y = propPos.y - playerPos.y;\r\n        let halfHeight = view.getVisibleSize().height * 0.5 - gap;\r\n        if (y > halfHeight - 320) {\r\n            y = halfHeight - 320;\r\n        } else if (y < -halfHeight) {\r\n            y = -halfHeight;\r\n        }\r\n\r\n        this.boxHintNode.position = v3(x, y);\r\n\r\n\r\n    }\r\n\r\n    // 获得3选1数组\r\n    getSelectItemArr() {\r\n        let arr = [];\r\n\r\n        // 武器\r\n        let hasFull = false;\r\n        if (mapModel.weaponSystem.weaponArr.length >= constants.design.weaponNum) {\r\n            hasFull = true;\r\n        }\r\n        let row = designManager.getLastRow(constants.tableName.weapon);\r\n        for (let i = 1; i <= row.type; i++) {\r\n            let info = mapModel.weaponSystem.getWeaponInfoByType(i);\r\n            if (info) {\r\n                let row = designManager.getRowById(constants.tableName.weapon, info.id);\r\n                if (row.lv >= constants.design.maxLv) {\r\n                    continue;\r\n                }\r\n            } else if (hasFull) {\r\n                continue;\r\n            }\r\n            let item: any = {};\r\n            item.name = constants.tableName.weapon;\r\n            item.weight = 1;\r\n            item.type = i;\r\n            item.info = info;\r\n            arr.push(item);\r\n        }\r\n\r\n        // 主动技能\r\n        hasFull = false;\r\n        if (mapModel.skillSystem.skillArr.length >= constants.design.skillNum) {\r\n            hasFull = true;\r\n        }\r\n        row = designManager.getLastRow(constants.tableName.skill);\r\n        for (let i = 1; i <= row.type; i++) {\r\n            let info = mapModel.skillSystem.getSkillInfoByType(i);\r\n            if (info) {\r\n                let row = designManager.getRowById(constants.tableName.skill, info.id);\r\n                if (row.lv >= constants.design.maxLv) {\r\n                    continue;\r\n                }\r\n            } else if (hasFull) {\r\n                continue;\r\n            }\r\n            let item: any = {};\r\n            item.name = constants.tableName.skill;\r\n            item.weight = 1;\r\n            item.type = i;\r\n            item.info = info;\r\n            arr.push(item);\r\n        }\r\n\r\n        // 被动技能\r\n        hasFull = false;\r\n        if (mapModel.skillSystem.skill2Arr.length >= constants.design.skillNum) {\r\n            hasFull = true;\r\n        }\r\n        row = designManager.getLastRow(constants.tableName.skill2);\r\n        for (let i = 1; i <= row.type; i++) {\r\n            let info = mapModel.skillSystem.getSkill2InfoByType(i);\r\n            if (info) {\r\n                let row = designManager.getRowById(constants.tableName.skill2, info.id);\r\n                if (row.lv >= constants.design.maxLv) {\r\n                    continue;\r\n                }\r\n            } else if (hasFull) {\r\n                continue;\r\n            }\r\n            let item: any = {};\r\n            item.name = constants.tableName.skill2;\r\n            item.weight = 1;\r\n            item.type = i;\r\n            item.info = info;\r\n            arr.push(item);\r\n        }\r\n\r\n\r\n        arr = utilTools.getRowsByWeightAndNum(arr, 3);\r\n        while (arr.length < 3) {\r\n            // 补充鸡腿\r\n            let item: any = {};\r\n            item.name = constants.tableName.prop;\r\n            item.id = constants.propIds.addHpPercent;\r\n            arr.push(item);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    refreshCamera(dt: number) {\r\n        if (mapModel.mapFightCamera.orthoHeight <= mapModel.cameraOrthoHeight) {\r\n            return;\r\n        }\r\n        mapModel.mapFightCamera.orthoHeight--;\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.updateBoxHintLayer(dt);\r\n    }\r\n\r\n}\r\n\r\n"]}