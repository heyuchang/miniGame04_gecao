{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/sys/HintSystem.ts"],"names":["find","Node","Prefab","UITransform","_decorator","cocosUtil","constants","resManager","BaseLayer","NodePoolUtil","Hint","HintNames","ccclass","property","HintSystem","nameLayerObj","namePrefabObj","hintLayer","hintLayer2","onLoad","node","parent","onEnable","onDestroy","getHintLayerNameById","name","getHintLayerByName","nameLayer","addComponent","setPosition","targetPos","targetPos2","targetPos3","feiBiao","blockArrow","comeShine","nodePoolUtil","init","addHint","worldPos","angle","extraObj","getComponent","tmpFunc","activeInHierarchy","hintNode","getNode","hint","addComponentOnce","loadAsset","bundles","err","prefab","isValid","recycleHintNode","recycleNode"],"mappings":"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","sourcesContent":["import { find, Node, Prefab, UITransform, Vec3, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../utils/cocosUtil';\r\nimport { constants } from '../../data/constants';\r\nimport { resManager } from '../../manager/resManager';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nimport { NodePoolUtil } from '../base/NodePoolUtil';\r\nimport { Hint, HintNames } from '../item/hint/Hint';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HintSystem')\r\nexport class HintSystem extends BaseLayer {\r\n\r\n    // 按照名称进行UI分层\r\n    nameLayerObj: any = {};\r\n    namePrefabObj: any = {};\r\n\r\n    hintLayer: Node;\r\n    hintLayer2: Node;\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n\r\n        this.hintLayer = this.node;\r\n        this.hintLayer2 = find(\"hintLayer2\", this.node.parent);\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    getHintLayerNameById(name: string) {\r\n        return name + \"Layer\";\r\n    }\r\n\r\n    getHintLayerByName(name: string) {\r\n        let nameLayer = this.nameLayerObj[name];\r\n        if (!nameLayer) {\r\n            nameLayer = new Node(this.getHintLayerNameById(name));\r\n            nameLayer.addComponent(UITransform);\r\n            nameLayer.setPosition(0, 0);\r\n            switch (name) {\r\n                case HintNames.targetPos:\r\n                case HintNames.targetPos2:\r\n                case HintNames.targetPos3:\r\n                case HintNames.feiBiao:\r\n                case HintNames.blockArrow:\r\n                case HintNames.comeShine:\r\n                    nameLayer.parent = this.hintLayer2;\r\n                    break;\r\n                default:\r\n                    nameLayer.parent = this.hintLayer;\r\n                    break;\r\n            }\r\n            this.nameLayerObj[name] = nameLayer;\r\n\r\n            let nodePoolUtil = nameLayer.addComponent(NodePoolUtil);\r\n            nodePoolUtil.init(this.namePrefabObj[name]);\r\n        }\r\n        return nameLayer;\r\n    }\r\n\r\n    addHint(name: string, worldPos: Vec3, angle: number = 0, extraObj?: any) {\r\n        let nodePoolUtil = this.getHintLayerByName(name).getComponent(NodePoolUtil);\r\n\r\n        let tmpFunc = () => {\r\n            if (!nodePoolUtil.node.activeInHierarchy) {\r\n                return;\r\n            }\r\n            let hintNode = nodePoolUtil.getNode();\r\n            let hint = cocosUtil.addComponentOnce(hintNode, Hint);\r\n            hint.init(name, worldPos, angle, extraObj);\r\n        };\r\n\r\n        if (!this.namePrefabObj[name]) {\r\n            resManager.loadAsset(constants.bundles.hint, name, Prefab, null, (err, prefab) => {\r\n                if (!cocosUtil.isValid(this)) {\r\n                    return;\r\n                }\r\n                this.namePrefabObj[name] = prefab;\r\n                nodePoolUtil.init(prefab);\r\n                tmpFunc();\r\n            });\r\n            return;\r\n        }\r\n        tmpFunc();\r\n\r\n    }\r\n\r\n    recycleHintNode(hintNode: Node) {\r\n        let nodePoolUtil = this.getHintLayerByName(hintNode.name).getComponent(NodePoolUtil);\r\n        nodePoolUtil.recycleNode(hintNode);\r\n    }\r\n\r\n}\r\n\r\n"]}