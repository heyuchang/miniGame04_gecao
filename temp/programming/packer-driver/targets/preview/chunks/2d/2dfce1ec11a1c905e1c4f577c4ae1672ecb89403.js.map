{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/manager/eventManager.ts"],"names":["EventManager","myLog","msgac","constructor","acList","instance","_instance","on","ac","cb","sender","arr","i","item","push","off","tmpArr","offWithSender","send","data","isLog","notMyLog","joystick","key","ac2KeyObj","info","call","err","e","message","eventManager"],"mappings":"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","sourcesContent":["import { myLog } from \"../../common/myLog\";\r\nimport { msgac } from \"../data/msgac\";\r\n\r\n\r\nclass EventManager {\r\n\r\n    private static _instance: EventManager;\r\n    private constructor() { }\r\n    public static get instance(): EventManager {\r\n        if (!this._instance) {\r\n            this._instance = new EventManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    acList: any = {};\r\n\r\n    on(ac: string | number, cb: Function, sender: any) {\r\n        let arr = this.acList[ac];\r\n        if (!arr) {\r\n            arr = [];\r\n            this.acList[ac] = arr;\r\n        }\r\n\r\n        // 避免重复添加\r\n        for (let i in arr) {\r\n            let item = arr[i];\r\n            if (item.sender == sender) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let item: any = {};\r\n        item.cb = cb;\r\n        item.sender = sender;\r\n        arr.push(item);\r\n    }\r\n\r\n\r\n    off(ac: string | number, cb: Function, sender: any) {\r\n        let arr = this.acList[ac];\r\n        if (!arr) {\r\n            return;\r\n        }\r\n\r\n        let tmpArr = [];\r\n        for (let i in arr) {\r\n            let item = arr[i];\r\n            if (item.cb == cb && item.sender == sender) {\r\n                continue;\r\n            }\r\n            tmpArr.push(item);\r\n        }\r\n\r\n        this.acList[ac] = tmpArr;\r\n    }\r\n\r\n    offWithSender(sender: any) {\r\n        for (let ac in this.acList) {\r\n            let arr = this.acList[ac];\r\n\r\n            let tmpArr = [];\r\n            for (let i in arr) {\r\n                let item = arr[i];\r\n                if (item.sender == sender) {\r\n                    continue;\r\n                }\r\n                tmpArr.push(item);\r\n            }\r\n\r\n            this.acList[ac] = tmpArr;\r\n        }\r\n    }\r\n\r\n    send(ac: string | number, data?: any) {\r\n        let arr = this.acList[ac];\r\n        if (!arr) {\r\n            return;\r\n        }\r\n        let isLog = true;\r\n        if (data && data.notMyLog) {\r\n            isLog = false;\r\n        }\r\n        if (ac == msgac.joystick\r\n\r\n        ) {\r\n            isLog = false;\r\n        }\r\n        if (isLog) {\r\n            let key = msgac.ac2KeyObj[ac];\r\n            myLog.i(key, data);\r\n        }\r\n        try {\r\n            for (let i in arr) {\r\n                let item = arr[i];\r\n                let cb = item.cb;\r\n                let sender = item.sender;\r\n                let info = {\r\n                    ac: ac,\r\n                    data: data\r\n                };\r\n                cb.call(sender, info);\r\n            }\r\n        } catch (err) {\r\n            myLog.e(\"eventManager send error:\" + err.message, ac, data, err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventManager = EventManager.instance;\r\n\r\n"]}