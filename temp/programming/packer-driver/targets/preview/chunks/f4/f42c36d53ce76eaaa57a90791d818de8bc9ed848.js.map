{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/sys/SkillSystem.ts"],"names":["find","macro","Node","UITransform","_decorator","utilTools","constants","designManager","mapModel","BaseLayer","Skill","ccclass","property","SkillSystem","skillArr","skill2Arr","hasOpenScheculeAddHp","onLoad","onEnable","onDestroy","getSaveData","skillData","loadSaveData","data","forArr","info","addSkill","id","addSkill2","type","skillId","getRowById","tableName","skill","getSkillInfoByType","row","lv","design","maxLv","length","skillNum","getFirstIdByType","push","name","getSkillNodeNameByType","node","skillUtil","getComponent","forceDestroy","destroy","parent","addComponent","init","timeCount","cd","i","tmp","getSkillCompomentByType","getSkill2InfoByType","skill2","initBulletScale","schedule","playerHpAdd","REPEAT_FOREVER","player","addHpMaxPercent","p1","hp","getSkill2Val","addHp","getSkill2AtkCdSubPercent","getSkill2AtkAddPercent","getSkill2PropGetAddDis","getSkill2AddCoin","getSkill2RangeAddScale","getSkill2DamSubPercent","getSkill2DurationAddPercent","getSkill2AddExp","getSkill2PlayerSpeedAddPercent","getSkill2BulletSpeedAddPercent","updateLogic","dt","children"],"mappings":"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","sourcesContent":["import { find, macro, Node, UITransform, _decorator } from 'cc';\r\nimport { utilTools } from '../../../utils/utilTools';\r\nimport { constants } from '../../data/constants';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { mapModel } from '../../model/mapModel';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nimport { Skill } from '../item/skill/Skill';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SkillSystem')\r\nexport class SkillSystem extends BaseLayer {\r\n\r\n    skillArr: any = [];\r\n\r\n    skill2Arr: any = [];\r\n    // 回血定时器\r\n    hasOpenScheculeAddHp: boolean = false;\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    getSaveData() {\r\n        let skillData: any = {};\r\n        skillData.skillArr = this.skillArr;\r\n        skillData.skill2Arr = this.skill2Arr;\r\n\r\n        return skillData;\r\n    }\r\n\r\n    loadSaveData(data: any) {\r\n        utilTools.forArr(data.skillArr, (info: any) => {\r\n            this.addSkill(0, info.id);\r\n        });\r\n\r\n        utilTools.forArr(data.skill2Arr, (info: any) => {\r\n            this.addSkill2(0, info.id);\r\n        });\r\n    }\r\n\r\n    // 添加主动技能\r\n    addSkill(type: number, skillId: number = 0) {\r\n        if (skillId > 0) {\r\n            type = designManager.getRowById(constants.tableName.skill, skillId).type;\r\n        }\r\n\r\n        let info = this.getSkillInfoByType(type);\r\n        if (info) {\r\n            // 升级\r\n            let row = designManager.getRowById(constants.tableName.skill, info.id + 1);\r\n            if (!row || row.lv > constants.design.maxLv) {\r\n                // 已满级\r\n                return;\r\n            }\r\n            info.id++;\r\n        } else {\r\n            if (this.skillArr.length >= constants.design.skillNum) {\r\n                // 数量已满\r\n                return;\r\n            }\r\n            // 新增\r\n            info = {};\r\n            info.id = designManager.getFirstIdByType(type);\r\n            this.skillArr.push(info);\r\n        }\r\n\r\n        if (skillId > 0) {\r\n            info.id = skillId;\r\n        }\r\n\r\n        let name = this.getSkillNodeNameByType(type);\r\n        let node = find(name, this.node);\r\n        if (node) {\r\n            let skillUtil = node.getComponent(Skill).skillUtil;\r\n            if (skillUtil && skillUtil.forceDestroy) {\r\n                skillUtil.forceDestroy();\r\n            }\r\n            node.destroy();\r\n            node.parent = null;\r\n        }\r\n\r\n        node = new Node(name);\r\n        node.addComponent(UITransform);\r\n        node.parent = this.node;\r\n        let skill = node.addComponent(Skill);\r\n\r\n        skill.init(info);\r\n        if (skill.skillUtil) {\r\n            skill.skillUtil.timeCount = skill.row.cd;\r\n        }\r\n    }\r\n\r\n    getSkillInfoByType(type: number) {\r\n        for (let i in this.skillArr) {\r\n            let tmp = this.skillArr[i];\r\n            let row = designManager.getRowById(constants.tableName.skill, tmp.id);\r\n            if (row.type == type) {\r\n                return tmp;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getSkillNodeNameByType(type: number) {\r\n        return \"skill\" + type;\r\n    }\r\n\r\n    getSkillCompomentByType(type: number) {\r\n        let name = this.getSkillNodeNameByType(type);\r\n        let node = find(name, this.node);\r\n        if (node) {\r\n            return node.getComponent(Skill);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getSkill2InfoByType(type: number) {\r\n        for (let i = 0; i < this.skill2Arr.length; i++) {\r\n            let info = this.skill2Arr[i];\r\n            let row = designManager.getRowById(constants.tableName.skill2, info.id);\r\n            if (type == row.type) {\r\n                return info;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // 添加被动技能\r\n    addSkill2(type: number, skillId: number = 0) {\r\n        if (skillId > 0) {\r\n            type = designManager.getRowById(constants.tableName.skill2, skillId).type;\r\n        }\r\n\r\n        let info = this.getSkill2InfoByType(type);\r\n        if (info) {\r\n            // 升级\r\n            let row = designManager.getRowById(constants.tableName.skill2, info.id + 1);\r\n            if (!row || row.lv > constants.design.maxLv) {\r\n                // 已满级\r\n                return;\r\n            }\r\n            info.id++;\r\n        } else {\r\n            if (this.skill2Arr.length >= constants.design.skillNum) {\r\n                // 数量已满\r\n                return;\r\n            }\r\n            // 新增\r\n            info = {};\r\n            info.id = designManager.getFirstIdByType(type);\r\n            this.skill2Arr.push(info);\r\n        }\r\n\r\n        if (skillId > 0) {\r\n            info.id = skillId;\r\n        }\r\n\r\n        let row = designManager.getRowById(constants.tableName.skill2, info.id);\r\n        switch (row.type) {\r\n            case 6:\r\n                // 通知力场技能刷新大小\r\n                let skill = this.getSkillCompomentByType(7);\r\n                if (skill) {\r\n                    skill.skillUtil.initBulletScale();\r\n                }\r\n                break;\r\n            case 7:\r\n                // 每5秒回血\r\n                if (!this.hasOpenScheculeAddHp) {\r\n                    this.hasOpenScheculeAddHp = true;\r\n                    this.schedule(this.playerHpAdd, 5, macro.REPEAT_FOREVER);\r\n                }\r\n                break;\r\n            case 8:\r\n                // 提高生命上限\r\n                mapModel.player.addHpMaxPercent(row.p1);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    playerHpAdd() {\r\n        let hp = this.getSkill2Val(7);\r\n        mapModel.player.addHp(hp);\r\n    }\r\n\r\n    getSkill2Val(type: number) {\r\n        let info = this.getSkill2InfoByType(type);\r\n        if (info) {\r\n            let row = designManager.getRowById(constants.tableName.skill2, info.id);\r\n            return row.p1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // 减少攻击间隔\r\n    getSkill2AtkCdSubPercent() {\r\n        return this.getSkill2Val(12);\r\n    }\r\n\r\n    // 增加伤害\r\n    getSkill2AtkAddPercent() {\r\n        return this.getSkill2Val(11);\r\n    }\r\n\r\n    // 增加道具吸取距离\r\n    getSkill2PropGetAddDis() {\r\n        return this.getSkill2Val(10);\r\n    }\r\n\r\n    // 金币增加\r\n    getSkill2AddCoin() {\r\n        return this.getSkill2Val(9);\r\n    }\r\n\r\n    // 提升攻击范围\r\n    getSkill2RangeAddScale() {\r\n        return this.getSkill2Val(6);\r\n    }\r\n\r\n    // 减少伤害百分比\r\n    getSkill2DamSubPercent() {\r\n        return this.getSkill2Val(5);\r\n    }\r\n\r\n    // 提升技能持续时间\r\n    getSkill2DurationAddPercent() {\r\n        return this.getSkill2Val(4);\r\n    }\r\n\r\n    // 经验值增加\r\n    getSkill2AddExp() {\r\n        return this.getSkill2Val(3);\r\n    }\r\n\r\n    // 提升玩家移动速度\r\n    getSkill2PlayerSpeedAddPercent() {\r\n        return this.getSkill2Val(2);\r\n    }\r\n\r\n    // 提升子弹飞行速度\r\n    getSkill2BulletSpeedAddPercent() {\r\n        return this.getSkill2Val(1);\r\n    }\r\n\r\n    updateLogic(dt: number) {\r\n        utilTools.forArr(this.node.children, (node: Node) => {\r\n            node.getComponent(Skill).updateLogic(dt);\r\n        });\r\n    }\r\n\r\n}\r\n\r\n"]}