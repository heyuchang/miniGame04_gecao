{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/layer/TowerRoleLayer.ts"],"names":["Color","find","_decorator","cocosUtil","constants","localText","audioManager","designManager","UserData","BaseLayer","ccclass","property","TowerRoleLayer","propItemUIArr","atkNode","hpNode","weaponList","costPropIcon","costPropNum","onLoad","chs","getNodeByPath","children","i","push","setRoleSkin","onEnable","onDisable","onDestroy","initUI","idArr","getInstance","wearProp","length","itemUI","emptyNode","uiNode","id","$towerWeaponId","active","setPropItemIcon","setWeaponbLv","info","getTowerRoleProInfo","setString","atk","hp","scrollViewSetData","$towerWeaponIdArr","refreshWeaponItem","bind","lv","getWeaponLv","row","getRowById","tableName","weaponOpt","propRow","prop","propId","nextRow","setSpriteFrame","icon","propNum","getPropNumById","setRenderableColor","WHITE","RED","setNumString","type","wRow","weapon","weaponid","setSpriteFrame2","quality","lvNode","choseNode","processEvent","ac","data","onButtonClick","node","name","onClickPropItem","obj","weaponLv","openLayer","layers","PropInfoLayer","onClickWeaponItem","item","onClickBtnOpt","ret","towerWeaponAddLv","st","createNotice","maxLv","showLackItem","onClickBtnSkin","playEffect","SkinChangeLayer"],"mappings":"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","sourcesContent":["import { Color, find, Node, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../utils/cocosUtil';\r\nimport { constants } from '../../data/constants';\r\nimport { localText } from '../../data/localText';\r\nimport { audioManager } from '../../manager/audioManager';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { UserData } from '../../model/UserData';\r\nimport { BaseLayer } from '../base/BaseLayer';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TowerRoleLayer')\r\nexport class TowerRoleLayer extends BaseLayer {\r\n\r\n    propItemUIArr = [];\r\n\r\n    atkNode: Node;\r\n    hpNode: Node;\r\n\r\n    weaponList: Node;\r\n\r\n    costPropIcon: Node;\r\n    costPropNum: Node;\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n\r\n        let chs = this.getNodeByPath(\"ui/herobg/propLeft\").children;\r\n        for (let i in chs) {\r\n            this.propItemUIArr.push(chs[i]);\r\n        }\r\n        chs = this.getNodeByPath(\"ui/herobg/propRight\").children;\r\n        for (let i in chs) {\r\n            this.propItemUIArr.push(chs[i]);\r\n        }\r\n\r\n        this.atkNode = this.getNodeByPath(\"ui/herobg/attackbg/Label\");\r\n        this.hpNode = this.getNodeByPath(\"ui/herobg/lifebg/Label\");\r\n\r\n        this.weaponList = this.getNodeByPath(\"ui/herobg/list\");\r\n\r\n        this.costPropIcon = this.getNodeByPath(\"ui/herobg/bar/btnOpt/info/icon\");\r\n        this.costPropNum = this.getNodeByPath(\"ui/herobg/bar/btnOpt/info/num\");\r\n\r\n        this.setRoleSkin(this.getNodeByPath(\"ui/herobg/role\"));\r\n\r\n        // test\r\n        // UserData.getInstance().addPropNum(106, 99999);\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable();\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    initUI() {\r\n        let idArr = UserData.getInstance().wearProp;\r\n        for (let i = 0; i < idArr.length; i++) {\r\n            let itemUI = this.propItemUIArr[i];\r\n            let emptyNode = find(\"empty\", itemUI);\r\n            let uiNode = find(\"ui\", itemUI);\r\n            let id = idArr[i];\r\n            if (i == 0) {\r\n                id = UserData.getInstance().$towerWeaponId;\r\n            }\r\n            if (id > 0) {\r\n                itemUI.id = id;\r\n                emptyNode.active = false;\r\n                uiNode.active = true;\r\n                this.setPropItemIcon(uiNode, id);\r\n                this.setWeaponbLv(find(\"lv\", uiNode), id);\r\n            } else {\r\n                itemUI.id = 0;\r\n                emptyNode.active = true;\r\n                uiNode.active = false;\r\n            }\r\n        }\r\n\r\n        let info = UserData.getInstance().getTowerRoleProInfo();\r\n        this.setString(this.atkNode, info.atk);\r\n        this.setString(this.hpNode, info.hp);\r\n\r\n        this.scrollViewSetData(this.weaponList, UserData.getInstance().$towerWeaponIdArr, this.refreshWeaponItem.bind(this));\r\n\r\n        let lv = UserData.getInstance().getWeaponLv(UserData.getInstance().$towerWeaponId);\r\n        let row = designManager.getRowById(constants.tableName.weaponOpt, lv);\r\n        let propRow = designManager.getRowById(constants.tableName.prop, row.propId);\r\n\r\n        let nextRow = designManager.getRowById(constants.tableName.weaponOpt, lv + 1);\r\n        if (nextRow) {\r\n            this.getNodeByPath(\"ui/herobg/bar/btnOpt/Label\").active = true;\r\n            this.getNodeByPath(\"ui/herobg/bar/btnOpt/info\").active = true;\r\n            this.getNodeByPath(\"ui/herobg/bar/btnOpt/max\").active = false;\r\n\r\n            this.setSpriteFrame(this.costPropIcon, propRow.icon);\r\n            this.setString(this.costPropNum, \"X\" + row.propNum);\r\n            if (UserData.getInstance().getPropNumById(row.propId) >= row.propNum) {\r\n                cocosUtil.setRenderableColor(this.costPropNum, Color.WHITE);\r\n            } else {\r\n                cocosUtil.setRenderableColor(this.costPropNum, Color.RED);\r\n            }\r\n        } else {\r\n            this.getNodeByPath(\"ui/herobg/bar/btnOpt/Label\").active = false;\r\n            this.getNodeByPath(\"ui/herobg/bar/btnOpt/info\").active = false;\r\n            this.getNodeByPath(\"ui/herobg/bar/btnOpt/max\").active = true;\r\n        }\r\n\r\n        this.setSpriteFrame(this.getNodeByPath(\"ui/itemLayer/icon\"), propRow.icon);\r\n        this.setNumString(this.getNodeByPath(\"ui/itemLayer/num\"), UserData.getInstance().getPropNumById(row.propId));\r\n\r\n    }\r\n\r\n    setPropItemIcon(itemUI: Node, id: number) {\r\n        let row = designManager.getRowById(constants.tableName.prop, id);\r\n        let icon = \"prop/\" + row.icon;\r\n        if (row.type == 11) {\r\n            let wRow = designManager.getRowById(constants.tableName.weapon, row.weaponid);\r\n            icon = \"weapon/\" + wRow.icon;\r\n        }\r\n        this.setSpriteFrame2(find(\"icon\", itemUI), icon);\r\n        this.setSpriteFrame2(find(\"bg\", itemUI), \"prop/propbg\" + row.quality);\r\n    }\r\n\r\n    setWeaponbLv(lvNode: Node, id: number) {\r\n        if (!lvNode) {\r\n            return;\r\n        }\r\n        let lv = UserData.getInstance().getWeaponLv(id);\r\n        this.setString(lvNode, localText.lv + lv);\r\n    }\r\n\r\n    refreshWeaponItem(itemUI: Node, id: number) {\r\n        this.setPropItemIcon(itemUI, id);\r\n        this.setWeaponbLv(find(\"lv\", itemUI), id);\r\n        let choseNode = find(\"chose\", itemUI);\r\n        if (id == UserData.getInstance().$towerWeaponId) {\r\n            choseNode.active = true;\r\n        } else {\r\n            choseNode.active = false;\r\n        }\r\n    }\r\n\r\n    processEvent(ac: any, data: any) {\r\n        switch (ac) {\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onButtonClick(node: Node, name: string) {\r\n        switch (name) {\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClickPropItem(node: any) {\r\n        let id = node.id;\r\n        if (id > 0) {\r\n            let row = designManager.getRowById(constants.tableName.prop, id);\r\n            let obj: any = { propId: id };\r\n            if (row.type == 11) {\r\n                obj.weaponLv = UserData.getInstance().getWeaponLv();\r\n            }\r\n            this.openLayer(constants.layers.PropInfoLayer, obj);\r\n        }\r\n    }\r\n\r\n    onClickWeaponItem(node: any) {\r\n        let id = node.item;\r\n        UserData.getInstance().$towerWeaponId = id;\r\n        this.initUI();\r\n    }\r\n\r\n    onClickBtnOpt() {\r\n        let ret = UserData.getInstance().towerWeaponAddLv();\r\n        switch (ret.st) {\r\n            case 1:\r\n                this.initUI();\r\n                break;\r\n            case 2:\r\n                this.createNotice(localText.maxLv);\r\n                break;\r\n            case 3:\r\n                this.showLackItem(ret.propId);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClickBtnSkin() {\r\n        audioManager.playEffect(\"btnClick\")\r\n        this.openLayer(constants.layers.SkinChangeLayer, () => {\r\n            this.setRoleSkin(this.getNodeByPath(\"ui/herobg/role\"));\r\n        });\r\n    }\r\n\r\n}\r\n\r\n"]}