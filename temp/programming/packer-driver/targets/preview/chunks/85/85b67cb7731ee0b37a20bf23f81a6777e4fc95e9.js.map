{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/layer/GuessResultLayer.ts"],"names":["Label","Node","sp","Sprite","SpriteFrame","tween","v3","_decorator","sdkManager","constants","designManager","eventManager","UserData","RewardLayer","ccclass","property","GuessResultLayer","type","Skeleton","_curSelectGuess","_curSelectBet","_propItem","_index","_dtTime","_isStartRun","onLoad","onEnable","onDisable","onDestroy","start","curGuess","layerData","myGuess","selectBet","guessItem1","spriteFrame","guessSprite","parseInt","selfNodeGuess","getChildByName","getComponent","guessNameSprite","position","armNodeGuess","self","to","call","resultNode","active","rewardNode","btnNode","closeBless","send","closeLayer","update","dt","openResult","result","Math","floor","random","str","console","log","stoneDraw","config","multiplier","result1","setSpriteFrame2","bundles","wwqVec","showYanhua","curBet","propItem","Id","Num","propdata","getRowById","tableName","prop","icon","string","getInstance","getRewardProp","doubleGet","openAd","st"],"mappings":"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","sourcesContent":["import { Label, Node, sp, Sprite, SpriteFrame, tween, v3, _decorator } from 'cc';\r\nimport { sdkManager } from '../../../sdk/sdkManager';\r\nimport { constants } from '../../data/constants';\r\nimport { designManager } from '../../manager/designManager';\r\nimport { eventManager } from '../../manager/eventManager';\r\nimport { PropItem, UserData } from '../../model/UserData';\r\nimport { RewardLayer } from './RewardLayer';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GuessResultLayer')\r\nexport class GuessResultLayer extends RewardLayer {\r\n\r\n    @property({ type: Node }) btnClose: Node = null;\r\n\r\n    @property(Sprite) guessItem2: Sprite = null;\r\n    @property(Sprite) guessItem1: Sprite = null;\r\n    @property(sp.Skeleton) spk: sp.Skeleton = null;\r\n\r\n    @property({ type: Node }) btnNode: Node = null;\r\n\r\n    @property({ type: Node }) resultNode: Node = null;\r\n\r\n    @property({ type: Node }) rewardNode: Node = null;\r\n\r\n    @property(SpriteFrame) guessSprite: SpriteFrame[] = [];\r\n    @property(SpriteFrame) guessNameSprite: SpriteFrame[] = [];\r\n\r\n    _curSelectGuess = -1\r\n    private _curSelectBet: any;\r\n\r\n    private _propItem = null\r\n\r\n    onLoad() {\r\n\r\n    }\r\n    onEnable() {\r\n\r\n    }\r\n\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    start() {\r\n        ///   console.log(\"tyqSDK.showCustomRectCenterAd\")\r\n        let curGuess = this.layerData.myGuess\r\n        this._curSelectBet = this.layerData.selectBet\r\n        this.guessItem1.spriteFrame = this.guessSprite[parseInt(curGuess)]\r\n        this.selfNodeGuess.getChildByName(\"cloth1\").getComponent(Sprite).spriteFrame = this.guessNameSprite[parseInt(curGuess)]\r\n\r\n        this._curSelectGuess = this.layerData.myGuess\r\n        this.selfNodeGuess.position = v3(-380, 0, 0)\r\n        this.armNodeGuess.position = v3(380, 0, 0)\r\n        let self = this\r\n        tween(this.selfNodeGuess).to(0.2, { position: v3(-190, 0, 0) }).call(function () {\r\n            self._isStartRun = true\r\n        }).start()\r\n        tween(this.armNodeGuess).to(0.2, { position: v3(190, 0, 0) }).start()\r\n\r\n        this.resultNode.active = false\r\n        this.rewardNode.active = false\r\n        this.btnNode.active = false\r\n    }\r\n\r\n    closeBless() {\r\n        eventManager.send(\"initGuess\")\r\n\r\n        this.closeLayer()\r\n    }\r\n\r\n    _index = 0\r\n    _dtTime = 0\r\n    _isStartRun = false\r\n\r\n    @property(Node) armNodeGuess: Node = null;\r\n    @property(Node) selfNodeGuess: Node = null;\r\n\r\n\r\n    protected update(dt: number): void {\r\n        if (!this._isStartRun) {\r\n            return\r\n        }\r\n        this._dtTime += dt\r\n        if (this._dtTime > 0.1) {\r\n            this._dtTime = 0\r\n            this.armNodeGuess.getChildByName(\"icon\").getComponent(Sprite).spriteFrame = this.guessSprite[this._index % 3]\r\n            this.armNodeGuess.getChildByName(\"cloth1\").getComponent(Sprite).spriteFrame = this.guessNameSprite[this._index % 3]\r\n\r\n            this._index++\r\n            if (this._index > 20) {\r\n                this._isStartRun = false\r\n                this.openResult()\r\n            }\r\n        }\r\n    }\r\n\r\n    openResult() {\r\n\r\n        let result = Math.floor(Math.random() * 3)\r\n        let str = [\"石头\", \"剪刀\", \"布\"]\r\n        console.log(\"我方：\", str[this._curSelectGuess])\r\n        console.log(\"敌方：\", str[result])\r\n        this.armNodeGuess.getChildByName(\"icon\").getComponent(Sprite).spriteFrame = this.guessSprite[result]\r\n        this.armNodeGuess.getChildByName(\"cloth1\").getComponent(Sprite).spriteFrame = this.guessNameSprite[result]\r\n\r\n        let stoneDraw = designManager.config[\"stoneDraw\"]\r\n        //console.log(\"stoneDraw \", stoneDraw)\r\n        let multiplier = 1\r\n        this.resultNode.active = true\r\n        this.resultNode.position = v3(0, 550, 0)\r\n        tween(this.resultNode).to(0.2, { position: v3(0, 480, 0) }).start()\r\n\r\n        let result1 = this.resultNode.getChildByName(\"result1\")\r\n\r\n        result1.position = v3(0, 150, 0)\r\n        let self = this\r\n        tween(result1).to(0.2, { position: v3(0, 33, 0) }).call(function () {\r\n            self.btnNode.active = true\r\n        }).start()\r\n\r\n        if (this._curSelectGuess - result == -1 || this._curSelectGuess - result == 2) {\r\n            console.log(\" ---- win\")\r\n            multiplier = stoneDraw[0]\r\n            this.setSpriteFrame2(result1, \"activityRes/result1\", null, constants.bundles.wwqVec)\r\n            this.showYanhua()\r\n        } else if (this._curSelectGuess == result) {\r\n            console.log(\" ---- 平局\")\r\n            multiplier = stoneDraw[1]\r\n            this.setSpriteFrame2(result1, \"activityRes/result2\", null, constants.bundles.wwqVec)\r\n        } else {\r\n            this.setSpriteFrame2(result1, \"activityRes/result3\", null, constants.bundles.wwqVec)\r\n            console.log(\" ---- lose\")\r\n            multiplier = stoneDraw[2]\r\n        }\r\n\r\n        let curBet = designManager.config[\"stone1\"][this._curSelectBet]\r\n        let propItem: PropItem = {\r\n            Id: curBet[0],\r\n            Num: curBet[1] * multiplier\r\n        };\r\n\r\n        let propdata = designManager.getRowById(constants.tableName.prop, curBet[0])\r\n        this.setSpriteFrame2(this.rewardNode.getChildByName(\"icon\"), \"prop/\" + propdata.icon)\r\n        this.rewardNode.active = true\r\n        this.rewardNode.getChildByName(\"numLab\").getComponent(Label).string = curBet[1] * multiplier + \"\"\r\n        UserData.getInstance().getRewardProp([propItem])\r\n        this._propItem = [propItem]\r\n        //    this.openLayer(constants.layers.GuessResultLayer, { propArr: [propItem], myGuess: this._curSelectGuess, otherGuess: result });\r\n    }\r\n\r\n    doubleGet() {\r\n        let self = this\r\n        sdkManager.openAd(\"猜拳双倍奖励\", (st: number) => {\r\n            if (st == 1) {\r\n                if (self._propItem)\r\n                    UserData.getInstance().getRewardProp(self._propItem)\r\n\r\n                self.closeBless()\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n"]}