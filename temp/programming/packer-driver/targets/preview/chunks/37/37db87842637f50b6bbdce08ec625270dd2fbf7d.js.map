{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/compoment/item/prop/Prop.ts"],"names":["BoxCollider2D","Contact2DType","find","Vec2","_decorator","cocosUtil","utilTools","constants","designManager","mapModel","physicsGroup","AnimationCtrl","BaseLayer","ccclass","property","Prop","id","row","extraObj","bodyNode","aniNode","collider","animationCtrl","propUtil","isFollowPlayer","followSpeed","onLoad","getComponent","addComponent","node","on","BEGIN_CONTACT","contactBegin","onEnable","init","worldPos","getRowById","tableName","prop","unscheduleAllCallbacks","enabled","pos","convertToNodeSpace","setPosition","active","setSpriteFrame","icon","addComponentOnce","e","selfCollider","otherCollider","group","PLAYER_BULLET","propIds","box1","playAnimationOnce","recycleSelf","tb","getTable","arr","i","mapId","push","ret","getRowByWeight","num","getFloatValue","minNum","maxNum","propId","type","equip","propSystem","addProp","convertToWorldSpace","contactPlayer","notContact","autoGet","contactStart","doDisPlayerGet","dis","skillSystem","getSkill2PropGetAddDis","playerGetProp","getProp","recyclePropNode","update","dt","playerPos","player","getPosition","moveDis","direction","subtract","normalize","multiplyScalar","add","afterDirection","afterAngle","radianToAngle","angle"],"mappings":"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","sourcesContent":["import { BoxCollider2D, Collider2D, Contact2DType, find, Node, Vec2, Vec3, _decorator } from 'cc';\r\nimport { cocosUtil } from '../../../../utils/cocosUtil';\r\nimport { utilTools } from '../../../../utils/utilTools';\r\nimport { constants } from '../../../data/constants';\r\nimport { designManager } from '../../../manager/designManager';\r\nimport { mapModel } from '../../../model/mapModel';\r\nimport { physicsGroup } from '../../../other/physicsGroup';\r\nimport { AnimationCtrl } from '../../base/AnimationCtrl';\r\nimport { BaseLayer } from '../../base/BaseLayer';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('Prop')\r\nexport class Prop extends BaseLayer {\r\n\r\n    id: number;\r\n    row: any;\r\n    extraObj: any;\r\n\r\n    bodyNode: Node;\r\n    aniNode: Node;\r\n    collider: BoxCollider2D;\r\n    animationCtrl: AnimationCtrl;\r\n\r\n    propUtil: any;\r\n\r\n    isFollowPlayer: boolean;\r\n    followSpeed: number;\r\n\r\n    onLoad() {\r\n        this.collider = this.getComponent(BoxCollider2D);\r\n        this.animationCtrl = this.addComponent(AnimationCtrl);\r\n        this.bodyNode = find(\"body\", this.node);\r\n        this.aniNode = find(\"ani\", this.node);\r\n\r\n        if (this.collider) {\r\n            this.collider.on(Contact2DType.BEGIN_CONTACT, this.contactBegin, this);\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n\r\n    }\r\n\r\n    init(id: number, worldPos: Vec3, extraObj?: any) {\r\n        if (!this.bodyNode) {\r\n            this.onLoad();\r\n        }\r\n        this.id = id;\r\n        this.row = designManager.getRowById(constants.tableName.prop, id);\r\n        this.extraObj = extraObj;\r\n        this.unscheduleAllCallbacks();\r\n        if (this.collider) {\r\n            this.collider.enabled = true;\r\n        }\r\n\r\n        this.isFollowPlayer = false;\r\n        this.followSpeed = -1000;\r\n\r\n        let pos = cocosUtil.convertToNodeSpace(this.node, worldPos);\r\n        this.node.setPosition(pos);\r\n\r\n        if (this.aniNode) {\r\n            this.aniNode.active = true;\r\n        }\r\n        this.setSpriteFrame(this.bodyNode, this.row.icon);\r\n\r\n        try {\r\n            this.propUtil = cocosUtil.addComponentOnce(this, \"Prop\" + id);\r\n            this.propUtil.unscheduleAllCallbacks();\r\n            this.propUtil.init(this);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    contactBegin(selfCollider: Collider2D, otherCollider: Collider2D) {\r\n        if (otherCollider.group == physicsGroup.PLAYER_BULLET) {\r\n            if (this.id == constants.propIds.box1) {\r\n                // 打到木箱\r\n                this.collider.enabled = false;\r\n                this.animationCtrl.playAnimationOnce(\"ani\", () => {\r\n                    this.recycleSelf();\r\n                    // 按照权重，产生道具\r\n                    let tb = designManager.getTable(constants.tableName.box1);\r\n                    let arr = [];\r\n                    for (let i in tb) {\r\n                        let row = tb[i];\r\n                        if (row.mapId == 0 || row.mapId == mapModel.mapId) {\r\n                            arr.push(row);\r\n                        }\r\n                    }\r\n                    let ret = utilTools.getRowByWeight(arr);\r\n                    let num = utilTools.getFloatValue(ret.minNum, ret.maxNum, true);\r\n                    let extraObj: any = {};\r\n                    extraObj.num = num;\r\n                    extraObj.propId = ret.propId;\r\n                    let propId = ret.propId;\r\n                    let row = designManager.getRowById(constants.tableName.prop, propId);\r\n                    if (row.type == 8 || row.type == 11) {\r\n                        propId = constants.propIds.equip;\r\n                    }\r\n                    mapModel.propSystem.addProp(propId, cocosUtil.convertToWorldSpace(this.node), extraObj);\r\n                });\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    contactPlayer() {\r\n        if (this.propUtil && this.propUtil.notContact) {\r\n            return;\r\n        }\r\n        if (this.propUtil && this.propUtil.autoGet) {\r\n            // 自动获得\r\n            return;\r\n        }\r\n        this.node.active = true;\r\n        if (this.collider) {\r\n            this.collider.enabled = false;\r\n        }\r\n        this.isFollowPlayer = true;\r\n        if (this.aniNode) {\r\n            this.aniNode.active = false;\r\n        }\r\n        if (this.propUtil && this.propUtil.contactStart) {\r\n            this.propUtil.contactStart();\r\n        }\r\n    }\r\n\r\n    doDisPlayerGet(dis: number) {\r\n        if (this.collider) {\r\n            // 碰撞体来管理的\r\n            return;\r\n        }\r\n        if (dis > 100 + mapModel.skillSystem.getSkill2PropGetAddDis()) {\r\n            return;\r\n        }\r\n        this.contactPlayer();\r\n    }\r\n\r\n    // 玩家吃到道具\r\n    playerGetProp() {\r\n        this.recycleSelf();\r\n        this.isFollowPlayer = false;\r\n        let num = 1;\r\n        if (this.extraObj && this.extraObj.num > 0) {\r\n            num = this.extraObj.num;\r\n        }\r\n        let propId = this.id;\r\n        if (this.id == constants.propIds.equip) {\r\n            propId = this.extraObj.propId;\r\n        }\r\n        mapModel.propSystem.getProp(propId, num);\r\n    }\r\n\r\n    recycleSelf() {\r\n        mapModel.propSystem.recyclePropNode(this.node);\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (!this.isFollowPlayer) {\r\n            return;\r\n        }\r\n        let playerPos = mapModel.player.node.getPosition();\r\n        let pos = this.node.getPosition();\r\n        this.followSpeed += 50;\r\n        let moveDis = this.followSpeed * dt;\r\n        let direction = playerPos.subtract(pos).normalize().multiplyScalar(moveDis);\r\n        pos.add(direction);\r\n        this.node.setPosition(pos);\r\n\r\n        if (moveDis > 0) {\r\n            playerPos = mapModel.player.node.getPosition();\r\n            let afterDirection = playerPos.subtract(pos);\r\n            let afterAngle = utilTools.radianToAngle(Vec2.angle(direction, afterDirection));\r\n            if (afterAngle > 90) {\r\n                this.playerGetProp();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n"]}