{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/common/redPointManager.ts"],"names":["RedPointManager","sys","constants","msgac","eventManager","SingleInstance","key","gameName","getRedPointByLayer","layer","obj","localStorage","getItem","needSave","JSON","parse","layerObj","setItem","stringify","setRedPointByLayer","send","refreshRedPoint","hasRedPointValue","layerName","value","undefined","Array","isArray","rpIndex","indexOf","length","addRedPointValue","push","removeRedPointValue","info","splice","clearRedPointLayer","redPointManager","getInstance"],"mappings":"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","sourcesContent":["import { sys } from \"cc\";\r\nimport { constants } from \"../game/data/constants\";\r\nimport { msgac } from \"../game/data/msgac\";\r\nimport { eventManager } from \"../game/manager/eventManager\";\r\nimport { SingleInstance } from \"./SingleInstance\";\r\n\r\nclass RedPointManager extends SingleInstance {\r\n\r\n    key: string = constants.gameName + \"_redPoint\";\r\n\r\n    getRedPointByLayer(layer: string) {\r\n        let obj: any = sys.localStorage.getItem(this.key);\r\n        let needSave = false;\r\n        if (!obj) {\r\n            obj = {};\r\n            needSave = true;\r\n        } else {\r\n            obj = JSON.parse(obj);\r\n        }\r\n\r\n        let layerObj = obj[layer];\r\n        if (!layerObj) {\r\n            layerObj = {};\r\n            obj[layer] = layerObj;\r\n            needSave = true;\r\n        }\r\n\r\n        if (needSave) {\r\n            sys.localStorage.setItem(this.key, JSON.stringify(obj));\r\n        }\r\n\r\n        return layerObj;\r\n    }\r\n\r\n    setRedPointByLayer(layer: string, layerObj: any) {\r\n        let obj: any = sys.localStorage.getItem(this.key);\r\n        if (!obj) {\r\n            obj = {};\r\n        } else {\r\n            obj = JSON.parse(obj);\r\n        }\r\n        obj[layer] = layerObj;\r\n        sys.localStorage.setItem(this.key, JSON.stringify(obj));\r\n\r\n        eventManager.send(msgac.refreshRedPoint);\r\n    }\r\n\r\n    hasRedPointValue(layerName: string, key: string, value?: any) {\r\n        let obj = this.getRedPointByLayer(layerName);\r\n\r\n        if (value != undefined) {\r\n            if (Array.isArray(obj[key])) {\r\n                let rpIndex = obj[key].indexOf(value);\r\n                if (rpIndex != -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        if (Array.isArray(obj[key])) {\r\n            if (obj[key].length > 0) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        if (obj[key]) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    addRedPointValue(layerName: string, key: string, value?: any) {\r\n        let obj = this.getRedPointByLayer(layerName);\r\n        if (value) {\r\n            if (!Array.isArray(obj[key])) {\r\n                obj[key] = [];\r\n            }\r\n            let rpIndex = obj[key].indexOf(value);\r\n            if (rpIndex == -1) {\r\n                obj[key].push(value);\r\n                this.setRedPointByLayer(layerName, obj);\r\n            }\r\n        } else {\r\n            obj[key] = 1;\r\n            this.setRedPointByLayer(layerName, obj);\r\n        }\r\n    }\r\n\r\n    removeRedPointValue(layerName: string, key: string, value?: any) {\r\n        let obj = this.getRedPointByLayer(layerName);\r\n        let info = obj[key];\r\n\r\n        if (value != undefined) {\r\n            if (Array.isArray(info)) {\r\n                let rpIndex = info.indexOf(value);\r\n                if (rpIndex != -1) {\r\n                    obj[key].splice(rpIndex, 1);\r\n                    this.setRedPointByLayer(layerName, obj);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        if (info) {\r\n            delete obj[key];\r\n            this.setRedPointByLayer(layerName, obj);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clearRedPointLayer(layerName: string, key?: string) {\r\n        let obj = this.getRedPointByLayer(layerName);\r\n        if (key == undefined) {\r\n            // 清空所有\r\n            this.setRedPointByLayer(layerName, undefined);\r\n        } else {\r\n            delete obj[key];\r\n            this.setRedPointByLayer(layerName, obj);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst redPointManager = RedPointManager.getInstance<RedPointManager>();\r\n\r\nexport { redPointManager };\r\n\r\n"]}