{"version":3,"sources":["file:///G:/cocos/%E6%9C%AB%E6%97%A5%E7%89%B9%E5%B7%A5%E9%98%9F/assets/scripts/game/manager/RedPointLogicMgr.ts"],"names":["RedPointLogicMgr","find","v3","UITransform","Prefab","instantiate","constants","msgac","UserData","eventManager","GParam","MapWrap","resManager","reg","RED_POINT_NAME","RED_POINT_LABEL_NAME","RPointMask","RedpointPos","INVALID_VALUE_ZERO","INVALID_VALUE","INVALID_STRING_VALUE","_redPointMask","_waitSends","_waitChecks","_updateHandler","_unlockMasks","_targets","_targetWraps","_masks","ins","_instance","initGame","update","updateCheck","updateVisit","checkState","initEvent","stopUpdate","keys","Object","key","test","push","parseInt","on","redPointEvent","onCMSGRPValueSetting","updateState","checkIndex","indexOf","target","nodes","targetIt","get","uuid","set","node","value","cMask","mask","maskIt","setRPointView","subPath","effectType","posType","cb","off","index","splice","length","delete","loginOut","offWithSender","clear","sendValueSettingMsg","forceStop","sendValuesSettingMsgs","i","timingCheck","_","param","rp","startUpdate","setInterval","bind","clearInterval","shift","RPM_Client","RPM_PropWear","getInstance","checkBestPropToWear","RPM_BlessProp","checkPropCanBless","mask_value","maskIter","obj","parent","aniNode","getChildByName","active","loadAsset","bundles","prefab","err","red","uiTransform","getComponent","addComponent","Main","position","width","anchorX","height","anchorY","right","name","addChild","getMaskRedpointState","masks"],"mappings":"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","sourcesContent":["import { _decorator, Node, find, isValid, AnimationClip, js, v3, sp, Vec3, UITransform, Prefab, instantiate } from 'cc';\r\nimport { constants } from '../data/constants';\r\nimport { msgac } from '../data/msgac';\r\nimport { UserData } from '../model/UserData';\r\nimport { eventManager } from './eventManager';\r\nimport GParam from './GParam';\r\nimport { MapWrap } from './MapWrap';\r\nimport { resManager } from './resManager';\r\n\r\nconst reg = /^[0-9]+.?[0-9]*$/;\r\n\r\nexport const RED_POINT_NAME = \"red_point\";\r\nexport const RED_POINT_LABEL_NAME = \"label\";\r\n\r\n\r\nexport enum RPointMask {\r\n\t/**客户端红点起始*/\r\n\tRPM_Client = 300,\r\n\tRPM_PropWear,\r\n\tRPM_BlessProp,\r\n\r\n}\r\n\r\n/**\r\n * 红点位置类型\r\n */\r\nexport enum RedpointPos {\r\n\tMain,\r\n\tright,\r\n}\r\n\r\n/** 无效值 */\r\nexport const INVALID_VALUE_ZERO = 0;\r\nexport const INVALID_VALUE = -1;\r\nexport const INVALID_STRING_VALUE = \"-1\";\r\n\r\nexport class RedPointLogicMgr {\r\n\tprotected static _instance: RedPointLogicMgr = null;\r\n\tpublic static ins(): RedPointLogicMgr {\r\n\t\tif (this._instance == null) {\r\n\t\t\tthis._instance = new RedPointLogicMgr();\r\n\t\t\tthis._instance.initGame()\r\n\t\t}\r\n\t\treturn this._instance;\r\n\t}\r\n\r\n\t/** 红点数值 */\r\n\tprotected _redPointMask: MapWrap<number, boolean>;\r\n\t/** 缓存更新 */\r\n\tprotected _waitSends: number[];\r\n\t/** 缓存计算 */\r\n\tprotected _waitChecks: number[];\r\n\t/** 定时器句柄 */\r\n\tprotected _updateHandler: number = INVALID_VALUE;\r\n\t/** 待解锁mask */\r\n\tprotected _unlockMasks: number[];\r\n\r\n\t/** 红点注册表 通过uuid进行注册 */\r\n\tprotected _targets: MapWrap<string, RPointNode[]>;\r\n\tprotected _targetWraps: MapWrap<string, Node>;\r\n\tprotected _masks: MapWrap<number, Node[]>;\r\n\r\n\t/** 更新 */\r\n\tprotected update() {\r\n\t\tthis.updateCheck();\r\n\t\tthis.updateVisit();\r\n\t\tthis.checkState();\r\n\t}\r\n\r\n\tpublic initGame() {\r\n\t\tthis.initEvent();\r\n\t\tthis._redPointMask = new MapWrap<number, boolean>();\r\n\t\tthis._waitSends = [];\r\n\t\tthis._waitChecks = [];\r\n\t\tthis._unlockMasks = [];\r\n\t\tthis._targets = new MapWrap<string, RPointNode[]>();\r\n\t\tthis._targetWraps = new MapWrap<string, Node>();\r\n\t\tthis._masks = new MapWrap<number, Node[]>();\r\n\t\tthis.stopUpdate();\r\n\t\t// 本地红点检测\r\n\t\tlet keys = Object.keys(RPointMask);\r\n\t\tfor (let key of keys) {\r\n\t\t\tif (!reg.test(key)) continue;\r\n\t\t\tthis._waitChecks.push(parseInt(key));\r\n\t\t}\r\n\t\tthis.checkState();\r\n\t\t// this.onCMSUserChange$tip();\r\n\t}\r\n\r\n\tprotected initEvent() {\r\n\t\teventManager.on(msgac.redPointEvent, this.onCMSGRPValueSetting, this)\r\n\t\t//eventManager.off(this)\r\n\t\t// GCtrl.ES.on(CMsg.rPoint.valueSetting, this, this.onCMSGRPValueSetting.bind(this), PRIORITY_VIEW);\r\n\t\t// GCtrl.ES.on(CMsg.client.bag.onBagItemChange, this, this.updateState.bind(this), PRIORITY_VIEW);\r\n\t\t// GCtrl.ES.on(CMsg.client.hero.onAddHero, this, this.updateState.bind(this), PRIORITY_VIEW);\r\n\t}\r\n\r\n\tprotected updateState() {\r\n\t\tlet keys = Object.keys(RPointMask);\r\n\t\tfor (let key of keys) {\r\n\t\t\tif (!reg.test(key)) continue;\r\n\t\t\tlet checkIndex = this._waitChecks.indexOf(parseInt(key));\r\n\t\t\tif (checkIndex === INVALID_VALUE) {\r\n\t\t\t\tthis._waitChecks.push(parseInt(key));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.checkState();\r\n\t}\r\n\r\n\t//在需要红点的地方用该方法进行注册\r\n\tpublic on(target: Node, nodes: RPointNode[]) {\r\n\t\tlet targetIt = this._targets.get(target.uuid);\r\n\t\tif (!targetIt) {\r\n\t\t\ttargetIt = [];\r\n\t\t\tthis._targets.set(target.uuid, targetIt);\r\n\t\t\tthis._targetWraps.set(target.uuid, target);\r\n\t\t}\r\n\t\ttargetIt.push(...nodes);\r\n\r\n\t\tfor (let node of nodes) {\r\n\t\t\tlet value = false;\r\n\t\t\tfor (let cMask of node.mask) {\r\n\t\t\t\tlet maskIt = this._masks.get(cMask);\r\n\t\t\t\tif (!maskIt) {\r\n\t\t\t\t\tmaskIt = [];\r\n\t\t\t\t\tthis._masks.set(cMask, maskIt);\r\n\t\t\t\t}\r\n\t\t\t\tif (maskIt.indexOf(target) == INVALID_VALUE) {\r\n\t\t\t\t\tmaskIt.push(target);\r\n\t\t\t\t}\r\n\t\t\t\tvalue = value || this._redPointMask.get(cMask);\r\n\t\t\t}\r\n\t\t\tthis.setRPointView(target, node.subPath, value, node.effectType, node.posType, node.cb);\r\n\t\t}\r\n\t}\r\n\r\n\t/**注销红点 */\r\n\tpublic off(target: Node) {\r\n\t\tlet targetIt = this._targets.get(target.uuid);\r\n\t\tif (!targetIt) return;\r\n\t\tfor (let node of targetIt) {\r\n\t\t\tfor (let cMask of node.mask) {\r\n\t\t\t\tlet maskIt = this._masks.get(cMask);\r\n\t\t\t\tif (maskIt) {\r\n\t\t\t\t\tlet index = maskIt.indexOf(target);\r\n\t\t\t\t\tif (index != INVALID_VALUE)\r\n\t\t\t\t\t\tmaskIt.splice(index, 1);\r\n\t\t\t\t\tif (maskIt.length == 0) this._masks.delete(cMask);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._targets.delete(target.uuid);\r\n\t\tthis._targetWraps.delete(target.uuid);\r\n\t}\r\n\r\n\tpublic loginOut() {\r\n\t\tthis.stopUpdate();\r\n\t\teventManager.offWithSender(this)\r\n\t\t//\tGCtrl.ES.off(this); \r\n\t\tthis._waitChecks = [];\r\n\t\tthis._waitSends = [];\r\n\t\tthis._targets.clear();\r\n\t\tthis._targetWraps.clear();\r\n\t\tthis._masks.clear();\r\n\t}\r\n\r\n\tpublic sendValueSettingMsg(mask: number, value: boolean, forceStop?: boolean) {\r\n\t\tlet target: RPointValue = { mask: mask, value: value, forceStop: forceStop }\r\n\t\t//eventManager.send(mask)\r\n\t\tthis.onCMSGRPValueSetting(this, new GParam(target))\r\n\t\t//GCtrl.ES.emit(CMsg.rPoint.valueSetting, GCtrl.param(target));\r\n\t}\r\n\r\n\tpublic sendValuesSettingMsgs(mask: number[], value: boolean, forceStop?: boolean) {\r\n\t\tfor (let i = 0; i < mask.length; i++) {\r\n\t\t\tthis.sendValueSettingMsg(mask[i], value, forceStop);\r\n\t\t}\r\n\t}\r\n\r\n\t/**定时检测红点 */\r\n\tpublic timingCheck() {\r\n\t\t//需要定时检测的红点\r\n\t\t//GameMgr.redMgr.sendValueSettingMsg(RPointMask.RPM_DrawFree, false);\r\n\t}\r\n\r\n\t/**\r\n\t  * 红点值变更\r\n\t  * @param _ \r\n\t  * @param param \r\n\t  */\r\n\tprotected onCMSGRPValueSetting(_, param: GParam) {\r\n\t\tlet rp = param.get<RPointValue>();\r\n\t\t// 如果传过来的红点为True，则表示必定红点；如果为false,则需要重新计算\r\n\t\tif (rp.value == true) {\r\n\t\t\t// 如果等待计算项中存在该红点，则删除\r\n\t\t\tlet checkIndex = this._waitChecks.indexOf(rp.mask);\r\n\t\t\tif (checkIndex != INVALID_VALUE) {\r\n\t\t\t\tthis._waitChecks.splice(checkIndex, 1);\r\n\t\t\t}\r\n\t\t\t// 如果当前的值为true，则不需要更新\r\n\t\t\tif (this._redPointMask.get(rp.mask)) return;\r\n\t\t\tthis._redPointMask.set(rp.mask, rp.value);\r\n\t\t\t// 更新更新待推送的红点\r\n\t\t\tif (this._waitSends.indexOf(rp.mask) != INVALID_VALUE) return;\r\n\t\t\tthis._waitSends.push(rp.mask);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (rp.forceStop == true) {\r\n\t\t\t\tlet checkIndex = this._waitChecks.indexOf(rp.mask);\r\n\t\t\t\tif (checkIndex != INVALID_VALUE) {\r\n\t\t\t\t\tthis._waitChecks.splice(checkIndex, 1);\r\n\t\t\t\t}\r\n\t\t\t\tthis._redPointMask.set(rp.mask, rp.value);\r\n\t\t\t\t// 更新更新待推送的红点\r\n\t\t\t\tif (this._waitSends.indexOf(rp.mask) != INVALID_VALUE) return;\r\n\t\t\t\tthis._waitSends.push(rp.mask);\r\n\t\t\t}\r\n\t\t\t// 重新检测红点的值\r\n\t\t\t// 如果当前待检测列表中存在该枚举，等待检测，否则加入待检测列表\r\n\t\t\telse if (this._waitChecks.indexOf(rp.mask) == INVALID_VALUE) {\r\n\t\t\t\tthis._waitChecks.push(rp.mask);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.checkState();\r\n\t}\r\n\r\n\r\n\tprotected startUpdate() {\r\n\t\tif (this._updateHandler != INVALID_VALUE) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._updateHandler = setInterval(this.update.bind(this), 100) as any;\r\n\t}\r\n\r\n\tprotected stopUpdate() {\r\n\t\tif (INVALID_VALUE == this._updateHandler) return;\r\n\t\tclearInterval(this._updateHandler);\r\n\t\tthis._updateHandler = INVALID_VALUE;\r\n\t}\r\n\r\n\tprotected checkState() {\r\n\t\tif (this._waitChecks.length > 0 || this._waitSends.length > 0) {\r\n\t\t\tif (this._updateHandler == INVALID_VALUE) this.startUpdate();\r\n\t\t}\r\n\t\telse if (this._waitChecks.length == 0 && this._waitSends.length == 0) {\r\n\t\t\tif (this._updateHandler != INVALID_VALUE) this.stopUpdate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**更新状态 */\r\n\tprotected updateCheck() {\r\n\t\tif (this._waitChecks.length == 0) return;\r\n\t\tlet mask = this._waitChecks.shift();\r\n\t\tlet value = true;\r\n\t\tif (value) {\r\n\t\t\tvalue = false;\r\n\t\t\tswitch (mask) {\r\n\t\t\t\tcase RPointMask.RPM_Client: {\r\n\t\t\t\t\t//\tvalue = GameMgr.userMgr.checkVipRedPoint(mask === RPointMask.RPM_Vip_Frist);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase RPointMask.RPM_PropWear: {\r\n\t\t\t\t\tvalue = UserData.getInstance().checkBestPropToWear()\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase RPointMask.RPM_BlessProp: {\r\n\t\t\t\t\tvalue = UserData.getInstance().checkPropCanBless()\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvalue = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._redPointMask.get(mask) == value) return;\r\n\t\tthis._redPointMask.set(mask, value);\r\n\t\t// 更新更新待推送的红点\r\n\t\tif (this._waitSends.indexOf(mask) != INVALID_VALUE) return;\r\n\t\tthis._waitSends.push(mask);\r\n\t}\r\n\r\n\t/**表现更新 */\r\n\tprotected updateVisit() {\r\n\t\tif (this._waitSends.length == 0) return;\r\n\t\tlet mask = this._waitSends.shift();\r\n\t\tlet mask_value = this._redPointMask.get(mask);\r\n\r\n\t\t// 取出所有需要变更的节点\r\n\t\tlet maskIter = this._masks.get(mask);\r\n\t\tif (!maskIter || maskIter.length == 0) return;\r\n\t\tfor (let obj of maskIter) {\r\n\t\t\tlet targetIt = this._targets.get(obj.uuid);\r\n\t\t\tif (!targetIt) return;\r\n\t\t\tfor (let node of targetIt) {\r\n\t\t\t\tif (!node) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (node.mask.indexOf(mask) == INVALID_VALUE) continue;\r\n\t\t\t\tif (mask_value == true)\r\n\t\t\t\t\tthis.setRPointView(obj, node.subPath, mask_value, node.effectType, node.posType, node.cb);\r\n\t\t\t\telse {\r\n\t\t\t\t\t// 如果为false则需要取组合值\r\n\t\t\t\t\tlet value = false;\r\n\t\t\t\t\tfor (let cMask of node.mask) {\r\n\t\t\t\t\t\tif (this._redPointMask.get(cMask)) {\r\n\t\t\t\t\t\t\tvalue = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setRPointView(obj, node.subPath, value, node.effectType, node.posType, node.cb);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setRPointView(parent: Node, subPath: string | Node, value: boolean, effectType?: number, posType?: number, cb?: any) {\r\n\t\tlet node = parent;\r\n\t\tif (subPath) {\r\n\t\t\tif (typeof (subPath) == 'string') {\r\n\t\t\t\tnode = find(subPath, parent);\r\n\t\t\t} else {\r\n\t\t\t\tnode = subPath\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!node) return;\r\n\t\t//switch (effectType) {\r\n\t\t//\tcase RedpointEffect.REDPOINT: {\r\n\r\n\t\tlet aniNode = node.getChildByName(RED_POINT_NAME);\r\n\t\tif (!value) {\r\n\t\t\tif (aniNode)\r\n\t\t\t\taniNode.active = false;\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tif (aniNode) {\r\n\t\t\t\taniNode.active = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tresManager.loadAsset(constants.bundles.prefab, \"redpoint/gth\", Prefab, () => { }, (err, prefab) => {\r\n\t\t\tlet red = instantiate(prefab)\r\n\t\t\tlet uiTransform = node.getComponent(UITransform) || node.addComponent(UITransform)\r\n\t\t\tswitch (posType) {\r\n\t\t\t\tcase RedpointPos.Main: {\r\n\t\t\t\t\tred.position = v3(uiTransform.width * (1 - uiTransform.anchorX), uiTransform.height * (1 - uiTransform.anchorY) - 20, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase RedpointPos.right:\r\n\t\t\t\t\tred.position = v3(uiTransform.width * (1 - uiTransform.anchorX) - 30, uiTransform.height * (1 - uiTransform.anchorY) - 0, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\tred.position = v3(uiTransform.width * (1 - uiTransform.anchorX) - 25, uiTransform.height * (1 - uiTransform.anchorY) - 10, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//\tred.getComponent(UITransform).setSiblingIndex(8888)\r\n\t\t\tred.name = RED_POINT_NAME\r\n\t\t\tnode.addChild(red);\r\n\t\t\t// let sk = red.addComponent(sp.Skeleton);\r\n\t\t\t// sk.setAnimation(0, 'gth', false);\r\n\t\t\t// sk.setCompleteListener(function () {\r\n\t\t\t// \tsk.addAnimation(0, 'gth', false, 1.5);\r\n\t\t\t// })\r\n\t\t\t//sk.timeScale = 0.7\r\n\t\t})\r\n\r\n\t\t//break;\r\n\t\t//}\r\n\t\t//}\r\n\t\tcb && cb(node);\r\n\t}\r\n\r\n\t/**获取该节点红点应处于的状态 */\r\n\tpublic getMaskRedpointState(masks: number[]) {\r\n\t\tfor (let i = 0; i < masks.length; i++) {\r\n\t\t\tlet value = this._redPointMask.get(masks[i]);\r\n\t\t\tif (value) return value\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n\r\nexport interface RPointNode {\r\n\tmask: number[];\r\n\tsubPath: string;\r\n\tposType?: number;\r\n\teffectType?: number;\r\n\tcb?: Function;\r\n}\r\ninterface RPointValue {\r\n\tmask: number;\r\n\tvalue: boolean;\r\n\tforceStop?: boolean;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}